//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TrackerMVC {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("trackerNCFSDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class trackerNCFSDataSet : global::System.Data.DataSet {
        
        private exp_CLPDataTable tableexp_CLP;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public trackerNCFSDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected trackerNCFSDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["exp_CLP"] != null)) {
                    base.Tables.Add(new exp_CLPDataTable(ds.Tables["exp_CLP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public exp_CLPDataTable exp_CLP {
            get {
                return this.tableexp_CLP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            trackerNCFSDataSet cln = ((trackerNCFSDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["exp_CLP"] != null)) {
                    base.Tables.Add(new exp_CLPDataTable(ds.Tables["exp_CLP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableexp_CLP = ((exp_CLPDataTable)(base.Tables["exp_CLP"]));
            if ((initTable == true)) {
                if ((this.tableexp_CLP != null)) {
                    this.tableexp_CLP.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "trackerNCFSDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/trackerNCFSDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableexp_CLP = new exp_CLPDataTable();
            base.Tables.Add(this.tableexp_CLP);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeexp_CLP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            trackerNCFSDataSet ds = new trackerNCFSDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void exp_CLPRowChangeEventHandler(object sender, exp_CLPRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class exp_CLPDataTable : global::System.Data.TypedTableBase<exp_CLPRow> {
            
            private global::System.Data.DataColumn columnRunningNo;
            
            private global::System.Data.DataColumn columnCLPNo;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnSBEntryID;
            
            private global::System.Data.DataColumn columnSBNo;
            
            private global::System.Data.DataColumn columnSBDate;
            
            private global::System.Data.DataColumn columnShipperID;
            
            private global::System.Data.DataColumn columnAgentID;
            
            private global::System.Data.DataColumn columnLineName;
            
            private global::System.Data.DataColumn columnCartingDate;
            
            private global::System.Data.DataColumn columnConsigneeID;
            
            private global::System.Data.DataColumn columnCargoDesc;
            
            private global::System.Data.DataColumn columnTotalQty;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPkgType;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnEntryID;
            
            private global::System.Data.DataColumn columnContainerNo;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnContainerType;
            
            private global::System.Data.DataColumn columnSealNo;
            
            private global::System.Data.DataColumn columnAgentSeal;
            
            private global::System.Data.DataColumn columnCustomSeal;
            
            private global::System.Data.DataColumn columnViaNo;
            
            private global::System.Data.DataColumn columnPOD;
            
            private global::System.Data.DataColumn columnFPD;
            
            private global::System.Data.DataColumn columnAgencyID;
            
            private global::System.Data.DataColumn columnsubagencyname;
            
            private global::System.Data.DataColumn columnAddedBy;
            
            private global::System.Data.DataColumn columnAddedOn;
            
            private global::System.Data.DataColumn columnVesselName;
            
            private global::System.Data.DataColumn columnFOB;
            
            private global::System.Data.DataColumn columnTareWeight;
            
            private global::System.Data.DataColumn columnShipper;
            
            private global::System.Data.DataColumn columnConsignee;
            
            private global::System.Data.DataColumn columnCHAID;
            
            private global::System.Data.DataColumn columnUNNo;
            
            private global::System.Data.DataColumn columnVoyage;
            
            private global::System.Data.DataColumn columnRotationNo;
            
            private global::System.Data.DataColumn columnCHAName;
            
            private global::System.Data.DataColumn columnAgentName;
            
            private global::System.Data.DataColumn columnIsCancel;
            
            private global::System.Data.DataColumn columnCancelledBy;
            
            private global::System.Data.DataColumn columnCancelledOn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public exp_CLPDataTable() {
                this.TableName = "exp_CLP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal exp_CLPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected exp_CLPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RunningNoColumn {
                get {
                    return this.columnRunningNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CLPNoColumn {
                get {
                    return this.columnCLPNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SBEntryIDColumn {
                get {
                    return this.columnSBEntryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SBNoColumn {
                get {
                    return this.columnSBNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SBDateColumn {
                get {
                    return this.columnSBDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ShipperIDColumn {
                get {
                    return this.columnShipperID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgentIDColumn {
                get {
                    return this.columnAgentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LineNameColumn {
                get {
                    return this.columnLineName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CartingDateColumn {
                get {
                    return this.columnCartingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConsigneeIDColumn {
                get {
                    return this.columnConsigneeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CargoDescColumn {
                get {
                    return this.columnCargoDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalQtyColumn {
                get {
                    return this.columnTotalQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PkgTypeColumn {
                get {
                    return this.columnPkgType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EntryIDColumn {
                get {
                    return this.columnEntryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ContainerNoColumn {
                get {
                    return this.columnContainerNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ContainerTypeColumn {
                get {
                    return this.columnContainerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SealNoColumn {
                get {
                    return this.columnSealNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgentSealColumn {
                get {
                    return this.columnAgentSeal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CustomSealColumn {
                get {
                    return this.columnCustomSeal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ViaNoColumn {
                get {
                    return this.columnViaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PODColumn {
                get {
                    return this.columnPOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FPDColumn {
                get {
                    return this.columnFPD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgencyIDColumn {
                get {
                    return this.columnAgencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn subagencynameColumn {
                get {
                    return this.columnsubagencyname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AddedByColumn {
                get {
                    return this.columnAddedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AddedOnColumn {
                get {
                    return this.columnAddedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VesselNameColumn {
                get {
                    return this.columnVesselName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FOBColumn {
                get {
                    return this.columnFOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TareWeightColumn {
                get {
                    return this.columnTareWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ShipperColumn {
                get {
                    return this.columnShipper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConsigneeColumn {
                get {
                    return this.columnConsignee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CHAIDColumn {
                get {
                    return this.columnCHAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UNNoColumn {
                get {
                    return this.columnUNNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VoyageColumn {
                get {
                    return this.columnVoyage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RotationNoColumn {
                get {
                    return this.columnRotationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CHANameColumn {
                get {
                    return this.columnCHAName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgentNameColumn {
                get {
                    return this.columnAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsCancelColumn {
                get {
                    return this.columnIsCancel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CancelledByColumn {
                get {
                    return this.columnCancelledBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CancelledOnColumn {
                get {
                    return this.columnCancelledOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public exp_CLPRow this[int index] {
                get {
                    return ((exp_CLPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event exp_CLPRowChangeEventHandler exp_CLPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event exp_CLPRowChangeEventHandler exp_CLPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event exp_CLPRowChangeEventHandler exp_CLPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event exp_CLPRowChangeEventHandler exp_CLPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Addexp_CLPRow(exp_CLPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public exp_CLPRow Addexp_CLPRow(
                        long CLPNo, 
                        System.DateTime EntryDate, 
                        long SBEntryID, 
                        string SBNo, 
                        System.DateTime SBDate, 
                        long ShipperID, 
                        long AgentID, 
                        string LineName, 
                        System.DateTime CartingDate, 
                        string ConsigneeID, 
                        string CargoDesc, 
                        double TotalQty, 
                        double Qty, 
                        string PkgType, 
                        double Weight, 
                        long EntryID, 
                        string ContainerNo, 
                        int Size, 
                        string ContainerType, 
                        string SealNo, 
                        string AgentSeal, 
                        string CustomSeal, 
                        string ViaNo, 
                        string POD, 
                        string FPD, 
                        long AgencyID, 
                        string subagencyname, 
                        int AddedBy, 
                        System.DateTime AddedOn, 
                        string VesselName, 
                        double FOB, 
                        double TareWeight, 
                        string Shipper, 
                        string Consignee, 
                        string CHAID, 
                        string UNNo, 
                        string Voyage, 
                        string RotationNo, 
                        string CHAName, 
                        string AgentName, 
                        bool IsCancel, 
                        short CancelledBy, 
                        System.DateTime CancelledOn) {
                exp_CLPRow rowexp_CLPRow = ((exp_CLPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CLPNo,
                        EntryDate,
                        SBEntryID,
                        SBNo,
                        SBDate,
                        ShipperID,
                        AgentID,
                        LineName,
                        CartingDate,
                        ConsigneeID,
                        CargoDesc,
                        TotalQty,
                        Qty,
                        PkgType,
                        Weight,
                        EntryID,
                        ContainerNo,
                        Size,
                        ContainerType,
                        SealNo,
                        AgentSeal,
                        CustomSeal,
                        ViaNo,
                        POD,
                        FPD,
                        AgencyID,
                        subagencyname,
                        AddedBy,
                        AddedOn,
                        VesselName,
                        FOB,
                        TareWeight,
                        Shipper,
                        Consignee,
                        CHAID,
                        UNNo,
                        Voyage,
                        RotationNo,
                        CHAName,
                        AgentName,
                        IsCancel,
                        CancelledBy,
                        CancelledOn};
                rowexp_CLPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexp_CLPRow);
                return rowexp_CLPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public exp_CLPRow FindByRunningNo(long RunningNo) {
                return ((exp_CLPRow)(this.Rows.Find(new object[] {
                            RunningNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                exp_CLPDataTable cln = ((exp_CLPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new exp_CLPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRunningNo = base.Columns["RunningNo"];
                this.columnCLPNo = base.Columns["CLPNo"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnSBEntryID = base.Columns["SBEntryID"];
                this.columnSBNo = base.Columns["SBNo"];
                this.columnSBDate = base.Columns["SBDate"];
                this.columnShipperID = base.Columns["ShipperID"];
                this.columnAgentID = base.Columns["AgentID"];
                this.columnLineName = base.Columns["LineName"];
                this.columnCartingDate = base.Columns["CartingDate"];
                this.columnConsigneeID = base.Columns["ConsigneeID"];
                this.columnCargoDesc = base.Columns["CargoDesc"];
                this.columnTotalQty = base.Columns["TotalQty"];
                this.columnQty = base.Columns["Qty"];
                this.columnPkgType = base.Columns["PkgType"];
                this.columnWeight = base.Columns["Weight"];
                this.columnEntryID = base.Columns["EntryID"];
                this.columnContainerNo = base.Columns["ContainerNo"];
                this.columnSize = base.Columns["Size"];
                this.columnContainerType = base.Columns["ContainerType"];
                this.columnSealNo = base.Columns["SealNo"];
                this.columnAgentSeal = base.Columns["AgentSeal"];
                this.columnCustomSeal = base.Columns["CustomSeal"];
                this.columnViaNo = base.Columns["ViaNo"];
                this.columnPOD = base.Columns["POD"];
                this.columnFPD = base.Columns["FPD"];
                this.columnAgencyID = base.Columns["AgencyID"];
                this.columnsubagencyname = base.Columns["subagencyname"];
                this.columnAddedBy = base.Columns["AddedBy"];
                this.columnAddedOn = base.Columns["AddedOn"];
                this.columnVesselName = base.Columns["VesselName"];
                this.columnFOB = base.Columns["FOB"];
                this.columnTareWeight = base.Columns["TareWeight"];
                this.columnShipper = base.Columns["Shipper"];
                this.columnConsignee = base.Columns["Consignee"];
                this.columnCHAID = base.Columns["CHAID"];
                this.columnUNNo = base.Columns["UNNo"];
                this.columnVoyage = base.Columns["Voyage"];
                this.columnRotationNo = base.Columns["RotationNo"];
                this.columnCHAName = base.Columns["CHAName"];
                this.columnAgentName = base.Columns["AgentName"];
                this.columnIsCancel = base.Columns["IsCancel"];
                this.columnCancelledBy = base.Columns["CancelledBy"];
                this.columnCancelledOn = base.Columns["CancelledOn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRunningNo = new global::System.Data.DataColumn("RunningNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunningNo);
                this.columnCLPNo = new global::System.Data.DataColumn("CLPNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLPNo);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnSBEntryID = new global::System.Data.DataColumn("SBEntryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBEntryID);
                this.columnSBNo = new global::System.Data.DataColumn("SBNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBNo);
                this.columnSBDate = new global::System.Data.DataColumn("SBDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBDate);
                this.columnShipperID = new global::System.Data.DataColumn("ShipperID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperID);
                this.columnAgentID = new global::System.Data.DataColumn("AgentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentID);
                this.columnLineName = new global::System.Data.DataColumn("LineName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineName);
                this.columnCartingDate = new global::System.Data.DataColumn("CartingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartingDate);
                this.columnConsigneeID = new global::System.Data.DataColumn("ConsigneeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsigneeID);
                this.columnCargoDesc = new global::System.Data.DataColumn("CargoDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargoDesc);
                this.columnTotalQty = new global::System.Data.DataColumn("TotalQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalQty);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPkgType = new global::System.Data.DataColumn("PkgType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPkgType);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnEntryID = new global::System.Data.DataColumn("EntryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryID);
                this.columnContainerNo = new global::System.Data.DataColumn("ContainerNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerNo);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnContainerType = new global::System.Data.DataColumn("ContainerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainerType);
                this.columnSealNo = new global::System.Data.DataColumn("SealNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSealNo);
                this.columnAgentSeal = new global::System.Data.DataColumn("AgentSeal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentSeal);
                this.columnCustomSeal = new global::System.Data.DataColumn("CustomSeal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomSeal);
                this.columnViaNo = new global::System.Data.DataColumn("ViaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViaNo);
                this.columnPOD = new global::System.Data.DataColumn("POD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOD);
                this.columnFPD = new global::System.Data.DataColumn("FPD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPD);
                this.columnAgencyID = new global::System.Data.DataColumn("AgencyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyID);
                this.columnsubagencyname = new global::System.Data.DataColumn("subagencyname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubagencyname);
                this.columnAddedBy = new global::System.Data.DataColumn("AddedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddedBy);
                this.columnAddedOn = new global::System.Data.DataColumn("AddedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddedOn);
                this.columnVesselName = new global::System.Data.DataColumn("VesselName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVesselName);
                this.columnFOB = new global::System.Data.DataColumn("FOB", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOB);
                this.columnTareWeight = new global::System.Data.DataColumn("TareWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTareWeight);
                this.columnShipper = new global::System.Data.DataColumn("Shipper", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipper);
                this.columnConsignee = new global::System.Data.DataColumn("Consignee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsignee);
                this.columnCHAID = new global::System.Data.DataColumn("CHAID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHAID);
                this.columnUNNo = new global::System.Data.DataColumn("UNNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNNo);
                this.columnVoyage = new global::System.Data.DataColumn("Voyage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoyage);
                this.columnRotationNo = new global::System.Data.DataColumn("RotationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRotationNo);
                this.columnCHAName = new global::System.Data.DataColumn("CHAName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHAName);
                this.columnAgentName = new global::System.Data.DataColumn("AgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentName);
                this.columnIsCancel = new global::System.Data.DataColumn("IsCancel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCancel);
                this.columnCancelledBy = new global::System.Data.DataColumn("CancelledBy", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelledBy);
                this.columnCancelledOn = new global::System.Data.DataColumn("CancelledOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelledOn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRunningNo}, true));
                this.columnRunningNo.AutoIncrement = true;
                this.columnRunningNo.AutoIncrementSeed = -1;
                this.columnRunningNo.AutoIncrementStep = -1;
                this.columnRunningNo.AllowDBNull = false;
                this.columnRunningNo.ReadOnly = true;
                this.columnRunningNo.Unique = true;
                this.columnCLPNo.AllowDBNull = false;
                this.columnEntryDate.AllowDBNull = false;
                this.columnSBEntryID.AllowDBNull = false;
                this.columnSBNo.AllowDBNull = false;
                this.columnSBNo.MaxLength = 50;
                this.columnSBDate.AllowDBNull = false;
                this.columnShipperID.AllowDBNull = false;
                this.columnAgentID.AllowDBNull = false;
                this.columnLineName.AllowDBNull = false;
                this.columnLineName.MaxLength = 50;
                this.columnCartingDate.AllowDBNull = false;
                this.columnConsigneeID.AllowDBNull = false;
                this.columnConsigneeID.MaxLength = 50;
                this.columnCargoDesc.AllowDBNull = false;
                this.columnCargoDesc.MaxLength = 500;
                this.columnTotalQty.AllowDBNull = false;
                this.columnQty.AllowDBNull = false;
                this.columnPkgType.MaxLength = 50;
                this.columnWeight.AllowDBNull = false;
                this.columnEntryID.AllowDBNull = false;
                this.columnContainerNo.AllowDBNull = false;
                this.columnContainerNo.MaxLength = 11;
                this.columnSize.AllowDBNull = false;
                this.columnContainerType.AllowDBNull = false;
                this.columnContainerType.MaxLength = 10;
                this.columnSealNo.AllowDBNull = false;
                this.columnSealNo.MaxLength = 50;
                this.columnAgentSeal.AllowDBNull = false;
                this.columnAgentSeal.MaxLength = 50;
                this.columnCustomSeal.AllowDBNull = false;
                this.columnCustomSeal.MaxLength = 50;
                this.columnViaNo.AllowDBNull = false;
                this.columnViaNo.MaxLength = 50;
                this.columnPOD.AllowDBNull = false;
                this.columnPOD.MaxLength = 50;
                this.columnFPD.AllowDBNull = false;
                this.columnFPD.MaxLength = 50;
                this.columnAgencyID.AllowDBNull = false;
                this.columnsubagencyname.AllowDBNull = false;
                this.columnsubagencyname.MaxLength = 50;
                this.columnAddedBy.AllowDBNull = false;
                this.columnAddedOn.AllowDBNull = false;
                this.columnVesselName.AllowDBNull = false;
                this.columnVesselName.MaxLength = 50;
                this.columnFOB.AllowDBNull = false;
                this.columnTareWeight.AllowDBNull = false;
                this.columnShipper.MaxLength = 100;
                this.columnConsignee.MaxLength = 100;
                this.columnCHAID.AllowDBNull = false;
                this.columnCHAID.MaxLength = 20;
                this.columnUNNo.AllowDBNull = false;
                this.columnUNNo.MaxLength = 50;
                this.columnVoyage.AllowDBNull = false;
                this.columnVoyage.MaxLength = 50;
                this.columnRotationNo.AllowDBNull = false;
                this.columnRotationNo.MaxLength = 50;
                this.columnCHAName.AllowDBNull = false;
                this.columnCHAName.MaxLength = 100;
                this.columnAgentName.AllowDBNull = false;
                this.columnAgentName.MaxLength = 100;
                this.columnIsCancel.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public exp_CLPRow Newexp_CLPRow() {
                return ((exp_CLPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new exp_CLPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(exp_CLPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.exp_CLPRowChanged != null)) {
                    this.exp_CLPRowChanged(this, new exp_CLPRowChangeEvent(((exp_CLPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.exp_CLPRowChanging != null)) {
                    this.exp_CLPRowChanging(this, new exp_CLPRowChangeEvent(((exp_CLPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.exp_CLPRowDeleted != null)) {
                    this.exp_CLPRowDeleted(this, new exp_CLPRowChangeEvent(((exp_CLPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.exp_CLPRowDeleting != null)) {
                    this.exp_CLPRowDeleting(this, new exp_CLPRowChangeEvent(((exp_CLPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Removeexp_CLPRow(exp_CLPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                trackerNCFSDataSet ds = new trackerNCFSDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "exp_CLPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class exp_CLPRow : global::System.Data.DataRow {
            
            private exp_CLPDataTable tableexp_CLP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal exp_CLPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexp_CLP = ((exp_CLPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long RunningNo {
                get {
                    return ((long)(this[this.tableexp_CLP.RunningNoColumn]));
                }
                set {
                    this[this.tableexp_CLP.RunningNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long CLPNo {
                get {
                    return ((long)(this[this.tableexp_CLP.CLPNoColumn]));
                }
                set {
                    this[this.tableexp_CLP.CLPNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime EntryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableexp_CLP.EntryDateColumn]));
                }
                set {
                    this[this.tableexp_CLP.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long SBEntryID {
                get {
                    return ((long)(this[this.tableexp_CLP.SBEntryIDColumn]));
                }
                set {
                    this[this.tableexp_CLP.SBEntryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SBNo {
                get {
                    return ((string)(this[this.tableexp_CLP.SBNoColumn]));
                }
                set {
                    this[this.tableexp_CLP.SBNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime SBDate {
                get {
                    return ((global::System.DateTime)(this[this.tableexp_CLP.SBDateColumn]));
                }
                set {
                    this[this.tableexp_CLP.SBDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long ShipperID {
                get {
                    return ((long)(this[this.tableexp_CLP.ShipperIDColumn]));
                }
                set {
                    this[this.tableexp_CLP.ShipperIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long AgentID {
                get {
                    return ((long)(this[this.tableexp_CLP.AgentIDColumn]));
                }
                set {
                    this[this.tableexp_CLP.AgentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LineName {
                get {
                    return ((string)(this[this.tableexp_CLP.LineNameColumn]));
                }
                set {
                    this[this.tableexp_CLP.LineNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime CartingDate {
                get {
                    return ((global::System.DateTime)(this[this.tableexp_CLP.CartingDateColumn]));
                }
                set {
                    this[this.tableexp_CLP.CartingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConsigneeID {
                get {
                    return ((string)(this[this.tableexp_CLP.ConsigneeIDColumn]));
                }
                set {
                    this[this.tableexp_CLP.ConsigneeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CargoDesc {
                get {
                    return ((string)(this[this.tableexp_CLP.CargoDescColumn]));
                }
                set {
                    this[this.tableexp_CLP.CargoDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double TotalQty {
                get {
                    return ((double)(this[this.tableexp_CLP.TotalQtyColumn]));
                }
                set {
                    this[this.tableexp_CLP.TotalQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double Qty {
                get {
                    return ((double)(this[this.tableexp_CLP.QtyColumn]));
                }
                set {
                    this[this.tableexp_CLP.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PkgType {
                get {
                    try {
                        return ((string)(this[this.tableexp_CLP.PkgTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PkgType\' in table \'exp_CLP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexp_CLP.PkgTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double Weight {
                get {
                    return ((double)(this[this.tableexp_CLP.WeightColumn]));
                }
                set {
                    this[this.tableexp_CLP.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long EntryID {
                get {
                    return ((long)(this[this.tableexp_CLP.EntryIDColumn]));
                }
                set {
                    this[this.tableexp_CLP.EntryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ContainerNo {
                get {
                    return ((string)(this[this.tableexp_CLP.ContainerNoColumn]));
                }
                set {
                    this[this.tableexp_CLP.ContainerNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Size {
                get {
                    return ((int)(this[this.tableexp_CLP.SizeColumn]));
                }
                set {
                    this[this.tableexp_CLP.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ContainerType {
                get {
                    return ((string)(this[this.tableexp_CLP.ContainerTypeColumn]));
                }
                set {
                    this[this.tableexp_CLP.ContainerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SealNo {
                get {
                    return ((string)(this[this.tableexp_CLP.SealNoColumn]));
                }
                set {
                    this[this.tableexp_CLP.SealNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AgentSeal {
                get {
                    return ((string)(this[this.tableexp_CLP.AgentSealColumn]));
                }
                set {
                    this[this.tableexp_CLP.AgentSealColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CustomSeal {
                get {
                    return ((string)(this[this.tableexp_CLP.CustomSealColumn]));
                }
                set {
                    this[this.tableexp_CLP.CustomSealColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ViaNo {
                get {
                    return ((string)(this[this.tableexp_CLP.ViaNoColumn]));
                }
                set {
                    this[this.tableexp_CLP.ViaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string POD {
                get {
                    return ((string)(this[this.tableexp_CLP.PODColumn]));
                }
                set {
                    this[this.tableexp_CLP.PODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FPD {
                get {
                    return ((string)(this[this.tableexp_CLP.FPDColumn]));
                }
                set {
                    this[this.tableexp_CLP.FPDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long AgencyID {
                get {
                    return ((long)(this[this.tableexp_CLP.AgencyIDColumn]));
                }
                set {
                    this[this.tableexp_CLP.AgencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string subagencyname {
                get {
                    return ((string)(this[this.tableexp_CLP.subagencynameColumn]));
                }
                set {
                    this[this.tableexp_CLP.subagencynameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int AddedBy {
                get {
                    return ((int)(this[this.tableexp_CLP.AddedByColumn]));
                }
                set {
                    this[this.tableexp_CLP.AddedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime AddedOn {
                get {
                    return ((global::System.DateTime)(this[this.tableexp_CLP.AddedOnColumn]));
                }
                set {
                    this[this.tableexp_CLP.AddedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VesselName {
                get {
                    return ((string)(this[this.tableexp_CLP.VesselNameColumn]));
                }
                set {
                    this[this.tableexp_CLP.VesselNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double FOB {
                get {
                    return ((double)(this[this.tableexp_CLP.FOBColumn]));
                }
                set {
                    this[this.tableexp_CLP.FOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double TareWeight {
                get {
                    return ((double)(this[this.tableexp_CLP.TareWeightColumn]));
                }
                set {
                    this[this.tableexp_CLP.TareWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Shipper {
                get {
                    try {
                        return ((string)(this[this.tableexp_CLP.ShipperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipper\' in table \'exp_CLP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexp_CLP.ShipperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Consignee {
                get {
                    try {
                        return ((string)(this[this.tableexp_CLP.ConsigneeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consignee\' in table \'exp_CLP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexp_CLP.ConsigneeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CHAID {
                get {
                    return ((string)(this[this.tableexp_CLP.CHAIDColumn]));
                }
                set {
                    this[this.tableexp_CLP.CHAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UNNo {
                get {
                    return ((string)(this[this.tableexp_CLP.UNNoColumn]));
                }
                set {
                    this[this.tableexp_CLP.UNNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Voyage {
                get {
                    return ((string)(this[this.tableexp_CLP.VoyageColumn]));
                }
                set {
                    this[this.tableexp_CLP.VoyageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RotationNo {
                get {
                    return ((string)(this[this.tableexp_CLP.RotationNoColumn]));
                }
                set {
                    this[this.tableexp_CLP.RotationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CHAName {
                get {
                    return ((string)(this[this.tableexp_CLP.CHANameColumn]));
                }
                set {
                    this[this.tableexp_CLP.CHANameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AgentName {
                get {
                    return ((string)(this[this.tableexp_CLP.AgentNameColumn]));
                }
                set {
                    this[this.tableexp_CLP.AgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCancel {
                get {
                    return ((bool)(this[this.tableexp_CLP.IsCancelColumn]));
                }
                set {
                    this[this.tableexp_CLP.IsCancelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short CancelledBy {
                get {
                    try {
                        return ((short)(this[this.tableexp_CLP.CancelledByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelledBy\' in table \'exp_CLP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexp_CLP.CancelledByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime CancelledOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableexp_CLP.CancelledOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancelledOn\' in table \'exp_CLP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexp_CLP.CancelledOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPkgTypeNull() {
                return this.IsNull(this.tableexp_CLP.PkgTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPkgTypeNull() {
                this[this.tableexp_CLP.PkgTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsShipperNull() {
                return this.IsNull(this.tableexp_CLP.ShipperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetShipperNull() {
                this[this.tableexp_CLP.ShipperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConsigneeNull() {
                return this.IsNull(this.tableexp_CLP.ConsigneeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConsigneeNull() {
                this[this.tableexp_CLP.ConsigneeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCancelledByNull() {
                return this.IsNull(this.tableexp_CLP.CancelledByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCancelledByNull() {
                this[this.tableexp_CLP.CancelledByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCancelledOnNull() {
                return this.IsNull(this.tableexp_CLP.CancelledOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCancelledOnNull() {
                this[this.tableexp_CLP.CancelledOnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class exp_CLPRowChangeEvent : global::System.EventArgs {
            
            private exp_CLPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public exp_CLPRowChangeEvent(exp_CLPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public exp_CLPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TrackerMVC.trackerNCFSDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class exp_CLPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public exp_CLPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "exp_CLP";
            tableMapping.ColumnMappings.Add("RunningNo", "RunningNo");
            tableMapping.ColumnMappings.Add("CLPNo", "CLPNo");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            tableMapping.ColumnMappings.Add("SBEntryID", "SBEntryID");
            tableMapping.ColumnMappings.Add("SBNo", "SBNo");
            tableMapping.ColumnMappings.Add("SBDate", "SBDate");
            tableMapping.ColumnMappings.Add("ShipperID", "ShipperID");
            tableMapping.ColumnMappings.Add("AgentID", "AgentID");
            tableMapping.ColumnMappings.Add("LineName", "LineName");
            tableMapping.ColumnMappings.Add("CartingDate", "CartingDate");
            tableMapping.ColumnMappings.Add("ConsigneeID", "ConsigneeID");
            tableMapping.ColumnMappings.Add("CargoDesc", "CargoDesc");
            tableMapping.ColumnMappings.Add("TotalQty", "TotalQty");
            tableMapping.ColumnMappings.Add("Qty", "Qty");
            tableMapping.ColumnMappings.Add("PkgType", "PkgType");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("EntryID", "EntryID");
            tableMapping.ColumnMappings.Add("ContainerNo", "ContainerNo");
            tableMapping.ColumnMappings.Add("Size", "Size");
            tableMapping.ColumnMappings.Add("ContainerType", "ContainerType");
            tableMapping.ColumnMappings.Add("SealNo", "SealNo");
            tableMapping.ColumnMappings.Add("AgentSeal", "AgentSeal");
            tableMapping.ColumnMappings.Add("CustomSeal", "CustomSeal");
            tableMapping.ColumnMappings.Add("ViaNo", "ViaNo");
            tableMapping.ColumnMappings.Add("POD", "POD");
            tableMapping.ColumnMappings.Add("FPD", "FPD");
            tableMapping.ColumnMappings.Add("AgencyID", "AgencyID");
            tableMapping.ColumnMappings.Add("subagencyname", "subagencyname");
            tableMapping.ColumnMappings.Add("AddedBy", "AddedBy");
            tableMapping.ColumnMappings.Add("AddedOn", "AddedOn");
            tableMapping.ColumnMappings.Add("VesselName", "VesselName");
            tableMapping.ColumnMappings.Add("FOB", "FOB");
            tableMapping.ColumnMappings.Add("TareWeight", "TareWeight");
            tableMapping.ColumnMappings.Add("Shipper", "Shipper");
            tableMapping.ColumnMappings.Add("Consignee", "Consignee");
            tableMapping.ColumnMappings.Add("CHAID", "CHAID");
            tableMapping.ColumnMappings.Add("UNNo", "UNNo");
            tableMapping.ColumnMappings.Add("Voyage", "Voyage");
            tableMapping.ColumnMappings.Add("RotationNo", "RotationNo");
            tableMapping.ColumnMappings.Add("CHAName", "CHAName");
            tableMapping.ColumnMappings.Add("AgentName", "AgentName");
            tableMapping.ColumnMappings.Add("IsCancel", "IsCancel");
            tableMapping.ColumnMappings.Add("CancelledBy", "CancelledBy");
            tableMapping.ColumnMappings.Add("CancelledOn", "CancelledOn");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[exp_CLP] WHERE (([RunningNo] = @Original_RunningNo))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RunningNo", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunningNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[exp_CLP] ([CLPNo], [EntryDate], [SBEntryID], [SBNo], [SBDate], [ShipperID], [AgentID], [LineName], [CartingDate], [ConsigneeID], [CargoDesc], [TotalQty], [Qty], [PkgType], [Weight], [EntryID], [ContainerNo], [Size], [ContainerType], [SealNo], [AgentSeal], [CustomSeal], [ViaNo], [POD], [FPD], [AgencyID], [subagencyname], [AddedBy], [AddedOn], [VesselName], [FOB], [TareWeight], [Shipper], [Consignee], [CHAID], [UNNo], [Voyage], [RotationNo], [CHAName], [AgentName], [IsCancel], [CancelledBy], [CancelledOn]) VALUES (@CLPNo, @EntryDate, @SBEntryID, @SBNo, @SBDate, @ShipperID, @AgentID, @LineName, @CartingDate, @ConsigneeID, @CargoDesc, @TotalQty, @Qty, @PkgType, @Weight, @EntryID, @ContainerNo, @Size, @ContainerType, @SealNo, @AgentSeal, @CustomSeal, @ViaNo, @POD, @FPD, @AgencyID, @subagencyname, @AddedBy, @AddedOn, @VesselName, @FOB, @TareWeight, @Shipper, @Consignee, @CHAID, @UNNo, @Voyage, @RotationNo, @CHAName, @AgentName, @IsCancel, @CancelledBy, @CancelledOn)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLPNo", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLPNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SBEntryID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SBEntryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SBNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SBNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SBDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SBDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgentID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CartingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CartingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsigneeID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsigneeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CargoDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CargoDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Qty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PkgType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PkgType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContainerNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContainerNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContainerType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContainerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SealNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SealNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgentSeal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgentSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomSeal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ViaNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViaNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FPD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgencyID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subagencyname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subagencyname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VesselName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VesselName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TareWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TareWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shipper", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shipper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consignee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Consignee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHAID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voyage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voyage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RotationNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RotationNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHAName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCancel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCancel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CancelledBy", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CancelledBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CancelledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CancelledOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[exp_CLP] SET [CLPNo] = @CLPNo, [EntryDate] = @EntryDate, [SBEntryID] = @SBEntryID, [SBNo] = @SBNo, [SBDate] = @SBDate, [ShipperID] = @ShipperID, [AgentID] = @AgentID, [LineName] = @LineName, [CartingDate] = @CartingDate, [ConsigneeID] = @ConsigneeID, [CargoDesc] = @CargoDesc, [TotalQty] = @TotalQty, [Qty] = @Qty, [PkgType] = @PkgType, [Weight] = @Weight, [EntryID] = @EntryID, [ContainerNo] = @ContainerNo, [Size] = @Size, [ContainerType] = @ContainerType, [SealNo] = @SealNo, [AgentSeal] = @AgentSeal, [CustomSeal] = @CustomSeal, [ViaNo] = @ViaNo, [POD] = @POD, [FPD] = @FPD, [AgencyID] = @AgencyID, [subagencyname] = @subagencyname, [AddedBy] = @AddedBy, [AddedOn] = @AddedOn, [VesselName] = @VesselName, [FOB] = @FOB, [TareWeight] = @TareWeight, [Shipper] = @Shipper, [Consignee] = @Consignee, [CHAID] = @CHAID, [UNNo] = @UNNo, [Voyage] = @Voyage, [RotationNo] = @RotationNo, [CHAName] = @CHAName, [AgentName] = @AgentName, [IsCancel] = @IsCancel, [CancelledBy] = @CancelledBy, [CancelledOn] = @CancelledOn WHERE (([RunningNo] = @Original_RunningNo))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLPNo", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLPNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SBEntryID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SBEntryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SBNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SBNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SBDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SBDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgentID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CartingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CartingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsigneeID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsigneeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CargoDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CargoDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Qty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PkgType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PkgType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContainerNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContainerNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContainerType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContainerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SealNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SealNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgentSeal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgentSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomSeal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ViaNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ViaNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FPD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgencyID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subagencyname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subagencyname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AddedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AddedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VesselName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VesselName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TareWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TareWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shipper", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shipper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Consignee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Consignee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHAID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voyage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voyage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RotationNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RotationNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHAName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCancel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCancel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CancelledBy", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CancelledBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CancelledOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CancelledOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RunningNo", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunningNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["trackerNCFSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT RunningNo, CLPNo, EntryDate, SBEntryID, SBNo, SBDate, ShipperID, AgentID, LineName, CartingDate, ConsigneeID, CargoDesc, TotalQty, Qty, PkgType, Weight, EntryID, ContainerNo, Size, ContainerType, SealNo, AgentSeal, CustomSeal, ViaNo, POD, FPD, AgencyID, subagencyname, AddedBy, AddedOn, VesselName, FOB, TareWeight, Shipper, Consignee, CHAID, UNNo, Voyage, RotationNo, CHAName, AgentName, IsCancel, CancelledBy, CancelledOn FROM dbo.exp_CLP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(trackerNCFSDataSet.exp_CLPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual trackerNCFSDataSet.exp_CLPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            trackerNCFSDataSet.exp_CLPDataTable dataTable = new trackerNCFSDataSet.exp_CLPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(trackerNCFSDataSet.exp_CLPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(trackerNCFSDataSet dataSet) {
            return this.Adapter.Update(dataSet, "exp_CLP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_RunningNo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_RunningNo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long CLPNo, 
                    System.DateTime EntryDate, 
                    long SBEntryID, 
                    string SBNo, 
                    System.DateTime SBDate, 
                    long ShipperID, 
                    long AgentID, 
                    string LineName, 
                    System.DateTime CartingDate, 
                    string ConsigneeID, 
                    string CargoDesc, 
                    double TotalQty, 
                    double Qty, 
                    string PkgType, 
                    double Weight, 
                    long EntryID, 
                    string ContainerNo, 
                    int Size, 
                    string ContainerType, 
                    string SealNo, 
                    string AgentSeal, 
                    string CustomSeal, 
                    string ViaNo, 
                    string POD, 
                    string FPD, 
                    long AgencyID, 
                    string subagencyname, 
                    int AddedBy, 
                    System.DateTime AddedOn, 
                    string VesselName, 
                    double FOB, 
                    double TareWeight, 
                    string Shipper, 
                    string Consignee, 
                    string CHAID, 
                    string UNNo, 
                    string Voyage, 
                    string RotationNo, 
                    string CHAName, 
                    string AgentName, 
                    bool IsCancel, 
                    global::System.Nullable<short> CancelledBy, 
                    global::System.Nullable<global::System.DateTime> CancelledOn) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(CLPNo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(EntryDate));
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(SBEntryID));
            if ((SBNo == null)) {
                throw new global::System.ArgumentNullException("SBNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SBNo));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(SBDate));
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(ShipperID));
            this.Adapter.InsertCommand.Parameters[6].Value = ((long)(AgentID));
            if ((LineName == null)) {
                throw new global::System.ArgumentNullException("LineName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(LineName));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(CartingDate));
            if ((ConsigneeID == null)) {
                throw new global::System.ArgumentNullException("ConsigneeID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ConsigneeID));
            }
            if ((CargoDesc == null)) {
                throw new global::System.ArgumentNullException("CargoDesc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CargoDesc));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(TotalQty));
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Qty));
            if ((PkgType == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(PkgType));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Weight));
            this.Adapter.InsertCommand.Parameters[15].Value = ((long)(EntryID));
            if ((ContainerNo == null)) {
                throw new global::System.ArgumentNullException("ContainerNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ContainerNo));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Size));
            if ((ContainerType == null)) {
                throw new global::System.ArgumentNullException("ContainerType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ContainerType));
            }
            if ((SealNo == null)) {
                throw new global::System.ArgumentNullException("SealNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(SealNo));
            }
            if ((AgentSeal == null)) {
                throw new global::System.ArgumentNullException("AgentSeal");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(AgentSeal));
            }
            if ((CustomSeal == null)) {
                throw new global::System.ArgumentNullException("CustomSeal");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(CustomSeal));
            }
            if ((ViaNo == null)) {
                throw new global::System.ArgumentNullException("ViaNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ViaNo));
            }
            if ((POD == null)) {
                throw new global::System.ArgumentNullException("POD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(POD));
            }
            if ((FPD == null)) {
                throw new global::System.ArgumentNullException("FPD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(FPD));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((long)(AgencyID));
            if ((subagencyname == null)) {
                throw new global::System.ArgumentNullException("subagencyname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(subagencyname));
            }
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(AddedBy));
            this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(AddedOn));
            if ((VesselName == null)) {
                throw new global::System.ArgumentNullException("VesselName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(VesselName));
            }
            this.Adapter.InsertCommand.Parameters[30].Value = ((double)(FOB));
            this.Adapter.InsertCommand.Parameters[31].Value = ((double)(TareWeight));
            if ((Shipper == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Shipper));
            }
            if ((Consignee == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Consignee));
            }
            if ((CHAID == null)) {
                throw new global::System.ArgumentNullException("CHAID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(CHAID));
            }
            if ((UNNo == null)) {
                throw new global::System.ArgumentNullException("UNNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(UNNo));
            }
            if ((Voyage == null)) {
                throw new global::System.ArgumentNullException("Voyage");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(Voyage));
            }
            if ((RotationNo == null)) {
                throw new global::System.ArgumentNullException("RotationNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(RotationNo));
            }
            if ((CHAName == null)) {
                throw new global::System.ArgumentNullException("CHAName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(CHAName));
            }
            if ((AgentName == null)) {
                throw new global::System.ArgumentNullException("AgentName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(AgentName));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(IsCancel));
            if ((CancelledBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((short)(CancelledBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CancelledOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(CancelledOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long CLPNo, 
                    System.DateTime EntryDate, 
                    long SBEntryID, 
                    string SBNo, 
                    System.DateTime SBDate, 
                    long ShipperID, 
                    long AgentID, 
                    string LineName, 
                    System.DateTime CartingDate, 
                    string ConsigneeID, 
                    string CargoDesc, 
                    double TotalQty, 
                    double Qty, 
                    string PkgType, 
                    double Weight, 
                    long EntryID, 
                    string ContainerNo, 
                    int Size, 
                    string ContainerType, 
                    string SealNo, 
                    string AgentSeal, 
                    string CustomSeal, 
                    string ViaNo, 
                    string POD, 
                    string FPD, 
                    long AgencyID, 
                    string subagencyname, 
                    int AddedBy, 
                    System.DateTime AddedOn, 
                    string VesselName, 
                    double FOB, 
                    double TareWeight, 
                    string Shipper, 
                    string Consignee, 
                    string CHAID, 
                    string UNNo, 
                    string Voyage, 
                    string RotationNo, 
                    string CHAName, 
                    string AgentName, 
                    bool IsCancel, 
                    global::System.Nullable<short> CancelledBy, 
                    global::System.Nullable<global::System.DateTime> CancelledOn, 
                    long Original_RunningNo) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(CLPNo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(EntryDate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(SBEntryID));
            if ((SBNo == null)) {
                throw new global::System.ArgumentNullException("SBNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SBNo));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(SBDate));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(ShipperID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(AgentID));
            if ((LineName == null)) {
                throw new global::System.ArgumentNullException("LineName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(LineName));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(CartingDate));
            if ((ConsigneeID == null)) {
                throw new global::System.ArgumentNullException("ConsigneeID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ConsigneeID));
            }
            if ((CargoDesc == null)) {
                throw new global::System.ArgumentNullException("CargoDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CargoDesc));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(TotalQty));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Qty));
            if ((PkgType == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(PkgType));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Weight));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(EntryID));
            if ((ContainerNo == null)) {
                throw new global::System.ArgumentNullException("ContainerNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ContainerNo));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Size));
            if ((ContainerType == null)) {
                throw new global::System.ArgumentNullException("ContainerType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ContainerType));
            }
            if ((SealNo == null)) {
                throw new global::System.ArgumentNullException("SealNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(SealNo));
            }
            if ((AgentSeal == null)) {
                throw new global::System.ArgumentNullException("AgentSeal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(AgentSeal));
            }
            if ((CustomSeal == null)) {
                throw new global::System.ArgumentNullException("CustomSeal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(CustomSeal));
            }
            if ((ViaNo == null)) {
                throw new global::System.ArgumentNullException("ViaNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(ViaNo));
            }
            if ((POD == null)) {
                throw new global::System.ArgumentNullException("POD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(POD));
            }
            if ((FPD == null)) {
                throw new global::System.ArgumentNullException("FPD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(FPD));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((long)(AgencyID));
            if ((subagencyname == null)) {
                throw new global::System.ArgumentNullException("subagencyname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(subagencyname));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(AddedBy));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(AddedOn));
            if ((VesselName == null)) {
                throw new global::System.ArgumentNullException("VesselName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(VesselName));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(FOB));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(TareWeight));
            if ((Shipper == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Shipper));
            }
            if ((Consignee == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Consignee));
            }
            if ((CHAID == null)) {
                throw new global::System.ArgumentNullException("CHAID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(CHAID));
            }
            if ((UNNo == null)) {
                throw new global::System.ArgumentNullException("UNNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(UNNo));
            }
            if ((Voyage == null)) {
                throw new global::System.ArgumentNullException("Voyage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Voyage));
            }
            if ((RotationNo == null)) {
                throw new global::System.ArgumentNullException("RotationNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(RotationNo));
            }
            if ((CHAName == null)) {
                throw new global::System.ArgumentNullException("CHAName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(CHAName));
            }
            if ((AgentName == null)) {
                throw new global::System.ArgumentNullException("AgentName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(AgentName));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(IsCancel));
            if ((CancelledBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((short)(CancelledBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CancelledOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(CancelledOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((long)(Original_RunningNo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private exp_CLPTableAdapter _exp_CLPTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public exp_CLPTableAdapter exp_CLPTableAdapter {
            get {
                return this._exp_CLPTableAdapter;
            }
            set {
                this._exp_CLPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._exp_CLPTableAdapter != null) 
                            && (this._exp_CLPTableAdapter.Connection != null))) {
                    return this._exp_CLPTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._exp_CLPTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(trackerNCFSDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._exp_CLPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.exp_CLP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._exp_CLPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(trackerNCFSDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._exp_CLPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.exp_CLP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._exp_CLPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(trackerNCFSDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._exp_CLPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.exp_CLP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._exp_CLPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(trackerNCFSDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._exp_CLPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._exp_CLPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._exp_CLPTableAdapter != null)) {
                    revertConnections.Add(this._exp_CLPTableAdapter, this._exp_CLPTableAdapter.Connection);
                    this._exp_CLPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._exp_CLPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._exp_CLPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._exp_CLPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._exp_CLPTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._exp_CLPTableAdapter != null)) {
                    this._exp_CLPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._exp_CLPTableAdapter]));
                    this._exp_CLPTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591