using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using BE = TrackerMVCEntities.BusinessEntities;
using RP = TrackerMVCBusinessLayer.TrackerMVCBusinessManger.ClosedLRList;
using BM = TrackerMVCBusinessLayer.TrackerMVCBusinessManger;
using TrackerMVC.Filters;
using System.Data;
using System.Data.Sql;
using HC = TrackerMVCDataLayer.Helper;
using Newtonsoft.Json;
using System.Web.UI.WebControls;
using System.IO;
using System.Web.UI;
using LR = TrackerMVCBusinessLayer.TrackerMVCBusinessManger.LRClosing;



namespace TrackerMVC.Controllers.ClosedLRList
{
    [UserAuthenticationFilter]
    public class ClosedLRListController : Controller
    {
        LR.LRClosing trackerProvider = new LR.LRClosing();
        RP.ClosedLRList reportprovider = new RP.ClosedLRList();
        HC.DBOperations db = new HC.DBOperations();
        // GET: ClosedLRList
        public ActionResult ClosedLRList()
        {
           
            List<BE.ActivityMaster> ActivityMaster = new List<BE.ActivityMaster>();
            ActivityMaster = reportprovider.getActivityMaster();
            ViewBag.Activity = new SelectList(ActivityMaster, "TYPEID", "Activity");
            return View();
        }

        public ActionResult GetClosedLRSummary(string ddlActivity, string ddlGSTName, string fromdate, string todate,string SearchCerteria,string LrNo)
        {
          
           

            DataTable dt = new DataTable();
            HC.DBOperations db = new HC.DBOperations();
            dt = db.sub_GetDatatable("USP_LST_CLOSED_LR '" + Convert.ToDateTime(fromdate).ToString("dd-MMM-yyyy HH:mm") + "', '" + Convert.ToDateTime(todate).ToString("dd-MMM-yyyy HH:mm") + "', '"+ SearchCerteria + "' ,'" + ddlActivity + "', '" + LrNo + "'");
           
            var json = JsonConvert.SerializeObject(dt);
            dt.Columns.Remove("View");

            Session["CloseLRList"] = dt;
            Session["fromdate"] = fromdate;
            Session["todate"] = todate;
            var jsonResult = Json(json, JsonRequestBehavior.AllowGet);
            jsonResult.MaxJsonLength = int.MaxValue;

            return jsonResult;
        }
        public ActionResult ExportToExcelImpHC()
        {

            DataTable CompanyMaster = new DataTable();
            HC.DBOperations db = new HC.DBOperations();
            // dt = db.sub_GetDatatable("USP_GetContainerSurveyRemarks '" + containerNo + "'");
            CompanyMaster = db.sub_GetDatatable("USP_COMPANYDETAILS");
            var CompanyName = Convert.ToString(CompanyMaster.Rows[0]["con_Name"]);
            var CompanyAddress = Convert.ToString(CompanyMaster.Rows[0]["AddressI"]);
            DataTable GetDailyActivityTripINOutreport = (DataTable)Session["CloseLRList"];
            string Tittle = "From " + Session["fromdate"] + " To " + Session["todate"] + ".";
            GridView gridview = new GridView();
            gridview.DataSource = GetDailyActivityTripINOutreport;
            gridview.DataBind();

            Response.Clear();
            Response.Buffer = true;
            Response.Charset = "";
            Response.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
            Response.AddHeader("content-disposition", "attachment;filename=CloseLRList.xls");
            using (StringWriter sw = new StringWriter())
            {
                using (HtmlTextWriter htw = new HtmlTextWriter(sw))

                {

                    // render the GridView to the HtmlTextWriter
                    htw.Write("<table><tr><td style='font-weight: bold; text-align: center'; colspan ='7'><strong style='font-size: 26px'>" + CompanyName + " <strong></td></tr>");
                    htw.Write("<table><tr><td style='font-weight: bold; text-align: center'; colspan ='7'><strong style='font-size: 15px'>" + CompanyAddress + " <strong></td></tr>");
                    htw.Write("<table><tr><td style='font-weight: bold; text-align: center'; colspan ='7'><strong style='font-size: 15px'>Close Lr List Report<strong></td></tr>");
                    htw.Write("<table><tr><td style='font-weight: bold; text-align: center'; colspan ='7'><strong style='font-size: 15px'>" + Tittle + " <strong></td></tr>");
                    htw.Write("<table><tr><td colspan='7'><h6 style='text-align:left'> *output generated by tracker </h6></td></tr>");
                    gridview.RenderControl(htw);
                    // Output the GridView content saved into StringWriter
                    Response.Output.Write(sw.ToString());
                    Response.Flush();
                    Response.End();
                }
            }

            return View();
        }
        public ActionResult ClosedLRDocumentList(string LRNo)
        {
            List<BE.ClosedLRList> JOAttachmentList = new List<BE.ClosedLRList>();
            @ViewBag.LRNo = LRNo;
            return PartialView(JOAttachmentList);
          
        }
        [HttpPost]
        public JsonResult GetLRAttachment(string LRNo)
        {
            List<BE.ClosedLRList> JOAttachmentList = new List<BE.ClosedLRList>();
            int Userid = Convert.ToInt32(Session["Tracker_userID"]);
            JOAttachmentList = reportprovider.GetLRAttachment(LRNo);
            var jsonResult = Json(JOAttachmentList, JsonRequestBehavior.AllowGet);
            jsonResult.MaxJsonLength = int.MaxValue;
            return jsonResult;
        }
        //[HttpPost]
        public FileResult DownLoadFile(int id,string id1)
        {
            BE.ClosedLRList LRDocumentList = new BE.ClosedLRList();
            LRDocumentList = reportprovider.getAttachment(id,id1);
            //return File(LRDocumentList.FilePath, LRDocumentList.DocumentType);
            return File(LRDocumentList.FilePath, "application.pdf");
        }


        public ActionResult PendingDiversionLocation()
        {
                List<BE.ActivityMaster> ActivityMaster = new List<BE.ActivityMaster>();
                ActivityMaster = reportprovider.getActivityMaster();
                ViewBag.Activity = new SelectList(ActivityMaster, "TYPEID", "Activity");
            return View();
        }

        public ActionResult GetPendingClosedLRSummary(string ddlActivity, string ddlGSTName, string fromdate, string todate)
        {

            List<BE.ClosedLRList> LRList = new List<BE.ClosedLRList>();
            LRList = reportprovider.getPendingClosedLRList(fromdate, todate, ddlActivity);
            Session["PendingClosedLRList"] = LRList;
            Session["fromdate"] = fromdate;
            Session["todate"] = todate;
            Session["ddlActivity"] = ddlActivity;
            var jsonResult = Json(LRList, JsonRequestBehavior.AllowGet);
            jsonResult.MaxJsonLength = int.MaxValue;
            return jsonResult;
        }

        public ActionResult ExportToExcelPendingImpHC()
        {
           
            HC.DBOperations db = new HC.DBOperations();
            DataTable dt = db.sub_GetDatatable("USP_PendingDiversionLocation '" + Convert.ToDateTime(Session["fromdate"]).ToString("yyyy-MM-dd HH:mm:ss") + "','" + Convert.ToDateTime(Session["todate"]).ToString("yyyy-MM-dd HH:mm:ss") + "','" + Session["ddlActivity"] + "'");
            Session["PendingClosedLRList"] = dt;
            DataTable dt1 = (DataTable)Session["PendingClosedLRList"];

            GridView gridview = new GridView();
            gridview.DataSource = dt1;
            gridview.DataBind();

            Response.Clear();
            Response.Buffer = true;
            Response.Charset = "";
            Response.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
            Response.AddHeader("content-disposition", "attachment;filename=PendingDiversionLocation.xls");
            using (StringWriter sw = new StringWriter())
            {
                using (HtmlTextWriter htw = new HtmlTextWriter(sw))
                {
                    // render the GridView to the HtmlTextWriter
                    gridview.RenderControl(htw);
                    // Output the GridView content saved into StringWriter
                    Response.Output.Write(sw.ToString());
                    Response.Flush();
                    Response.End();
                }
            }
            return View();
        }

        public ActionResult CloseLR(string data)
        {
            string message = "";
            DataTable dt = new DataTable();
            int Userid = Convert.ToInt32(Session["Tracker_userID"]);
            dt = db.sub_GetDatatable("USP_CLoseLR '" + data + "'");
            return Json(message);
        }


        [HttpPost]
        public ActionResult CloseLRWithDataDEtails(int LRNo)
        {
            //List<BE.DocList> DocLRList = new List<BE.DocList>();
            //List<BE.DocList> DocList = new List<BE.DocList>();
            BE.LRListOpen DocList = new BE.LRListOpen();
            DocList = trackerProvider.GetDocList(LRNo);
            //DocLRList = DocList.DocList;
            ViewBag.DocList = new SelectList(DocList.DocList, "DocID", "DocName");
            ViewBag.ContainerNo = DocList.ContainerNo;
            ViewBag.FromLocation = DocList.FromLocation;
            ViewBag.ToLocation = DocList.ToLocation;
            ViewBag.VehicleNo = DocList.VehicleNo;
            ViewBag.FactoryReportingTime = DocList.FactoryReportingTime;
            ViewBag.FactoryInTime = DocList.FactoryInTime;
            ViewBag.FactoryOutTime = DocList.FactoryOutTime;
            ViewBag.LRDate = DocList.LRDate;
            ViewBag.LorryNo = LRNo;

            // Code by prashant
            List<BE.LocationMaster> Location = new List<BE.LocationMaster>();
            Location = trackerProvider.getLocation();
            ViewBag.Location = new SelectList(Location, "LocationID", "Location");
            //Code End by Prashant
            return PartialView(DocList);
        }

        public ActionResult EditClosing(int LRNo, DateTime FactoryRepDate, DateTime FactoryInDate, DateTime FactoryOutDate, string InFromLocation)
        {
            DataTable dt = new DataTable();
            int Userid = Convert.ToInt32(Session["Tracker_userID"]);
            dt = db.sub_GetDatatable("USP_UPDATE_CLOSING_DETAILS_LRNO_WISE_Factory_date_Edit " + LRNo + ",'" + Convert.ToDateTime(FactoryRepDate).ToString("yyyy-MM-dd HH:mm") + "','" + Convert.ToDateTime(FactoryInDate).ToString("yyyy-MM-dd HH:mm") + "','" + Convert.ToDateTime(FactoryOutDate).ToString("yyyy-MM-dd HH:mm") + "'," + Userid + ",'" + InFromLocation + "'");
            return Json(Userid);
        }
    }
}