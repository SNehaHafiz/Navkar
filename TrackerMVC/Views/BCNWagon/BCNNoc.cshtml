@model TrackerMVCEntities.BusinessEntities.BCNNocUpdation
@{
    ViewBag.Title = "BCNNoc";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
<script src="~/js/GetTableJson.js"></script>
<div class=" content-area" id="divUpdateNOCStatus">
    <div class="page-header">
        <h4 class="page-title">BCN NOC Updation</h4>
        <div class="form-group">
            <label class="form-label"></label>
            <div class="row gutters-xs">
                <div class="col">
                    <button type="button" class="btn btn-icon btn-teal" name="summarylist" title="Summary list" id="summarylist" onclick="ViewNOCSummary();"><i class="fa fa-file-text"></i></button>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm("BCNNocSave", "BCNWagon", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-12 col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">NOC No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.NOCNo, new { htmlAttributes = new { @class = "form-control Number", @id = "NOCNo", @readonly = "Readonly", Placeholder = "NEW" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" id="divIGM">
                                <div class="form-group">
                                    <label class="form-label">NOC Date</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.NOCDate, new { htmlAttributes = new { @class = "form-control Number", @id = "NOCDate", @readonly = "Readonly", Placeholder = "NEW" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Shipper Name</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownListFor(model => model.ShipperId, (IEnumerable<SelectListItem>)ViewBag.shippers, "--Select--", new { @class = "form-control", @id = "ddlShipperName", name = "ShipperName", onblur = "myRequiredValidation('ddlShipperName')", autoComplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Orgin Station</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownListFor(model => model.OrginStationId, (IEnumerable<SelectListItem>)ViewBag.OrginStation, "--Select--", new { @class = "form-control", @id = "ddlOrginStation", name = "OrginStation", onblur = "myRequiredValidation('ddlOrginStation')", autoComplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Commodity</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownListFor(model => model.CommodityId, (IEnumerable<SelectListItem>)ViewBag.CommodityGroup, "--Select--", new { @class = "form-control", @id = "ddlCommodity", name = "Commodity", onblur = "myRequiredValidation('ddlCommodity')", autoComplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Stuff Type</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownListFor(model => model.StuffingTypeId, (IEnumerable<SelectListItem>)ViewBag.StuffType, "--Select--", new { @class = "form-control", @id = "ddlStuffType", name = "Commodity", onblur = "myRequiredValidation('ddlCommodity')", autoComplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">No of Wagon</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.NoOfWagonPlanned, new { htmlAttributes = new { @class = "form-control Number", @id = "txtNoofWagon" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Placement Date</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.PlanedDate, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "txtPlacementDate", autoComplete = "off" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Stuffing Date at Orgin Station</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.StuffingDate, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "txtStuffingDate", autoComplete = "off" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">ETA at HTSD</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ETADate, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "txtETADate", autoComplete = "off" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">ETA at HTSD</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ETADate, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "txtETADate", autoComplete = "off" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-success" type="submit" id="btnSave" name="Add">Save</button>&nbsp;
                                            <button type="button" class="btn btn-icon btn-gray" name="clearProfile" title="clear" id="btnclearValue">Clear</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div class=" content-area" id="divNOCList" style="display:none">
    <div class="page-header">
        <h4 class="page-title">NOC Summary Details</h4>
        <div class="ibox-content  text-right">
            <a onclick="getBack();" class="btn btn-primary btn-success" style="color:white;align-content:center;"><i class="fa fa-arrow-left" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Back"></i>  </a></li>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">Category</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.DropDownList("ddlCategory", new List<SelectListItem>
                                 { new SelectListItem { Text = "All", Value = ""},
                                 new SelectListItem { Text = "NOC Pending", Value = "NOC Pending"},
                                 new SelectListItem { Text = "NOC Complete", Value = "NOC Complete"},
                                 }, new { @class = "form-control", autocomplete = "off", @id = "ddlCategory" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">From Date</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("txtFromDate", null, new { @class = "form-control form_datetime1", @id = "txtFromDate", @Value = DateTime.Now.AddDays(-10).ToString("dd MMM yyyy 00:00") })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">To Date</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("txtToDate", null, new { @class = "form-control form_datetime1", @id = "txtToDate", @Value = DateTime.Now.ToString("dd MMM yyyy 23:59") })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label" style="visibility:hidden">.</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        <button type="button" class="btn btn-icon btn-primary" name="clearProfile" title="clear" onclick="BCNNOCSummary();" id="btnShowSummary">Show</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @Html.ActionLink("Export To Excel", "BCNNOCSummaryExport", null, new { @class = "btn btn-primary btn-md" })
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblNOCList"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (ViewBag.Message != null)
{
    <script type="text/javascript">
    window.onload = function () {
        var message = @Html.Raw(Json.Encode(ViewBag.Message))
        alert(message);
        };
    </script>
}

<script>
    function PrintNOC(NocNo, WOYear) {
        debugger;

        //var WorkYear = "2020-21";
        var data1 = { 'NocNo': NocNo, 'WorkYear': WOYear };
        data = JSON.stringify(data1);

        $.ajax({
            url: '/BCNWagon/BCNNocPrint',
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
               //window.print();
                var myWindow = window.open("", "MsgWindow1", 'width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=no');
                myWindow.close();
                var myWindow = window.open("", "MsgWindow1", 'width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=no');
                myWindow.document.write(response);
                //myWindow.print();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
                $("#tracker-loader").fadeOut("slow");
            }
        });
    };

    function EditNOC(NocNo, WOYear) {
        debugger;
        var data1 = { 'NocNo': NocNo, 'WOYear': WOYear };
        data = JSON.stringify(data1);

        $.ajax({
            url: '/BCNWagon/BCNEditNOC',
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                if (response.ErrorMessage != "") {
                    alert(response.ErrorMessage);
                }
                else {
                    if (response.ArrivalDate != "") {
                        alert("Edit Not Allowed. Rake arrived at CFS as on Data :- " + response.ArrivalDate);
                    }
                    else {
                        $("#NOCNo").val(response.NOCNo);
                        $("NOCDate").val(response.NOCDate);
                        $("#ddlShipperName").val(response.ShipperId);
                        $("#ddlOrginStation").val(response.OrginStationId);
                        $("#ddlCommodity").val(response.CommodityId);
                        $("#ddlStuffType").val(response.StuffingTypeId);
                        $("#txtNoofWagon").val(response.NoOfWagonPlanned);
                        $("#txtPlacementDate").val(response.PlanedDate);
                        $("#txtStuffingDate").val(response.StuffingDate);
                        $("#txtETADate").val(response.ETADate);

                        getBack();
                    }
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
                $("#tracker-loader").fadeOut("slow");
            }
        });
    };

    function getBack() {
        $("#divNOCList").hide();
        $("#divUpdateNOCStatus").show();
    };

    function ViewNOCSummary() {
        $("#divNOCList").show();
        $("#divUpdateNOCStatus").hide();
    };

    $(document).ready(function () {
        
    });

    function BCNNOCSummary() {

        var ddlCategory = $("#ddlCategory").val();
        var txtFromDate = $("#txtFromDate").val();
        var txtToDate = $("#txtToDate").val();

        var data1 = { "Category": ddlCategory,"FromDate": txtFromDate, "ToDate": txtToDate };

        var data = JSON.stringify(data1);

        $.ajax({
            url: '/BCNWagon/getNOCDet',
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                RepTableDataJson($("#tblNOCList"), data, "NOC Summary", "NOCList");
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }


    function CancelNOC(NocNo, WOYear) {
        debugger;
       
        var r = confirm("Are you sure want to cancel this Noc Updation?");
        if (r == true) {


            var data1 = { 'NocNo': NocNo, 'WOYear': WOYear };
            data = JSON.stringify(data1);

        $.ajax({
        type: "POST",
            url: "/BCNWagon/CancelBCNNoc",
            data: data,
        contentType: "application/json; charset=utf-8",
            success: function (response) {
                alert(response);
    window.location.href = '@Url.Action("BCNNOc", "BCNWagon")';
    },
        error: function (errormessage) {
        // alert("error");
        alert(errormessage.responseText);
        }
        });

        }

        };

</script>