@{
    ViewBag.Title = "Work Order";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
<div class=" content-area" id="divWorkOrder">
    <div class="page-header">
        <h4 class="page-title">Generate SSR Work Order </h4>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a onclick="OpenWOSummary();" class="btn btn-primary btn-success text-right" style="align-content:center;color:white"><i class="fa fa-file-text" data-placement="bottom" title="Open Work Order Summary"></i> </a>
            </li>
        </ol>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">WO No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtWorkOrder", null, new { @class = "form-control", @id = "txtWorkOrder", name = "txtWorkOrder", disabled = "disabled", autocomplete = "off", placeholder = "NEW" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3">
                                <div class="form-group label-floating">
                                    <label class="form-label mandatory">WO Date</label>
                                    @Html.TextBox("txtWODate", null, new { @class = "form-control  form_datetime1 ", @id = "txtWODate", name = "txtWODate", Value = DateTime.Now.ToString("dd MMM yyyy HH:mm"), autocomplete = "off", @maxlength = 100 })
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3">
                                <div class="form-group label-floating">
                                    <label class="form-label">Category</label>
                                    @Html.DropDownList("ddlCategory", new List<SelectListItem>
                                    { new SelectListItem { Text = "General", Value = "General"},
                                    new SelectListItem { Text = "RePacking", Value = "RePacking"},
                                    new SelectListItem { Text = "Stuff-Destuff", Value = "Stuff-Destuff"},
                                    new SelectListItem { Text = "Shifting", Value = "Shifting"},
                                    new SelectListItem { Text = "BTT", Value = "BTT"},
                                    new SelectListItem { Text = "Train Domestic", Value = "Train Domestic"},
                                      }, new { @class = "form-control", autocomplete = "off", @id = "ddlCategory", onchange = "OnCategoryChange()" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3">
                                <div class="form-group label-floating">
                                    <label class="form-label">WO Type</label>
                                    @Html.DropDownList("ddlWOType", (IEnumerable<SelectListItem>)ViewBag.WOType, "--Select--", new { @class = "form-control", @id = "ddlWOType", name = "ddlWOType", autocomplete = "off", onchange = "ChangeWOType()" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Search</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("--Select--", new List<SelectListItem>
                                              {
                                                  new SelectListItem { Text = "SB No", Value = "SB No"},
                                                  new SelectListItem { Text = "Container No", Value = "Container No"},
                                                  new SelectListItem { Text = "Carting Allow ID", Value = "Carting Allow ID"},
                                                  new SelectListItem { Text = "Stuffing Request ID", Value = "Stuffing Request ID"},
                                                }, new { @class = "form-control", autocomplete = "off", @id = "ddlsummarysearchcerteria" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-1 col-sm-12" id="divSBNo">
                                <div class="form-group">
                                    <label class="form-label mandatory">SB No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtSBNo", null, new { @class = "form-control", @id = "txtSBNo", name = "txtSBNo", autocomplete = "off", placeholder = "SB No" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divInvoiceNo" style="display:none">
                                <div class="form-group">
                                    <label class="form-label mandatory">Container No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtInvoiceNo", null, new { @class = "form-control", @id = "txtInvoiceNo", name = "txtInvoiceNo", autocomplete = "off", placeholder = "Container No" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-1 col-sm-12" id="divcartingID" style="display:none">
                                <div class="form-group">
                                    <label class="form-label mandatory">Carting ID</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("TxtCartingID", null, new { @class = "form-control", @id = "TxtCartingID", name = "TxtCartingID", autocomplete = "off", placeholder = "carting allow ID" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-1 col-sm-12" id="divrequestid" style="display:none">
                                <div class="form-group">
                                    <label class="form-label mandatory">Request ID</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("TxtRequestID", null, new { @class = "form-control", @id = "TxtRequestID", name = "TxtRequestID", autocomplete = "off", placeholder = "request allow ID" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divSBAdd">
                                <div class="form-group" style="padding-top:25px">

                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" type="button" id="btnAddSBNo" name="Add" onclick="OnAddSBNo()"><i class="fa fa-check"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divInvoiceAdd" style="display:none">
                                <div class="form-group" style="padding-top:25px">

                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" type="button" id="btnAddInvoiceNo" name="Add" onclick="OnAddInvoiceNo()"><i class="fa fa-check"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divCartingAdd" style="display:none">
                                <div class="form-group" style="padding-top:25px">

                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" type="button" id="btnAddInvoiceNo" name="Add" onclick="OnCartingID()"><i class="fa fa-check"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divRequestAdd" style="display:none">
                                <div class="form-group" style="padding-top:25px">

                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" type="button" id="btnAddInvoiceNo" name="Add" onclick="OnRequestID()"><i class="fa fa-check"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <b>CHA :</b><label id="lblCHAName"></label>
                                <label id="lblCHAID" style="display:none"></label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <b>Shipper Name :</b><label id="lblShipperName"></label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <b>On Account :</b><label id="lblOnAccountName"></label>
                                <label id="lblOnAccountID" style="display:none"></label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <b>Manifest Qty :</b><label id="lblManiFestQty"></label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <b>Cargo Description :</b><label id="lblCargoDescription"></label>
                                <label id="lblSBEntryID" style="display:none"></label>
                                <label id="lblTotStuffPkgs" style="display:none"></label>
                            </div>
                        </div>
                        <div class="row" style="display:none">
                            <div class="col-lg-10 col-sm-10"></div>
                            <div class="col-lg-2 col-sm-2 float-right">
                                <b>Unit Weight :</b><label id="lblUnitWt"></label>
                            </div>
                        </div>
                        <div class="row" style="display:none">
                            <div class="col-lg-10 col-sm-10"></div>
                            <div class="col-lg-2 col-sm-2 float-right">
                                <b>Previous Pkgs :</b><label id="lblPrevPkgs"></label>
                            </div>
                        </div>
                        <div class="row" style="display:none">
                            <div class="col-lg-10 col-sm-10"></div>
                            <div class="col-lg-2 col-sm-2 float-right">
                                <b>Cont. Previous Pkgs :</b><label id="lblContPrevPkgs"></label>
                            </div>
                        </div>
                        <div class="row" style="display:none">
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Stuff Location</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlStuffLocation", new List<SelectListItem>
                            { new SelectListItem { Text = "--Select--", Value = ""},
                            new SelectListItem { Text = "Container", Value = "Container"},
                            new SelectListItem { Text = "Warehouse", Value = "Warehouse"},
                              }, new { @class = "form-control", autocomplete = "off", @id = "ddlStuffLocation", onchange = "OnStuffLocationChange()" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" id="divContainerNo" style="display:none">
                                <div class="form-group">
                                    <label class="form-label mandatory">Container No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtContainerNo", null, new { @class = "form-control", @id = "txtContainerNo", name = "txtContainerNo", autocomplete = "off", placeholder = "Container No", @maxlength = 11, onblur = "BlurCOntainerNo()" })
                                            @*<select id="ddlContainerNo" class="form-control" onchange="GetTotalPkgsContainerWise()">
                                                    <option value="">--Select--</option>
                                                </select>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3" id="divWarehouse" style="display:none">
                                <div class="form-group label-floating">
                                    <label class="form-label">Warehouse</label>
                                    @*@Html.TextBox("txtOrigin", null, new { @class = "form-control", @id = "txtOrigin", name = "txtOrigin", autocomplete = "off", rows = "2", @maxlength = 500 })*@
                                    @Html.DropDownList("ddlWarehouse", (IEnumerable<SelectListItem>)ViewBag.WHList, "--Select--", new { @class = "form-control", @id = "ddlWarehouse", name = "ddlWarehouse", autocomplete = "off" })
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" id="divVehicle">
                                <div class="form-group">
                                    <label class="form-label mandatory">Vehicle No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <select id="ddlVehicleNo" class="form-control" onchange="GetTotalPkgsVehicleWise()">
                                                <option value="">--Select--</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-2">
                                <div class="form-group label-floating">
                                    <label class="form-label">Total Pkgs</label>
                                    @Html.TextBox("txtTotalPkgs", null, new { @class = "form-control", @disabled = "disabled", @id = "txtTotalPkgs", name = "txtTotalPkgs", autocomplete = "off", placeholder = "Total Pkgs" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-2">
                                <div class="form-group label-floating">
                                    <label class="form-label">Total Weight</label>
                                    @Html.TextBox("txtTotalWeight", null, new { @class = "form-control", @disabled = "disabled", @id = "txtTotalWeight", name = "txtTotalWeight", autocomplete = "off", placeholder = "Total Weight" })
                                </div>
                            </div>
                        </div>
                        <div class="row" style="display:none">
                            <div class="col-sm-12 col-lg-2">
                                <div class="form-group label-floating">
                                    <label class="form-label">Pkgs</label>
                                    @Html.TextBox("txtStuffDStuffPkgs", null, new { @class = "form-control", @id = "txtStuffDStuffPkgs", name = "txtStuffDStuffPkgs", autocomplete = "off", placeholder = "Pkgs" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-2">
                                <div class="form-group label-floating">
                                    <label class="form-label">Weight</label>
                                    @Html.TextBox("txtWeight", null, new { @class = "form-control", @id = "txtWeight", name = "txtWeight", autocomplete = "off", placeholder = "Weight" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-2">
                                <div class="form-group label-floating">
                                    <label class="form-label">Pkg Type</label>
                                    @*@Html.TextBox("txtOrigin", null, new { @class = "form-control", @id = "txtOrigin", name = "txtOrigin", autocomplete = "off", rows = "2", @maxlength = 500 })*@
                                    @Html.DropDownList("ddlPkgType", (IEnumerable<SelectListItem>)ViewBag.PKGList, "--Select--", new { @class = "form-control", @id = "ddlPkgType", name = "ddlPkgType", autocomplete = "off" })
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3">
                                <div class="form-group label-floating">
                                    <label class="form-label">Vendor Name</label>
                                    @*@Html.TextBox("txtOrigin", null, new { @class = "form-control", @id = "txtOrigin", name = "txtOrigin", autocomplete = "off", rows = "2", @maxlength = 500 })*@
                                    @Html.DropDownList("ddlVendor", (IEnumerable<SelectListItem>)ViewBag.VendorList, "--Select--", new { @class = "form-control", @id = "ddlVendor", name = "ddlVendor", autocomplete = "off" })
                                    <input type="hidden" id="hdnVendorId" />
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3">
                                <div class="form-group label-floating">
                                    <label class="form-label">Equipment Type</label>
                                    @*@Html.TextBox("txtOrigin", null, new { @class = "form-control", @id = "txtOrigin", name = "txtOrigin", autocomplete = "off", rows = "2", @maxlength = 500 })*@
                                    @Html.DropDownList("ddlEQType", (IEnumerable<SelectListItem>)ViewBag.EQType, "--Select--", new { @class = "form-control", @id = "ddlEQType", name = "ddlEQType", autocomplete = "off" })
                                </div>
                            </div>
                            <div class="col-lg-1 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Hours</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("TxtHours", null, new { @class = "form-control", @id = "TxtHours", name = "TxtHours", @type = "Number" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-1 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">CBM</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("TxtCMB", null, new { @class = "form-control", @id = "TxtCMB", name = "TxtCMB", @type = "Number" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Remarks</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtRemarks", null, new { @class = "form-control", @id = "txtRemarks", name = "txtRemarks", rows = "2", textmode = "MultiLine", autocomplete = "off", placeholder = "Remarks", @Value = ViewBag.Remarks })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-1 col-sm-12">
                                <div class="form-group" style="padding-top:25px">
                                    @*<label class="form-label" style="visibility:hidden">.</label>*@
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" type="button" id="btnAdd" name="Add" onclick="ShowWorkOrderList()">Add</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="display:none">
                            <div class="col-lg-2 col-sm-12" id="divsurveyor">
                                <div class="form-group">
                                    <label class="form-label">Surveyor</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlSurveyor", (IEnumerable<SelectListItem>)ViewBag.Surveyor, "--Select-- ", new { @class = "form-control", @id = "ddlSurveyor", name = "ddlSurveyor", autocomplete = "off" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblWorkOrderDets">
                                        <thead>
                                            <tr>
                                                <th class="wd-15p sorting"></th>
                                                <th class="wd-15p sorting">Stuff Location</th>
                                                <th class="wd-15p sorting">Container No</th>
                                                <th class="wd-15p sorting">Warehouse</th>
                                                <th class="wd-15p sorting">Vehicle No</th>
                                                <th class="wd-15p sorting">Pkgs</th>
                                                <th class="wd-15p sorting">Pkg Type</th>
                                                <th class="wd-15p sorting">Weight</th>
                                                <th class="wd-15p sorting">load/unload Pkgs</th>
                                                <th class="wd-15p sorting">load/unload Wt</th>
                                                <th class="wd-15p sorting">Examine</th>
                                                <th class="wd-15p sorting">Vendor</th>
                                                <th class="wd-15p sorting">Equipment Type</th>
                                                <th class="wd-15p sorting">Remarks</th>
                                                <th class="wd-15p sorting">Hours</th>
                                                <th class="wd-15p sorting">CBM</th>
                                                <th class="wd-15p sorting">Surveyor</th>
                                                <th class="wd-15p sorting">Entry ID</th>
                                                <th class="wd-15p sorting">Carting ID</th>
                                                <th class="wd-15p sorting">SB No</th>
                                                <th class="wd-15p sorting">Sb Entry ID</th>

                                                <th class="wd-15p sorting">Material Qty</th>
                                                <th class="wd-15p sorting">Material Descriptions</th>
                                                <th class="wd-15p sorting"></th>


                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="divSaveBtn">
                            <div class="col-lg-3 col-sm-3" style="margin-top:20px;">
                                <div class="form-group">
                                    <button id="btnsave" class="btn btn-success btn-xs" onclick="Save()">Save</button>
                                    <input type="button" name="clearProfile" value="Clear" class="btn cursor" title="clear" id="clearValue" onclick="Clear()" />
                                </div>
                            </div>
                        </div>
                        <div class="row" id="Divclosebtn" style="display:none">
                            <div class="col-lg-3 col-sm-3" style="margin-top:20px;">
                                <div class="form-group">
                                    @*<button id="btnClose" class="btn btn-success btn-xs" onclick="editclosed()">Close</button>*@
                                    <button id="btnClose" class="btn btn-success btn-xs" onclick="FinalClose()">Close</button>
                                    <input type="button" name="clearProfile" value="Clear" class="btn cursor" title="clear" id="clearValue" onclick="Clear()" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=" content-area" id="divEditWorkOrder" style="display:none">
    <div class="page-header">
        <h4 class="page-title">Edit SSR Work Order </h4>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a onclick="BackToWorkOrderEdit();" class="btn btn-primary btn-success text-right" style="align-content:center;color:white"><i class="fa fa-arrow-left" data-placement="bottom" title="Add Work Order"></i> </a>
            </li>
        </ol>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">WO No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtEWorkOrder", null, new { @class = "form-control", @id = "txtEWorkOrder", name = "txtEWorkOrder", disabled = "disabled", autocomplete = "off", placeholder = "NEW", @Value = ViewBag.WONO })
                                            <input type="hidden" id="hdnSrNo" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3">
                                <div class="form-group">
                                    <label class="form-label mandatory">WO No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtEWODate", null, new { @class = "form-control  form_datetime1 ", @id = "txtEWODate", name = "txtEWODate", @disabled = "disabled", Value = DateTime.Now.ToString("dd MMM yyyy HH:mm"), autocomplete = "off", @maxlength = 100 })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Total Pkgs</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtETotalPkgs", null, new { @class = "form-control", @id = "txtETotalPkgs", name = "txtETotalPkgs", autocomplete = "off", placeholder = "Total Pkgs" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3">
                                <div class="form-group">
                                    <label class="form-label mandatory">Total Weight</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtETotalWeight", null, new { @class = "form-control", @id = "txtETotalWeight", name = "txtETotalWeight", autocomplete = "off", placeholder = "Total Weight" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-3">
                                <div class="form-group">
                                    <label class="form-label mandatory">Vendor Name</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlEVendor", (IEnumerable<SelectListItem>)ViewBag.VendorList, "--Select--", new { @class = "form-control", @id = "ddlEVendor", name = "ddlEVendor", autocomplete = "off" })
                                            <input type="hidden" id="hdnVendorId" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory" style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-success" type="button" id="btnEdit" name="Modify" onclick="EditWorkOrder()">Midify</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=" content-area" id="divOpenWorkOrderSummary" style="display:none">
    <div class="page-header">
        <h4 class="page-title">List of Open SSR Work Orders </h4>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a onclick="BackToWorkOrder();" class="btn btn-primary btn-success text-right" style="align-content:center;color:white"><i class="fa fa-arrow-left" data-placement="bottom" title="Add Work Order"></i> </a>
            </li>
        </ol>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblWorkOrderOpenList" style="width:100%;">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                                <th class="wd-15p sorting">Sr No</th>
                                                <th class="wd-15p sorting">Work Order No</th>
                                                <th class="wd-15p sorting">Sequence No</th>
                                                <th class="wd-15p sorting">Work Order Date</th>
                                                <th class="wd-15p sorting">WO Type</th>
                                                <th class="wd-15p sorting">Shipping Bill No</th>
                                                <th class="wd-15p sorting">On Account</th>
                                                <th class="wd-15p sorting">CHA</th>
                                                <th class="wd-15p sorting">Vehicle No</th>
                                                <th class="wd-15p sorting">Container No</th>
                                                <th class="wd-15p sorting">Warehouse</th>
                                                <th class="wd-15p sorting">Pkgs</th>
                                                <th class="wd-15p sorting">Vendor</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="MaterialListModal" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title">Material List</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">

                    <div class="col-10 col-10">
                        <div class="form-group ">
                            <label class="form-label">Search Item</label>
                            @Html.TextBox("TxtSearchItem", null, new { @class = "form-control", @id = "TxtSearchItem", name = "TxtSearchItem" })
                        </div>
                    </div>
                    <div class="col-2 col-2">
                        <div class="form-group">
                            <label id="UniqueMaterialAutoID" style="visibility:hidden">Group</label>

                            <div class="row gutters-xs" id="searchVDiv">
                                <div class="col">
                                    <span class="col-auto">
                                        <a class="btn btn-primary" href="#" id="searchV" onclick="ShowMaterialsReceivingConfirmationsList()" title="Search Item"><i class="fa fa-search"></i></a>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="col-12 col-12">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblMaterialList">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Issue No</th>
                                        <th>GRN No</th>
                                        <th>Item Code</th>
                                        <th>Item Name</th>
                                        <th>Qty</th>
                                        <th>Rate</th>
                                        <th>Sent By</th>
                                        <th>Sent On</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetLashingAndChockingDetails()">Send</button>
            </div>
        </div>

    </div>
</div>
<script>
    var AllAutoIDArrayString = '';
    var AllAutoIDArray = [];
    var WODetailsArrayList = [];
    var MaterialListArrray = [];
    var UniqueSRNO = 0;
    var SurveyorL = [];
    Surveyors = @Html.Raw(Json.Encode(@ViewBag.SurveyorL));
    SurveyorL = JSON.parse(Surveyors);






    function OnCartingID() {

        var Requestid = $("#TxtCartingID").val();
        var ddlWOType = document.getElementById('ddlWOType').value;
        var ddlCategory = document.getElementById('ddlCategory').value;
        if (ddlWOType == "") {
            alert('Please select work order type first!');
            document.getElementById('ddlWOType').focus();
            return false;
        }

        var data1 = { 'Requestid': Requestid, 'WOType': ddlWOType };
        var data = JSON.stringify(data1);



        $.ajax({
            url: "/WorkOrder/GetStuffingRequestDone",
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "0") {
                    OnCartingID1();
                } else {
                    alert(data);
                    return false;
                }
            },
            error: function (error) {
                let str = error.responseText;
                var a = str.indexOf("<title>") + 7;
                var b = str.indexOf("</title>");
                str = str.substring(a, b);
                alert("Something went wrong: " + str);
            }
        })
    }

    function OnCartingID1() {
        WODetailsArrayList = [];
        var cartingNo = $("#TxtCartingID").val();
        var ddlWOType = document.getElementById('ddlWOType').value;
        var ddlCategory = document.getElementById('ddlCategory').value;
        if (ddlWOType == "") {
            alert('Please select work order type first!');
            document.getElementById('ddlWOType').focus();
            return false;
        }

        var data1 = { 'cartingNo': cartingNo };
        var data = JSON.stringify(data1);



        $.ajax({
            url: "/WorkOrder/GetcartingallowIDforworkorder_LashingAndChocking",
            //url: "/WorkOrder/GetcartingallowIDforworkorder",
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                WODetailsArrayList = data;

                document.getElementById("lblCHAName").innerHTML = data[0].CHANAME;
                document.getElementById("lblCHAID").innerHTML = data[0].CHAID;
                document.getElementById("lblShipperName").innerHTML = data[0].Shippername;
                document.getElementById("lblOnAccountName").innerHTML = data[0].CustomerName;
                document.getElementById("lblOnAccountID").innerHTML = data[0].Agid;

                
                if (ddlWOType == 'Lashing' || ddlWOType == 'Choking' || ddlWOType == 'Lashing & Choking') {
     
                    $('#tblWorkOrderDets').dataTable({
                        "destroy": true,
                        "bLengthChange": true,
                        "bPaginate": true,
                        //"bFilter": false,
                        "paging": false,
                        "order": true,
                        "aaData": data,
                        "columns": [
                            {

                                "data": "SRNO",
                                "render": function (data, type, row, meta) {

                                    data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.SRNO + '">';
                                    return data;

                                }
                            },
                            { "data": "StuffLocation" },
                            { "data": "Containerno" },
                            { "data": "Warehouse" },

                            {

                                "data": "VehicleNo",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"TxtVehicleNo' + row.SRNO + '\" class=\"form-control\" id=\"TxtVehicleNo' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            { "data": "DestuffQty" },
                            {
                                "data": "Unit",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="ddlPkgType' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < PKGL.length; j++) {

                                        data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            { "data": "Weight" },
                            {

                                "data": "OpeartionalPksg",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpPkgs' + row.SRNO + '\" class=\"form-control\" id=\"textOpPkgs' + row.SRNO + '\" onchange=\" ChkAmtValidate(this)\"   style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "OperationWt",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpweight' + row.SRNO + '\" class=\"form-control\" id=\"textOpweight' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Examine",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textExamine' + row.SRNO + '\" class=\"form-control\" id=\"textExamine' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Vendor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Vendor' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < VendorL.length; j++) {

                                        data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {
                                "data": "Equipment",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Equipment' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < EquipmentL.length; j++) {

                                        data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {

                                "data": "Remarks",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textRemarks' + row.SRNO + '\" class=\"form-control\" id=\"textRemarks' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Hours",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textHours' + row.SRNO + '\" class=\"form-control\" id=\"textHours' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },

                            {

                                "data": "CGM",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textCGM' + row.SRNO + '\" class=\"form-control\" id=\"textCGM' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Surveyor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="TxtSurveyor' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < SurveyorL.length; j++) {

                                        data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                    }

                                    data += '</select>';
                                    return data; ss

                                }

                            },
                            { "data": "SRNO" },
                            { "data": "CartingAllowID" },
                            { "data": "SBNo" },
                            { "data": "SBEntryID" },

                            {

                                "data": "MaterialQty",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\" onclick=\"OpenMaterialModal(' + row.SRNO + ')\"    value="' + data + '" >';
                                    return data;

                                }
                            },
                            {

                                "data": "MaterialDescriptions",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "SRNO",
                                "render": function (data, type, row, meta) {


                                    data = '<a   href="#" class="btn btn-sm btn-primary" title="View" onclick="CopySameContainerNo(' + data.SRNO + ')">Copy</a>';


                                    return data;
                                }


                            },

                        ]
                    });
                } else {

                $('#tblWorkOrderDets').dataTable({
                    "destroy": true,
                    "bLengthChange": true,
                    "bPaginate": true,
                    //"bFilter": false,
                    "paging": false,
                    "order": true,
                    "aaData": data,
                    "columns": [
                        {

                            "data": "SRNO",
                            "render": function (data, type, row, meta) {

                                data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.SRNO + '">';
                                return data;

                            }
                        },
                        { "data": "StuffLocation" },
                        { "data": "Containerno" },
                        { "data": "Warehouse" },

                        {

                            "data": "VehicleNo",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"TxtVehicleNo' + row.SRNO + '\" class=\"form-control\" id=\"TxtVehicleNo' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        { "data": "DestuffQty" },
                        {
                            "data": "Unit",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="ddlPkgType' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < PKGL.length; j++) {

                                    data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "Weight" },
                        {

                            "data": "OpeartionalPksg",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpPkgs' + row.SRNO + '\" class=\"form-control\" id=\"textOpPkgs' + row.SRNO + '\" onchange=\" ChkAmtValidate(this)\"   style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "OperationWt",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpweight' + row.SRNO + '\" class=\"form-control\" id=\"textOpweight' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Examine",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textExamine' + row.SRNO + '\" class=\"form-control\" id=\"textExamine' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Vendor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Vendor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < VendorL.length; j++) {

                                    data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {
                            "data": "Equipment",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Equipment' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < EquipmentL.length; j++) {

                                    data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {

                            "data": "Remarks",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textRemarks' + row.SRNO + '\" class=\"form-control\" id=\"textRemarks' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Hours",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textHours' + row.SRNO + '\" class=\"form-control\" id=\"textHours' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },

                        {

                            "data": "CGM",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textCGM' + row.SRNO + '\" class=\"form-control\" id=\"textCGM' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Surveyor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="TxtSurveyor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < SurveyorL.length; j++) {

                                    data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                }

                                data += '</select>';
                                return data;ss

                            }

                        },
                        { "data": "SRNO" },
                        { "data": "CartingAllowID" },
                        { "data": "SBNo" },
                        { "data": "SBEntryID" },
                        
                        {

                            "data": "MaterialQty",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "MaterialDescriptions",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        { "data": "SRNO" },

                    ]
                });
                }








            },
            error: function (response) {
                alert(response.responseText);
            }
        })
    }



    function OnAddSBNo() {

        var SBNO = $("#txtSBNo").val();
        var ddlWOType = document.getElementById('ddlWOType').value;
        var ddlCategory = document.getElementById('ddlCategory').value;
        if (ddlWOType == "") {
            alert('Please select work order type first!');
            document.getElementById('ddlWOType').focus();
            return false;
        }

        var data1 = { 'SBNO': SBNO };
        var data = JSON.stringify(data1);

        $.ajax({
            url: "/WorkOrder/GetSBNOforworkorder_LashingAndChocking",
            //url: "/WorkOrder/GetSBNOforworkorder",
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                 WODetailsArrayList = data;

                document.getElementById("lblCHAName").innerHTML = data[0].CHANAME;
                document.getElementById("lblCHAID").innerHTML = data[0].CHAID;
                document.getElementById("lblShipperName").innerHTML = data[0].Shippername;
                document.getElementById("lblOnAccountName").innerHTML = data[0].CustomerName;
                document.getElementById("lblOnAccountID").innerHTML = data[0].Agid;



                if (ddlWOType == 'Lashing' || ddlWOType == 'Choking' || ddlWOType == 'Lashing & Choking') {
                     $('#tblWorkOrderDets').dataTable({
                        "destroy": true,
                         "bLengthChange": true,
                         "bPaginate": true,
                        //"bFilter": false,
                        "paging": false,
                         "order": true,
                        "aaData": data,
                        "columns": [
                            {

                                "data": "SRNO",
                                "render": function (data, type, row, meta) {

                                    data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.SRNO + '">';
                                    return data;

                                }
                            },
                            { "data": "StuffLocation" },
                            { "data": "Containerno" },
                            { "data": "Warehouse" },

                            {

                                "data": "VehicleNo",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"TxtVehicleNo' + row.SRNO + '\" class=\"form-control\" id=\"TxtVehicleNo' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            { "data": "DestuffQty" },
                            {
                                "data": "Unit",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="ddlPkgType' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < PKGL.length; j++) {

                                        data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            { "data": "Weight" },
                            {

                                "data": "OpeartionalPksg",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpPkgs' + row.SRNO + '\" class=\"form-control\" id=\"textOpPkgs' + row.SRNO + '\" onchange=\" ChkAmtValidate(this)\"  style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "OperationWt",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpweight' + row.SRNO + '\" class=\"form-control\" id=\"textOpweight' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Examine",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textExamine' + row.SRNO + '\" class=\"form-control\" id=\"textExamine' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Vendor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Vendor' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < VendorL.length; j++) {

                                        data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {
                                "data": "Equipment",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Equipment' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < EquipmentL.length; j++) {

                                        data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {

                                "data": "Remarks",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textRemarks' + row.SRNO + '\" class=\"form-control\" id=\"textRemarks' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Hours",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textHours' + row.SRNO + '\" class=\"form-control\" id=\"textHours' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },

                            {

                                "data": "CGM",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textCGM' + row.SRNO + '\" class=\"form-control\" id=\"textCGM' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Surveyor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="TxtSurveyor' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < SurveyorL.length; j++) {

                                        data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            { "data": "SRNO" },
                            { "data": "CartingAllowID" },
                            { "data": "SBNo" },
                            { "data": "SBEntryID" },
                           
                            {

                                "data": "MaterialQty",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\" onclick=\"OpenMaterialModal(' + row.SRNO + ')\"    value="' + data + '" >';
                                    return data;

                                }
                            },
                            {

                                "data": "MaterialDescriptions",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "SRNO",
                                "render": function (data, type, row, meta) {


                                    data = '<a   href="#" class="btn btn-sm btn-primary" title="View" onclick="CopySameContainerNo(' + data.SRNO + ')">Copy</a>';


                                    return data;
                                }


                            },

                        ]
                    });

                } else {


                    $('#tblWorkOrderDets').dataTable({
                        "destroy": true,
                        "bLengthChange": true,
                        "bPaginate": true,
                        //"bFilter": false,
                        "paging": false,
                        "order": true,
                        "aaData": data,
                        "columns": [
                            {

                                "data": "SRNO",
                                "render": function (data, type, row, meta) {

                                    data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.SRNO + '">';
                                    return data;

                                }
                            },
                            { "data": "StuffLocation" },
                            { "data": "Containerno" },
                            { "data": "Warehouse" },

                            {

                                "data": "VehicleNo",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"TxtVehicleNo' + row.SRNO + '\" class=\"form-control\" id=\"TxtVehicleNo' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            { "data": "DestuffQty" },
                            {
                                "data": "Unit",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="ddlPkgType' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < PKGL.length; j++) {

                                        data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            { "data": "Weight" },
                            {

                                "data": "OpeartionalPksg",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpPkgs' + row.SRNO + '\" class=\"form-control\" id=\"textOpPkgs' + row.SRNO + '\" onchange=\" ChkAmtValidate(this)\"  style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "OperationWt",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpweight' + row.SRNO + '\" class=\"form-control\" id=\"textOpweight' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Examine",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textExamine' + row.SRNO + '\" class=\"form-control\" id=\"textExamine' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Vendor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Vendor' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < VendorL.length; j++) {

                                        data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {
                                "data": "Equipment",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Equipment' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < EquipmentL.length; j++) {

                                        data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {

                                "data": "Remarks",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textRemarks' + row.SRNO + '\" class=\"form-control\" id=\"textRemarks' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Hours",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textHours' + row.SRNO + '\" class=\"form-control\" id=\"textHours' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },

                            {

                                "data": "CGM",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textCGM' + row.SRNO + '\" class=\"form-control\" id=\"textCGM' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Surveyor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="TxtSurveyor' + row.SRNO + '"  style="width:100px">'
                                    for (j = 0; j < SurveyorL.length; j++) {

                                        data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            { "data": "SRNO" },
                            { "data": "CartingAllowID" },
                            { "data": "SBNo" },
                            { "data": "SBEntryID" },
                            
                            {

                                "data": "MaterialQty",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "MaterialDescriptions",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            { "data": "SRNO" },

                        ]
                    });

                }

            },
            error: function (response) {
                alert(response.responseText);
            }
        })
    }




    function OnRequestID() {

        var Requestid = $("#TxtRequestID").val();
        var ddlWOType = document.getElementById('ddlWOType').value;
        var ddlCategory = document.getElementById('ddlCategory').value;
        if (ddlWOType == "") {
            alert('Please select work order type first!');
            document.getElementById('ddlWOType').focus();
            return false;
        }

        var data1 = { 'Requestid': Requestid, 'WOType': ddlWOType };
        var data = JSON.stringify(data1);



        $.ajax({
            url: "/WorkOrder/GetStuffingRequestDone",
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "0") {
                    OnRequestID1();
                } else {
                    alert(data);
                    return false;
                }
            },
            error: function (error) {
                let str = error.responseText;
                var a = str.indexOf("<title>") + 7;
                var b = str.indexOf("</title>");
                str = str.substring(a, b);
                alert("Something went wrong: " + str);
            }
        })
    }


    function OnRequestID1() {

        var Requestid = $("#TxtRequestID").val();
        var ddlWOType = document.getElementById('ddlWOType').value;
        var ddlCategory = document.getElementById('ddlCategory').value;
        if (ddlWOType == "") {
            alert('Please select work order type first!');
            document.getElementById('ddlWOType').focus();
            return false;
        }

        var data1 = { 'Requestid': Requestid };
        var data = JSON.stringify(data1);



        $.ajax({
            url: "/WorkOrder/GetRequestIDforworkorder_LashingAndChocking",
            //url: "/WorkOrder/GetRequestIDforworkorder",
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                 WODetailsArrayList = data;

                document.getElementById("lblCHAName").innerHTML = data[0].CHANAME;
                document.getElementById("lblCHAID").innerHTML = data[0].CHAID;
                document.getElementById("lblShipperName").innerHTML = data[0].Shippername;
                document.getElementById("lblOnAccountName").innerHTML = data[0].CustomerName;
                document.getElementById("lblOnAccountID").innerHTML = data[0].Agid;
                debugger;
                if (ddlWOType == 'Lashing' || ddlWOType == 'Choking' || ddlWOType == 'Lashing & Choking') {
                    $('#tblWorkOrderDets').dataTable({
                        "destroy": true,
                        "bLengthChange": false,
                        "aaData": data,
                        "bInfo": false,
                        "bPaginate": false,
                        "bFilter": true,
                        "paging": false,
                        "order": [],
                    "columns": [
                        {

                            "data": "SRNO",
                            "render": function (data, type, row, meta) {

                                data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.SRNO + '">';
                                return data;

                            }
                        },
                        { "data": "StuffLocation" },
                        { "data": "Containerno" },
                        { "data": "Warehouse" },

                        {

                            "data": "VehicleNo",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"TxtVehicleNo' + row.SRNO + '\" class=\"form-control\" id=\"TxtVehicleNo' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        { "data": "DestuffQty" },
                        {
                            "data": "Unit",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="ddlPkgType' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < PKGL.length; j++) {

                                    data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "Weight" },
                        {

                            "data": "OpeartionalPksg",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpPkgs' + row.SRNO + '\" class=\"form-control\" id=\"textOpPkgs' + row.SRNO + '\"    onchange=\" ChkAmtValidate(this)\"   style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "OperationWt",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpweight' + row.SRNO + '\" class=\"form-control\" id=\"textOpweight' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Examine",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textExamine' + row.SRNO + '\" class=\"form-control\" id=\"textExamine' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Vendor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Vendor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < VendorL.length; j++) {

                                    data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {
                            "data": "Equipment",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Equipment' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < EquipmentL.length; j++) {

                                    data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {

                            "data": "Remarks",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textRemarks' + row.SRNO + '\" class=\"form-control\" id=\"textRemarks' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Hours",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textHours' + row.SRNO + '\" class=\"form-control\" id=\"textHours' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },

                        {

                            "data": "CGM",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textCGM' + row.SRNO + '\" class=\"form-control\" id=\"textCGM' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Surveyor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="TxtSurveyor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < SurveyorL.length; j++) {

                                    data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "SRNO" },
                        { "data": "CartingAllowID" },
                        { "data": "SBNo" },
                        { "data": "SBEntryID" },
                        
                            {

                                "data": "MaterialQty",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\" onclick=\"OpenMaterialModal(' + row.SRNO + ')\"    value="' + data + '" >';
                                    return data;

                                }
                            },
                        {

                            "data": "MaterialDescriptions",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                            {
                                "data": "SRNO",
                                "render": function (data, type, row, meta) {


                                    data = '<a   href="#" class="btn btn-sm btn-primary" title="View" onclick="CopySameContainerNo(' + data.SRNO + ')">Copy</a>';


                                    return data;
                                }


                            },

                    ]
                });

                } else {
                     $('#tblWorkOrderDets').dataTable({
                    "destroy": true,
                         "bLengthChange": true,
                         "bPaginate": true,
                    //"bFilter": false,
                    "paging": false,
                         "order": true,
                    "aaData": data,
                    "columns": [
                        {

                            "data": "SRNO",
                            "render": function (data, type, row, meta) {

                                data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.SRNO + '">';
                                return data;

                            }
                        },
                        { "data": "StuffLocation" },
                        { "data": "Containerno" },
                        { "data": "Warehouse" },

                        {

                            "data": "VehicleNo",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"TxtVehicleNo' + row.SRNO + '\" class=\"form-control\" id=\"TxtVehicleNo' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        { "data": "DestuffQty" },
                        {
                            "data": "Unit",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="ddlPkgType' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < PKGL.length; j++) {

                                    data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "Weight" },
                        {

                            "data": "OpeartionalPksg",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpPkgs' + row.SRNO + '\" class=\"form-control\" id=\"textOpPkgs' + row.SRNO + '\"    onchange=\" ChkAmtValidate(this)\"   style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "OperationWt",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpweight' + row.SRNO + '\" class=\"form-control\" id=\"textOpweight' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Examine",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textExamine' + row.SRNO + '\" class=\"form-control\" id=\"textExamine' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Vendor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Vendor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < VendorL.length; j++) {

                                    data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {
                            "data": "Equipment",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Equipment' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < EquipmentL.length; j++) {

                                    data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {

                            "data": "Remarks",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textRemarks' + row.SRNO + '\" class=\"form-control\" id=\"textRemarks' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Hours",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textHours' + row.SRNO + '\" class=\"form-control\" id=\"textHours' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },

                        {

                            "data": "CGM",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textCGM' + row.SRNO + '\" class=\"form-control\" id=\"textCGM' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Surveyor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="TxtSurveyor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < SurveyorL.length; j++) {

                                    data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "SRNO" },
                        { "data": "CartingAllowID" },
                        { "data": "SBNo" },
                        { "data": "SBEntryID" },
                        
                        {

                            "data": "MaterialQty",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "MaterialDescriptions",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        { "data": "SRNO" },

                    ]
                });

                }



               



            },
            error: function (error) {
                let str = error.responseText;
                var a = str.indexOf("<title>") + 7;
                var b = str.indexOf("</title>");
                str = str.substring(a, b);
                alert("Something went wrong: " + str);
            }
        })
    }



    function OnAddInvoiceNo() {

        var Containerno = $("#txtInvoiceNo").val();
        var ddlWOType = document.getElementById('ddlWOType').value;
        var ddlCategory = document.getElementById('ddlCategory').value;
        if (ddlWOType == "") {
            alert('Please select work order type first!');
            document.getElementById('ddlWOType').focus();
            return false;
        }

        var data1 = { 'Containerno': Containerno };
        var data = JSON.stringify(data1);



        $.ajax({
            url: "/WorkOrder/GetContaiinernoforworkorder_LashingAndChocking",
            //url: "/WorkOrder/GetContaiinernoforworkorder",
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                 WODetailsArrayList = data;

                document.getElementById("lblCHAName").innerHTML = data[0].CHANAME;
                document.getElementById("lblCHAID").innerHTML = data[0].CHAID;
                document.getElementById("lblShipperName").innerHTML = data[0].Shippername;
                document.getElementById("lblOnAccountName").innerHTML = data[0].CustomerName;
                document.getElementById("lblOnAccountID").innerHTML = data[0].Agid;

                if (ddlWOType == 'Lashing' || ddlWOType == 'Choking' || ddlWOType == 'Lashing & Choking') {


 $('#tblWorkOrderDets').dataTable({
                    "destroy": true,
     "bLengthChange": true,
     "bPaginate": true,
                    //"bFilter": false,
                    "paging": false,
     "order": true,
                    "aaData": data,
                    "columns": [
                        {

                            "data": "SRNO",
                            "render": function (data, type, row, meta) {

                                data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.SRNO + '">';
                                return data;

                            }
                        },
                        { "data": "StuffLocation" },
                        { "data": "Containerno" },
                        { "data": "Warehouse" },

                        {

                            "data": "VehicleNo",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"TxtVehicleNo' + row.SRNO + '\" class=\"form-control\" id=\"TxtVehicleNo' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        { "data": "DestuffQty" },
                        {
                            "data": "Unit",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="ddlPkgType' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < PKGL.length; j++) {

                                    data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "Weight" },
                        {

                            "data": "OpeartionalPksg",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpPkgs' + row.SRNO + '\" class=\"form-control\" id=\"textOpPkgs' + row.SRNO + '\"    onchange=\" ChkAmtValidate(this)\"   style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "OperationWt",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpweight' + row.SRNO + '\" class=\"form-control\" id=\"textOpweight' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Examine",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textExamine' + row.SRNO + '\" class=\"form-control\" id=\"textExamine' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Vendor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Vendor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < VendorL.length; j++) {

                                    data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {
                            "data": "Equipment",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Equipment' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < EquipmentL.length; j++) {

                                    data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {

                            "data": "Remarks",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textRemarks' + row.SRNO + '\" class=\"form-control\" id=\"textRemarks' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Hours",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textHours' + row.SRNO + '\" class=\"form-control\" id=\"textHours' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },

                        {

                            "data": "CGM",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textCGM' + row.SRNO + '\" class=\"form-control\" id=\"textCGM' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Surveyor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="TxtSurveyor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < SurveyorL.length; j++) {

                                    data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "SRNO" },
                        { "data": "CartingAllowID" },
                        { "data": "SBNo" },
                        { "data": "SBEntryID" },
                       
                                                {

                                "data": "MaterialQty",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\" onclick=\"OpenMaterialModal(' + row.SRNO + ')\"    value="' + data + '" >';
                                    return data;

                                }
                            },
                        {

                            "data": "MaterialDescriptions",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                         { "data": "SRNO" },

                    ]
                });

                } else {
                        $('#tblWorkOrderDets').dataTable({
                    "destroy": true,
                            "bLengthChange": true,
                            "bPaginate": true,
                    //"bFilter": false,
                    "paging": false,
                            "order": true,
                    "aaData": data,
                    "columns": [
                        {

                            "data": "SRNO",
                            "render": function (data, type, row, meta) {

                                data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.SRNO + '">';
                                return data;

                            }
                        },
                        { "data": "StuffLocation" },
                        { "data": "Containerno" },
                        { "data": "Warehouse" },

                        {

                            "data": "VehicleNo",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"TxtVehicleNo' + row.SRNO + '\" class=\"form-control\" id=\"TxtVehicleNo' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        { "data": "DestuffQty" },
                        {
                            "data": "Unit",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="ddlPkgType' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < PKGL.length; j++) {

                                    data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "Weight" },
                        {

                            "data": "OpeartionalPksg",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpPkgs' + row.SRNO + '\" class=\"form-control\" id=\"textOpPkgs' + row.SRNO + '\"    onchange=\" ChkAmtValidate(this)\"   style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "OperationWt",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textOpweight' + row.SRNO + '\" class=\"form-control\" id=\"textOpweight' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Examine",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textExamine' + row.SRNO + '\" class=\"form-control\" id=\"textExamine' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Vendor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Vendor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < VendorL.length; j++) {

                                    data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {
                            "data": "Equipment",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="Equipment' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < EquipmentL.length; j++) {

                                    data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        {

                            "data": "Remarks",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textRemarks' + row.SRNO + '\" class=\"form-control\" id=\"textRemarks' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "Hours",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textHours' + row.SRNO + '\" class=\"form-control\" id=\"textHours' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },

                        {

                            "data": "CGM",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"textCGM' + row.SRNO + '\" class=\"form-control\" id=\"textCGM' + row.SRNO + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {
                            "data": "Surveyor",
                            "render": function (data, type, row, meta) {

                                data = '<select  class="form-control" id="TxtSurveyor' + row.SRNO + '"  style="width:100px">'
                                for (j = 0; j < SurveyorL.length; j++) {

                                    data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                }

                                data += '</select>';
                                return data;

                            }

                        },
                        { "data": "SRNO" },
                        { "data": "CartingAllowID" },
                        { "data": "SBNo" },
                        { "data": "SBEntryID" },
                        
                        {

                            "data": "MaterialQty",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                        {

                            "data": "MaterialDescriptions",
                            "render": function (data, type, row, meta) {
                                data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                return data;

                            }
                        },
                            {
                                "data": "SRNO",
                                "render": function (data, type, row, meta) {


                                    data = '<a   href="#" class="btn btn-sm btn-primary" title="View" onclick="CopySameContainerNo(' + data.SRNO + ')">Copy</a>';


                                    return data;
                                }


                            },

                    ]
                });

                }



               



            },
            error: function (response) {
                alert(response.responseText);
            }
        })
    }
</script>


<script>


        $('#ddlsummarysearchcerteria').change(function (e) {
            var SearchNO = $("#ddlsummarysearchcerteria").val();
            // alert(SearchNO);
            if (SearchNO == "SB No") {

                $("#divInvoiceNo").hide();
                $("#divSBNo").show();
                $("#divSBAdd").show();
                $("#divInvoiceAdd").hide();
                $("#divcartingID").hide();
                $("#divCartingAdd").hide();
                $("#divrequestid").hide();
                $("#divRequestAdd").hide();

            }
            if (SearchNO == "Container No") {
                $("#divInvoiceNo").show();
                $("#divSBNo").hide();
                $("#divSBAdd").hide();
                $("#divInvoiceAdd").show();
                $("#divcartingID").hide();
                $("#divCartingAdd").hide();
                $("#divrequestid").hide();
                $("#divRequestAdd").hide();
            }

            if (SearchNO == "Carting Allow ID") {
                $("#divInvoiceNo").hide();
                $("#divSBNo").hide();
                $("#divSBAdd").hide();
                $("#divInvoiceAdd").hide();
                $("#divcartingID").show();
                $("#divCartingAdd").show();
                $("#divrequestid").hide();
                $("#divRequestAdd").hide();
            }
            if (SearchNO == "Stuffing Request ID") {
                $("#divInvoiceNo").hide();
                $("#divSBNo").hide();
                $("#divSBAdd").hide();
                $("#divInvoiceAdd").hide();
                $("#divcartingID").hide();
                $("#divCartingAdd").hide();
                $("#divrequestid").show();
                $("#divRequestAdd").show();
            }

        });

    ddlWOType




    $('#ddlWOType').change(function (e) {
        var SearchNO = $("#ddlWOType").val();
            // alert(SearchNO);
        $('#ddlsummarysearchcerteria').attr('disabled', false);

        if (SearchNO == "Carting") {
                $("#divInvoiceNo").hide();
                $("#divSBNo").hide();
                $("#divSBAdd").hide();
                $("#divInvoiceAdd").hide();
                $("#divcartingID").show();
                $("#divCartingAdd").show();
                $("#divrequestid").hide();
                $("#divRequestAdd").hide();
            $("#ddlsummarysearchcerteria").val('Carting Allow ID');
            $('#ddlsummarysearchcerteria').attr('disabled', true);
            }
        if (SearchNO == "Stuffing") {
                $("#divInvoiceNo").hide();
                $("#divSBNo").hide();
                $("#divSBAdd").hide();
                $("#divInvoiceAdd").hide();
                $("#divcartingID").hide();
                $("#divCartingAdd").hide();
                $("#divrequestid").show();
            $("#divRequestAdd").show();
            $("#ddlsummarysearchcerteria").val('Stuffing Request ID');
            $('#ddlsummarysearchcerteria').attr('disabled', true);
            }

        });



        $(document).ready(function () {
            $('#tblWorkOrderDets').dataTable({
                "bLengthChange": true,
                "bInfo": true,
                "bPaginate": true,
                // "bFilter": false,
                "paging": false,
                "order": [],
                "aoColumnDefs": [
                    {
                        'bSortable': false,
                        'aTargets': [0]
                    }

                ]
            })
        });
        function OnStuffLocationChange() {
            var ddlStuffLocation = $("#ddlStuffLocation").val();

            if (ddlStuffLocation != "") {
                if (ddlStuffLocation == "Container") {
                    $("#divWarehouse").hide();
                    $("#divContainerNo").show();
                    if ($("#ddlWOType").val() == "Stuffing") {
                        $("#divVehicle").hide();
                        try {
                            GetCartTotalPkgs();
                        }
                        catch (ex) {}
                    }
                    else { $("#divVehicle").show();}
                }
                else if (ddlStuffLocation == "Warehouse") {
                    $("#divWarehouse").show();
                    $("#divContainerNo").hide();
                    $("#divVehicle").show();
                }
            }
            else {
                $("#divContainerNo").hide();
                $("#divWarehouse").hide();
                $("#divVehicle").show();
            }
        }
    //    function OnAddSBNo() {
    //        Sub_CLear()
    //        var txtSBNo = document.getElementById('txtSBNo').value;
    //        var ddlWOType = document.getElementById('ddlWOType').value;


    //        if (txtSBNo == "") {
    //            alert('Please enter SB No first!');
    //            document.getElementById('txtSBNo').focus();
    //            return false;
    //        }
    //        if (ddlWOType == "") {
    //            alert('Please select work order type first!');
    //            document.getElementById('ddlWOType').focus();
    //            return false;
    //        }
    //        var data1 = { 'SBNO': txtSBNo, 'WorkType': ddlWOType };
    //        var data = JSON.stringify(data1);

    //        $.ajax({
    //            url: "/WorkOrder/ShowSBNODets",
    //            type: 'Post',
    //            data: data,
    //            async: false,
    //            contentType: 'application/json; charset=utf-8',
    //            success: function (response) {

    //                if (response == "") {
    //                    alert("Record(s) not found")
    //                    document.getElementById("lblCHAName").innerHTML = "";
    //                    document.getElementById("lblShipperName").innerHTML = "";
    //                    document.getElementById("lblOnAccountName").innerHTML = "";
    //                    document.getElementById("lblManiFestQty").innerHTML = "";
    //                    document.getElementById("lblCargoDescription").innerHTML = "";
    //                    document.getElementById("lblSBEntryID").innerHTML = "";
    //                    document.getElementById("lblCHAID").innerHTML = "";
    //                    document.getElementById("lblOnAccountID").innerHTML = "";
    //                    document.getElementById('txtSBNo').focus();
    //                    return false;
    //                }
    //                else {
    //                    document.getElementById("lblCHAName").innerHTML = response[0].CHAName;
    //                    document.getElementById("lblShipperName").innerHTML = response[0].ShipperName;
    //                    document.getElementById("lblOnAccountName").innerHTML = response[0].OnAccount;
    //                    document.getElementById("lblManiFestQty").innerHTML = response[0].ManifestQty;
    //                    document.getElementById("lblCargoDescription").innerHTML = response[0].CargoDescription;
    //                    document.getElementById("lblSBEntryID").innerHTML = response[0].SBEntryID;
    //                    document.getElementById("lblCHAID").innerHTML = response[0].CHAID;
    //                    document.getElementById("lblOnAccountID").innerHTML = response[0].OnAccountID;
    //                    $("#ddlPkgType").val(response[0].Unit);
    //                    GetVehicleNos(response[0].SBEntryID);
    //                    GetCartTotalPkgs();
    //                }
    //            },
    //            failure: function (response) {
    //                alert(response);
    //                alert(response.responseText);
    //            },
    //            error: function (response) {
    //                alert(response.responseText);
    //            }
    //        })
    //}



        function GetVehicleNos(SBEntryID) {
            var data1 = { 'SBEntryID': SBEntryID, 'SBNO': $("#txtSBNo").val() };
            var data = JSON.stringify(data1);
            $.ajax({
                url: "/WorkOrder/VehicleNos",
                type: 'Post',
                data: data,
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    var select = $("#ddlVehicleNo");
                    select.empty();
                    select.append($('<option/>', {
                        value: "",
                        text: "--Select--"
                    }));

                    $.each(response, function (data, value) {

                        select.append($("<option></option>").val(value.CartingId).html(value.VehicleNo));
                    })
                },
                failure: function (response) {
                    alert(response);
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            })
        }
        function ShowWorkOrderList() {
            var data = [];
            var sumpkgs = 0;
            var sumwt = 0;
            var StuffPkgs = $("#txtStuffDStuffPkgs").val();
            var StuffWt = $("#txtWeight").val();
            var Totpkgs = $("#txtTotalPkgs").val();
            var TotWt = $("#txtTotalWeight").val();
            var table = document.getElementById("tblPaymentDet");

            if ($("#txtContainerNo").val() != "") {
                if (StuffWt == "") {
                    StuffWt = 0;
                }

                if (parseInt(StuffWt) > 27000) {
                    alert("Total Stuff Wt cannot be greater then 27 Ton.");
                    $("#txtWeight").val("");
                    document.getElementById('txtWeight').focus();
                    return false;
                }
            }

            if (table != null) {
                if (table.rows.length > 1) {
                    for (var i = 1; i < table.rows.length; i++) {
                        row = table.rows[i];
                        var VehNo = "";
                        var Pkgs = 0;
                        var Weight = 0;
                        VehNo = row.cells[5].innerHTML;
                        Pkgs = row.cells[6].innerHTML;
                        Weight = row.cells[8].innerHTML;
                        if (VehNo == $("#ddlVehicleNo option:selected").text()) {
                            sumpkgs = parseFloat(sumpkgs) + parseFloat(Pkgs);
                            sumwt = parseFloat(sumwt) + parseFloat(Weight);
                        }
                    }
                }
            }
            sumpkgs = parseFloat(sumpkgs) + parseFloat(StuffPkgs);
            sumwt = parseFloat(sumwt) + parseFloat(StuffWt);
            if (parseFloat(sumpkgs) > parseFloat(Totpkgs)) {
                alert('Pkgs should not be greater than Total Pkgs')
                $("#txtStuffDStuffPkgs").val("");
                document.getElementById('txtStuffDStuffPkgs').focus();
                return false;
            }
            if (parseFloat(sumwt) > parseFloat(TotWt)) {
                alert('Weight should not be greater than Total Weight')
                $("#txtWeight").val("");
                document.getElementById('txtWeight').focus();
                return false;
            }
            var TotalPkgs = document.getElementById("lblTotStuffPkgs").innerHTML;
            var ManifestPkgs = document.getElementById("lblManiFestQty").innerHTML;

            if ((parseFloat(TotalPkgs) + parseFloat($("#txtStuffDStuffPkgs").val())) > parseFloat(ManifestPkgs)) {
                alert("Stuffing Qty should not be greater than Manifest Qty")
                document.getElementById('txtStuffDStuffPkgs').focus();
                return false;
            }



            if ($("#txtContainerNo").val() != "") {
                if (ValidateVendor($("#txtContainerNo").val(), $("#ddlVendor").val(), parseInt(StuffWt), parseInt(StuffPkgs)) == false) {
                    return;
                }
            }

            var pvendor = $("#ddlVendor").val();
            var pvendorId = $("#hdnVendorId").val();
            var pvendorName = $("#ddlVendor option:selected").text();

            if (pvendorId != "" && pvendorId > 0) {
                if (pvendor != pvendorId) {
                    alert('Please select valid vendor id');
                    return false;
                }
            }




            TotalPkgs = parseFloat(TotalPkgs) + parseFloat($("#txtStuffDStuffPkgs").val());
            document.getElementById("lblTotStuffPkgs").innerHTML = TotalPkgs;


            //var res = validate();
            //if (res == false) {
            //    return false;
            //}
            var ddlStuffLocation = $("#ddlStuffLocation option:selected").text();
            var ddlCategory = $("#ddlCategory").val();

            if (ddlCategory !="General") {
                ddlStuffLocation = ddlCategory;
            }

            var ddlWarehouseID = $("#ddlWarehouse option:selected").val();
            if (ddlWarehouseID == "") {
                var ddlWarehouse = "";
            }
            else {
                var ddlWarehouse = $("#ddlWarehouse option:selected").text();
            }
            var txtContainerNo = $("#txtContainerNo").val();
            var ddlVehicleNo = $("#ddlVehicleNo option:selected").text();
            if (ddlCategory != "General") {
                ddlVehicleNo = $("#txtInvoiceNo").val();
            }
            var CartingAllowId = $("#ddlVehicleNo").val();
            var txtStuffDStuffPkgs = $("#txtStuffDStuffPkgs").val();
            var ddlVendorID = $("#ddlVendor option:selected").val();
            var ddlVendor = $("#ddlVendor option:selected").text();
            var ddlEQTypeID = $("#ddlEQType option:selected").val();
            var ddlEQType = $("#ddlEQType option:selected").text();
            var txtRemarks = $("#txtRemarks").val();
            var ddlPkgTypeID = $("#ddlPkgType option:selected").val();
            var ddlPkgType = $("#ddlPkgType option:selected").text();
            var txtWeight = $("#txtWeight").val();
            var TxtHours = $("#TxtHours").val();
            var txtCMB = $("#TxtCMB").val();


            var StuffLocation = ddlStuffLocation + "<input Name=StuffLocation type=hidden id=StuffLocation   value='" + ddlStuffLocation + "'>";
            var WareHouse = ddlWarehouse + "<input Name=ddlWarehouse type=hidden id=ddlWarehouse   value=" + ddlWarehouse + ">";
            var WareHouseID = ddlWarehouseID + "<input Name=WareHouseID type=hidden id=WareHouseID   value=" + ddlWarehouseID + ">";
            var ContainerNo = txtContainerNo + "<input Name=ContainerNo type=hidden id=ContainerNo   value='" + txtContainerNo + "'>";
            var VehicleNo = ddlVehicleNo + "<input Name=VehicleNo type=hidden id=VehicleNo   value='" + ddlVehicleNo + "'>";
            var StuffPkgs = txtStuffDStuffPkgs + "<input Name=StuffPkgs type=hidden id=StuffPkgs   value='" + txtStuffDStuffPkgs + "'>";
            var Vendor = ddlVendor + "<input Name=Vendor type=hidden id=Vendor   value='" + ddlVendor + "'>";
            var VendorID = ddlVendorID + "<input Name=VendorID type=hidden id=VendorID   value='" + ddlVendorID + "'>";
            var Equipment = ddlEQType + "<input Name=ddlEQType type=hidden id=ddlEQType   value='" + ddlEQType + "'>";
            var EquipmentID = ddlEQTypeID + "<input Name=EquipmentID type=hidden id=EquipmentID   value='" + ddlEQTypeID + "'>";
            var Remarks = txtRemarks + "<input Name=Description type=hidden id=Description   value='" + txtRemarks + "'>";
            var Package = ddlPkgType + "<input Name=ddlEQType type=hidden id=ddlEQType   value='" + ddlPkgType + "'>";
            var PackageID = ddlPkgTypeID + "<input Name=PkgTypeID type=hidden id=PkgTypeID   value='" + ddlPkgTypeID + "'>";
            var Weight = txtWeight + "<input Name=Weight type=hidden id=Weight value='" + txtWeight + "'>";
            var CartingAllowId = CartingAllowId + "<input Name=CartingAllowId type=hidden id=CartingAllowId   value='" + CartingAllowId + "'>";
            var Hours = TxtHours + "<input Name=Hours type=hidden id=Hours   value='" + TxtHours + "'>";
            var CMB = txtCMB + "<input Name=CMB type=hidden id=CMB   value='" + txtCMB + "'>";

            var t = $('#tblWorkOrderDets').DataTable();
            t.row.add([
                "<button type=\"button\" class=\"btn btn-icon btn-primary btn-danger removebutton \" name=\"removebutton\" style=\"height:35px;\" onclick=\"CancelItem()\"><i class=\"fe fe-trash\" style=\"font-size: 16px;\"></i></button>",
                StuffLocation,
                ContainerNo,
                WareHouse,
                VehicleNo,
                StuffPkgs,
                Package,
                Weight,
                Vendor,
                Equipment,
                Remarks,
                Hours,
                CMB,
                EquipmentID,
                VendorID,
                WareHouseID,
                PackageID,
                CartingAllowId

            ]).draw(false);

            document.getElementById('ddlStuffLocation').value = "";
            document.getElementById('txtContainerNo').value = "";
            document.getElementById('ddlWarehouse').value = "";
            document.getElementById('ddlVehicleNo').value = "";
            document.getElementById('txtStuffDStuffPkgs').value = "";
            document.getElementById('ddlPkgType').value = "";
            document.getElementById('txtWeight').value = "";
            if ($("#ddlCategory").val() == "General") {
                document.getElementById('txtTotalPkgs').value = "";
                document.getElementById('txtTotalWeight').value = "";
            }
            document.getElementById('ddlVendor').value = "";
            document.getElementById('ddlEQType').value = "";
            document.getElementById('txtRemarks').value = "";
            $("#divWarehouse").hide();
            $("#divContainerNo").hide();
        }
        function validate() {

            var ddlStuffLocation = document.getElementById('ddlStuffLocation').value;
            var txtContainerNo = document.getElementById('txtContainerNo').value;
            var ddlWarehouse = document.getElementById('ddlWarehouse').value;
            var ddlVehicleNo = document.getElementById('ddlVehicleNo').value;
            var txtStuffDStuffPkgs = document.getElementById('txtStuffDStuffPkgs').value;
            var ddlVendor = document.getElementById('ddlVendor').value;
            var ddlEQType = document.getElementById('ddlEQType').value;
            var ddlPkgType = document.getElementById('ddlPkgType').value;
            var txtWeight = document.getElementById('txtWeight').value;
            var ddlWOType = document.getElementById('ddlWOType').value;
            var ddlCategory = document.getElementById('ddlCategory').value;


            var blResult = Boolean;
            blResult = true;
            document.getElementById('ddlStuffLocation').style.borderColor = "Gainsboro";
            document.getElementById('txtContainerNo').style.borderColor = "Gainsboro";
            document.getElementById('ddlWarehouse').style.borderColor = "Gainsboro";
            //document.getElementById('ddlVehicleNo').style.borderColor = "Gainsboro";
            document.getElementById('txtStuffDStuffPkgs').style.borderColor = "Gainsboro";
            document.getElementById('ddlVendor').style.borderColor = "Gainsboro";
            document.getElementById('ddlEQType').style.borderColor = "Gainsboro";
            document.getElementById('ddlPkgType').style.borderColor = "Gainsboro";
            document.getElementById('txtWeight').style.borderColor = "Gainsboro";


            if (ddlStuffLocation == "" && ddlCategory =="General" ) {
                document.getElementById('ddlStuffLocation').style.borderColor = "red"
                blResult = blResult && false;
            }

            if (ddlStuffLocation != "") {
                if (ddlStuffLocation == "Container") {
                    if (txtContainerNo == "") {
                        document.getElementById('txtContainerNo').style.borderColor = "red"
                        blResult = blResult && false;
                    }
                }
                else if (ddlStuffLocation == "Warehouse") {
                    if (ddlWarehouse == "") {
                        document.getElementById('ddlWarehouse').style.borderColor = "red"
                        blResult = blResult && false;
                    }
                }
            }
            //if (ddlVehicleNo == "" && ddlWOType != "Stuffing" && ddlCategory == "General") {
            //    document.getElementById('ddlVehicleNo').style.borderColor = "red"
            //    blResult = blResult && false;
            //}
            if (txtStuffDStuffPkgs == "") {
                document.getElementById('txtStuffDStuffPkgs').style.borderColor = "red"
                blResult = blResult && false;
            }
            if (ddlVendor == "") {
                document.getElementById('ddlVendor').style.borderColor = "red"
                blResult = blResult && false;
            }
            if (ddlEQType == "") {
                document.getElementById('ddlEQType').style.borderColor = "red"
                blResult = blResult && false;
            }
            if (txtWeight == "") {
                document.getElementById('txtWeight').style.borderColor = "red"
                blResult = blResult && false;
            }
            if (ddlPkgType == "") {
                document.getElementById('ddlPkgType').style.borderColor = "red"
                blResult = blResult && false;
            }
            if (blResult == false) { alert('Please fill the required fields!'); }
            return blResult;
        }
        function CancelItem() {
            var table = $('#tblWorkOrderDets').DataTable();
            $('#tblWorkOrderDets tbody').on('click', '.removebutton', function () {
                table
                    .row($(this).parents('tr'))
                    .remove()
                    .draw();

            });
        }
        function GetTotalPkgsVehicleWise() {
            var ddlCartingId = document.getElementById('ddlVehicleNo').value;
            var ddlVehicleNo = $("#ddlVehicleNo option:selected").text();
            var lblSBEntryID = document.getElementById("lblSBEntryID").innerHTML;

            if (ddlVehicleNo == "") {
                $("#txtTotalPkgs").val("");
                $("#txtTotalWeight").val("");
                document.getElementById("lblUnitWt").innerHTML = "";
                document.getElementById("lblPrevPkgs").innerHTML = "";
                return false
            }
            var data1 = { 'SBEntryID': lblSBEntryID, 'SBNO': $("#txtSBNo").val(), 'VehicleNo': ddlVehicleNo, 'CartingId': ddlCartingId };
            var data = JSON.stringify(data1);

            $.ajax({
                url: "/WorkOrder/TotalPkgsVehicleWise",
                type: 'Post',
                data: data,
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#txtTotalPkgs").val(response[0].TotPkgs);
                    $("#txtTotalWeight").val(response[0].TotWeight);
                    document.getElementById("lblUnitWt").innerHTML = response[0].UnitWt;
                    document.getElementById("lblPrevPkgs").innerHTML = response[0].PrevPkgs;

                },
                failure: function (response) {
                    alert(response);
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            })
        }

        function GetCartTotalPkgs() {
            var txtSBNo = document.getElementById('txtSBNo').value;
            var ddlWOType = document.getElementById("ddlWOType").value;


            var data1 = { 'SBNO': txtSBNo, 'WorkType': ddlWOType };
            var data = JSON.stringify(data1);

            $.ajax({
                url: "/WorkOrder/ShowCartWeightDets",
                type: 'Post',
                data: data,
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {

                    $("#txtTotalPkgs").val(response.TotPkgs);
                    $("#txtTotalWeight").val(response.TotWeight);
                    document.getElementById("lblUnitWt").innerHTML = response.UnitWt;

                },
                failure: function (response) {
                    alert(response);
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            })
        }

        function GetCartTotalPkgsInvoice() {
            var txtInvoiceNo = document.getElementById('txtInvoiceNo').value;
            var ddlWOType = document.getElementById("ddlWOType").value;


            var data1 = { 'InvoiceNo': txtInvoiceNo, 'WorkType': ddlWOType };
            var data = JSON.stringify(data1);

            $.ajax({
                url: "/WorkOrder/ShowCartWeightDetsByInvoice",
                type: 'Post',
                data: data,
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {

                    $("#txtTotalPkgs").val(response.TotPkgs);
                    $("#txtTotalWeight").val(response.TotWeight);
                    document.getElementById("lblUnitWt").innerHTML = response.UnitWt;

                },
                failure: function (response) {
                    alert(response);
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            })
          }









        function Save() {

            var res1 = validateSave();
            var lblSBEntryID = document.getElementById('lblSBEntryID').innerHTML;
            var lblCHAID = document.getElementById('lblCHAID').innerHTML;
            var lblOnAccountID = document.getElementById('lblOnAccountID').innerHTML;
            var txtSBNo = document.getElementById('txtSBNo').value;
            var ddlWOType = document.getElementById('ddlWOType').value;
            var ddlCategory = document.getElementById('ddlCategory').value;

            //if (ddlCategory == "General") {
            //    if (lblSBEntryID == "") {
            //        alert("Please validate SB No first")
            //    }
            //}

            if (res1 == false) {
                $("#tracker-loader").fadeOut("slow");
                return false;
            }
            var itemcount = checkItemcount();
            if (itemcount) {
                $("#btnsave").attr('disabled', 'disabled');
                var checkboxarray = [];
                $('input[type=checkbox]').each(function () {
                    if (this.checked) {

                        checkboxarray.push($(this).val());
                    }
                });

                var tablearray = [];
                var table = document.getElementById("tblWorkOrderDets");
                var row;
                for (var i = 1; i < table.rows.length; i++) {

                    row = table.rows[i];

                    for (var k = 0; k < checkboxarray.length; k++) {


                        var InvoiceNo = row.cells[17].innerText;

                        if (InvoiceNo == checkboxarray[k]) {






                            row = table.rows[i];


                                    SBEntryID = row.cells[20].innerText;
                                    SRNO = row.cells[17].innerText;

                                    StuffLocation = row.cells[1].innerText;
                                    ContainerNo = row.cells[2].innerText;
                                    WareHouseID = row.cells[3].innerText;
                            VehicleNo = $("#TxtVehicleNo" + SRNO + "").val();
                                    StuffPkgs = row.cells[5].innerText;
                            PkgType = $("#ddlPkgType" + SRNO + " option:selected").val();
                                    Weight = row.cells[7].innerText;
                            VendorID = $("#Vendor" + SRNO + " option:selected").val();
                            EquipmentID = $("#Equipment" + SRNO + " option:selected").val();
                            Description = $("#textRemarks" + SRNO + "").val();
                            Hours = $("#textHours" + SRNO + "").val();
                            CMB = $("#textCGM" + SRNO + "").val();
                            OpPkgs = $("#textOpPkgs" + SRNO + "").val();
                            OpWt = $("#textOpweight" + SRNO + "").val();
                            Examine = $("#textExamine" + SRNO + "").val();
                            Surveyor = $("#TxtSurveyor" + SRNO + "").val();

                                    CartingAllowId = row.cells[18].innerText;
                                    SBNo = row.cells[19].innerText;
                            MaterialQty = $("#txtMaterialQty" + SRNO + "").val();
                            MaterialDescriptions = $("#txtMaterialDescriptions" + SRNO + "").val();
                            

                            for (j = 0; j < WODetailsArrayList.length; j++) {
                                if (WODetailsArrayList[j].SRNO == SRNO) {

                                    MaterialMappingAutoID = WODetailsArrayList[j].MaterialMappingID;
                                    var MatAllowQty = parseFloat(WODetailsArrayList[j].MaterialQty);
                                    var SavingMatQty = parseFloat(MaterialQty);
                                    if (SavingMatQty > MatAllowQty) {
                                        alert('not allowed to set more than stock quantity fro :- ' + MaterialDescriptions)
                                        $("#btnsave").removeAttr('disabled');
                                        return false;

                                    }
                                }
                            }



                            tablearray.push({
                                'StuffLocation': StuffLocation, 'ContainerNo': ContainerNo, 'WareHouseID': WareHouseID,
                                'VehicleNo': VehicleNo, 'StuffPkgs': StuffPkgs, 'PkgType': PkgType,
                                'Weight': Weight, 'VendorID': VendorID, 'EquipmentID': EquipmentID, 'Description': Description, 'Hours': Hours, 'CMB': CMB, 'SBEntryID': SBEntryID,
                                'CartingAllowId': CartingAllowId, 'Surveyor': Surveyor,
                                'SBNo': SBNo, 'OpPkgs': OpPkgs, 'OpWt': OpWt, 'Examine': Examine, 'MaterialQty': MaterialQty, 'MaterialDescriptions': MaterialDescriptions,'MaterialMappingAutoID':MaterialMappingAutoID
                            })


                        }
                    }
                }
            }




            var data1 = { 'WOdata': tablearray, 'WODate': $("#txtWODate").val(), 'WOType': ddlWOType, 'SBNo': txtSBNo, 'SBEntryID': lblSBEntryID, 'CHAID': lblCHAID, 'OnAccountID': lblOnAccountID };

                var data = JSON.stringify(data1);

                $.ajax({
                    //url: "/WorkOrder/WorkOrderSave",
                    url: "/WorkOrder/WorkOrderSaveLashingAndChocking",
                    data: data,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {

                        if (response == "1") {
                            alert("Record saved successfully");

                            Clear();
                        }
                        else {
                            alert("Record not saved successfully. Try Again!");
                            $("#btnsave").removeAttr('disabled');
                        }
                    },
                    error: function (errormessage) {
                        alert("error");
                        alert(errormessage.responseText);
                    }
                })


        }
        function checkItemcount() {

            var table = $('#tblWorkOrderDets').DataTable();

            if (table.rows().count() == 0) {

                return false;
            }
            return true;
        }
        function validateSave() {
            var txtWODate = document.getElementById('txtWODate').value;
            var ddlWOType = document.getElementById('ddlWOType').value;
            var txtSBNo = document.getElementById('txtSBNo').value;
            var txtInvoiceNo = document.getElementById('txtInvoiceNo').value;
            var ddlCategory = document.getElementById('ddlCategory').value;

            var blResult = Boolean;
            blResult = true;
            document.getElementById('txtWODate').style.borderColor = "Gainsboro";
            document.getElementById('ddlWOType').style.borderColor = "Gainsboro";
            document.getElementById('txtSBNo').style.borderColor = "Gainsboro";

            if (txtWODate == "") {
                document.getElementById('txtWODate').style.borderColor = "red"
                blResult = blResult && false;
            }
            if (ddlWOType == "") {
                document.getElementById('ddlWOType').style.borderColor = "red"
                blResult = blResult && false;
            }
            //if (ddlCategory == "General") {
            //    if (txtSBNo == "") {
            //        document.getElementById('txtSBNo').style.borderColor = "red"
            //        blResult = blResult && false;
            //    }
            //}
            //else {
            //    if (txtInvoiceNo == "") {
            //        document.getElementById('txtInvoiceNo').style.borderColor = "red"
            //        blResult = blResult && false;
            //    }
            //}


            if (blResult == false) { alert('Please fill the required fields!'); }
            return blResult;
        }
        function Sub_CLear() {
            document.getElementById("lblCHAName").innerHTML = "";
            document.getElementById("lblShipperName").innerHTML = "";
            document.getElementById("lblOnAccountName").innerHTML = "";
            document.getElementById("lblManiFestQty").innerHTML = "";
            document.getElementById("lblCargoDescription").innerHTML = "";
            document.getElementById("lblSBEntryID").innerHTML = "";
            document.getElementById("lblCHAID").innerHTML = "";
            document.getElementById("lblOnAccountID").innerHTML = "";
            document.getElementById("lblTotStuffPkgs").innerHTML = "";
            document.getElementById("lblUnitWt").innerHTML = "";
            document.getElementById('lblContPrevPkgs').innerHTML = "";
            document.getElementById('lblPrevPkgs').innerHTML = "";
            $("#ddlStuffLocation").val("")
            $("#txtContainerNo").val("")
            $("#ddlWarehouse").val("")
            $("#ddlVehicleNo").val("")
            $("#txtTotalPkgs").val("")
            $("#txtTotalWeight").val("")
            $("#txtStuffDStuffPkgs").val("")
            $("#ddlVendor").val("")
            $("#ddlEQType").val("")
            $("#txtRemarks").val("")

            var table = $('#tblWorkOrderDets').DataTable();
            table
                .clear()
                .draw();
        }
        function Clear() {
            $("#txtWorkOrder").val("")
            $("#ddlWOType").val("")
            $("#txtSBNo").val("")
            $("#btnsave").removeAttr('disabled');
            document.getElementById("lblCHAName").innerHTML = "";
            document.getElementById("lblShipperName").innerHTML = "";
            document.getElementById("lblOnAccountName").innerHTML = "";
            document.getElementById("lblManiFestQty").innerHTML = "";
            document.getElementById("lblCargoDescription").innerHTML = "";
            document.getElementById("lblSBEntryID").innerHTML = "";
            document.getElementById("lblCHAID").innerHTML = "";
            document.getElementById("lblOnAccountID").innerHTML = "";
            document.getElementById("lblTotStuffPkgs").innerHTML = "";
            document.getElementById("lblUnitWt").innerHTML = "";
            document.getElementById('hdnVendorId').value = "";
            $("#ddlStuffLocation").val("");
            $("#txtContainerNo").val("");
            $("#ddlWarehouse").val("");
            $("#ddlVehicleNo").val("");
            $("#txtTotalPkgs").val("");
            $("#txtTotalWeight").val("");
            $("#txtStuffDStuffPkgs").val("");
            $("#ddlVendor").val("");
            $("#ddlEQType").val("");
            $("#txtRemarks").val("");
            $("#TxtHours").val("");
            $("#TxtCMB").val("");
            $("#lblPrevPkgs").val("");

            var table = $('#tblWorkOrderDets').DataTable();
            table
                .clear()
                .draw();
        }
        function OpenWOSummary() {
            $("#divOpenWorkOrderSummary").show();
            $("#divWorkOrder").hide();

            $.ajax({
                url: "/WorkOrder/ListOpenWorkOrder",
                //data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                // dataType: "json",
                success: function (data) {
                    $('#tblWorkOrderOpenList').dataTable({
                        "destroy": true,
                        "bLengthChange": false,
                        "aaData": data,
                        "paging": true,
                        "aaSorting": [[0, 'asc']],
                        "order": [],
                        "aoColumnDefs": [
                            {
                                'bSortable': true,
                                'aTargets': [0],
                            },

                        ],
                        "dom": 'Bfrtip',
                        "buttons": [{
                            "extend": 'excel',
                            "title": 'List of Open Work Orders',
                            "filename": 'OpenWorkOrders'
                        }
                        ],
                        "columns": [
                            {
                                "data": "data",
                                "render": function (data, type, row, meta) {
                                    data = "<a href=\"#\" class=\"btn btn-sm btn-info\" title=\"Close\" onclick=\"CloseWO('" + row.WONo + "','" + row.WOType + "')\">Close</a>";
                                    return data;
                                }
                            },
                            {
                                "data": "data",
                                "render": function (data, type, row, meta) {
                                    data = "<a href=\"#\" class=\"btn btn-sm btn-success\" title=\"Print\" onclick=\"PrintWoExport('" + row.WONo + "')\">Print</a>";
                                    return data;
                                }
                            },
                            {
                                "data": "data",
                                "render": function (data, type, row, meta) {
                                    data = "<a href=\"#\" class=\"btn btn-sm btn-info\" title=\"Print\" onclick=\"PrintsurveyorExport('" + row.WONo + "')\">Vendor surveyor</a>";
                                    return data;
                                }
                            },
                            //{
                            //    "data": "data",
                            //    "render": function (data, type, row, meta) {
                            //        data = "<a href=\"#\" class=\"btn btn-sm btn-primary\" title=\"Edit\" onclick=\"EditWO('" + row.WONo + '~' + row.SequenceNo + "')\">Edit</a>";
                            //        return data;
                            //    }
                            //},
                            {
                                "data": "data",
                                "render": function (data, type, row, meta) {
                                    data = "<a href=\"#\" class=\"btn btn-sm btn-danger\" title=\"Cancel\" onclick=\"CancelWO('" + row.WONo + "')\">Cancel</a>";
                                    return data;
                                }
                            },
                            { "data": "SrNo" },
                            { "data": "WONo" },
                            { "data": "SequenceNo" },
                            { "data": "WODate" },
                            { "data": "WOType" },
                            { "data": "SBNo" },
                            { "data": "OnAccount" },
                            { "data": "CHA" },
                            { "data": "VehicleNo" },
                            { "data": "ContainerNo" },
                            { "data": "Warehouse" },
                            { "data": "Pkgs" },
                            { "data": "Vendor"},
                        ]
                    })
                },

                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
        function BackToWorkOrder() {
            $("#divOpenWorkOrderSummary").hide();
            $("#divWorkOrder").show();
        }


          var EquipmentL = [];
          EquipmentLs = @Html.Raw(Json.Encode(@ViewBag.EquipmentList));
          EquipmentL = JSON.parse(EquipmentLs);


         var VendorL = [];
         Vendors = @Html.Raw(Json.Encode(@ViewBag.VendorLists));
         VendorL = JSON.parse(Vendors);




           var PKGL = [];
           PKGs = @Html.Raw(Json.Encode(@ViewBag.PKGLists));
            PKGL = JSON.parse(PKGs);





        function CloseWO(WONo,wotype) {
            WODetailsArrayList = [];
            debugger;
            $("#divWorkOrder").show();
            $("#divOpenWorkOrderSummary").hide();
            $("#divSaveBtn").hide();
            $("#Divclosebtn").show();
            $("#divsurveyor").show();

            $("#txtWorkOrder").val(WONo);
            $("#ddlWOType").val(wotype);


            if (wotype == "Carting"){
                $("#divInvoiceNo").hide();
                $("#divSBNo").hide();
                $("#divSBAdd").hide();
                $("#divInvoiceAdd").hide();
                $("#divcartingID").show();
                $("#divCartingAdd").show();
                $("#divrequestid").hide();
                $("#divRequestAdd").hide();
                $("#ddlsummarysearchcerteria").val('Carting Allow ID');
            }


            if (wotype == "Stuffing") {
                $("#divInvoiceNo").hide();
                $("#divSBNo").hide();
                $("#divSBAdd").hide();
                $("#divInvoiceAdd").hide();
                $("#divcartingID").show();
                $("#divCartingAdd").show();
                $("#divrequestid").hide();
                $("#divRequestAdd").hide();
                $("#ddlsummarysearchcerteria").val('Stuffing Request ID');
            }






            var data1 = { 'WONo': WONo };
            var data = JSON.stringify(data1);




            $.ajax({
                type: 'POST',
                url: '/WorkOrder/EditExportWorkDetailsGrid',
                data: data,
                // data: "",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                success: function (data) {
                    WODetailsArrayList=data

                    $('#tblWorkOrderDets').dataTable({
                        "destroy": true,
                        "bLengthChange": true,
                        "bPaginate": true,
                        "bFilter": false,
                        "paging": false,
                        "order": true,
                        "aaData": data,
                        "columns": [
                            {

                                "data": "Select",
                                "render": function (data, type, row, meta) {

                                    data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.EntryID + '">';
                                    return data;

                                }
                            },
                            { "data": "StuffLocation" },
                            { "data": "Containerno" },
                            { "data": "WarehouseID" },
                            {

                                "data": "VehicleNo",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textVehicleNo' + row.EntryID + '\" class=\"form-control\" id=\"textVehicleNo' + row.EntryID + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },

                            {

                                "data": "PKGSDestuff",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textPKGSDestuff' + row.EntryID + '\" class=\"form-control\" id=\"textPKGSDestuff' + row.EntryID + '\" style=\"width:60px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "PkgType",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="PkgType' + row.EntryID + '"  style="width:100px">'
                                    for (j = 0; j < PKGL.length; j++) {

                                        data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {

                                "data": "Weight",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textWeight' + row.EntryID + '\" class=\"form-control\" id=\"textWeight' + row.EntryID + '\" style=\"width:60px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "OpeartionalPksg",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpPkgs' + row.EntryID + '\" class=\"form-control\" id=\"textOpPkgs' + row.EntryID + '\" onchange=\" ChkAmtValidate(this)\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "OperationWt",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpweight' + row.EntryID + '\" class=\"form-control\" id=\"textOpweight' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Examine",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textExamine' + row.EntryID + '\" class=\"form-control\" id=\"textExamine' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },

                            {
                                "data": "Vendor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Vendor' + row.EntryID + '"  style="width:100px">'
                                    for (j = 0; j < VendorL.length; j++) {

                                        data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },

                            {
                                "data": "Equipment",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Equipment' + row.EntryID + '"  style="width:100px">'
                                    for (j = 0; j < EquipmentL.length; j++) {

                                        data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },




                            {

                                "data": "Remarks",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textRemarks' + row.EntryID + '\" class=\"form-control\" id=\"textRemarks' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Hours",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textHours' + row.EntryID + '\" class=\"form-control\" id=\"textHours' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },

                            {

                                "data": "CGM",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textCGM' + row.EntryID + '\" class=\"form-control\" id=\"textCGM' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Surveyor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="TxtSurveyor' + row.EntryID + '"  style="width:100px">'
                                    for (j = 0; j < SurveyorL.length; j++) {

                                        data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            { "data": "EntryID" },
                            { "data": "CartingAllowId" },
                            { "data": "SBNO" },
                            { "data": "SBentryid" },
                            {

                                "data": "MaterialQty",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\" onclick=\"OpenMaterialModal(' + row.SRNO + ')\"    value="' + data + '" >';
                                    return data;

                                }
                            },
                            //{

                            //    "data": "MaterialQty",
                            //    "render": function (data, type, row, meta) {
                            //        data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\"    value="' + data + '">';
                            //        return data;

                            //    }
                            //},
                            {

                                "data": "MaterialDescriptions",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Containerno",
                                "render": function (data, type, row, meta) {


                                    data = '<a   href="#" class="btn btn-sm btn-primary" title="View" onclick="CopySameContainerNo(' + row.EntryID + ')">Copy</a>';


                                    return data;
                                }


                            },



                        ]
                    });

                    $("#TxtCartingID").val(data[0].CartingAllowId)

                    document.getElementById("lblCHAName").innerHTML = data[0].cha;

                    document.getElementById("lblShipperName").innerHTML = data[0].shippername;
                    document.getElementById("lblOnAccountName").innerHTML = data[0].Onaccount;
                    document.getElementById("lblCargoDescription").innerHTML = data[0].CargoDesc;

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                    $("#tracker-loader").fadeOut("slow");
                }
            });
        }

        function CopySameContainerNo(Containerno1) {


            var checkboxarray = [];
            $('input[type=checkbox]').each(function () {
                if (this.checked) {

                    checkboxarray.push($(this).val());
                }
            });

            var tablearray = [];
            var table = document.getElementById("tblWorkOrderDets");
            var row;
            for (var i = 1; i < table.rows.length; i++) {

                row = table.rows[i];

                //for (var k = 0; k < checkboxarray.length; k++) {


                //    var InvoiceNo = row.cells[2].innerText;

                //    if (InvoiceNo == Containerno1) {


                row = table.rows[i];
                EntryID = row.cells[17].innerText;
                StuffLocation = row.cells[1].innerText;
                Containerno = row.cells[2].innerText;
                WarehouseID = row.cells[3].innerText;

                VehicleNo = $("#textVehicleNo" + EntryID + "").val();
                PKGSDestuff = $("#textPKGSDestuff" + EntryID + "").val();
                PkgType = $("#PkgType" + EntryID + " option:selected").val();
                Weight = $("#textWeight" + EntryID + "").val();
                Vendor = $("#Vendor" + EntryID + " option:selected").val();




                EquipmentID = $("#Equipment" + EntryID + " option:selected").val();
                Remarks = $("#textRemarks" + EntryID + "").val();
                Hours = $("#textHours" + EntryID + "").val();
                CGM = $("#textCGM" + EntryID + "").val();

                OpeartionalPksg = $("#textOpPkgs" + EntryID + "").val();
                OperationWt = $("#textOpweight" + EntryID + "").val();
                Examine = $("#textExamine" + EntryID + "").val();
                Surveyor = $("#TxtSurveyor" + EntryID + "").val();

                CartingAllowId = row.cells[18].innerText;

                SBentryid = row.cells[20].innerText;
                SBNO = row.cells[19].innerText;
                MaterialQty = $("#txtMaterialQty" + EntryID + "").val();
                MaterialDescriptions = $("#txtMaterialDescriptions" + EntryID + "").val();
                var MaterialMappingAutoID = 0;
                for (j = 0; j < WODetailsArrayList.length; j++) {
                   
                        MaterialMappingAutoID = WODetailsArrayList[j].MaterialMappingID;
                        var MatAllowQty = parseFloat(WODetailsArrayList[j].MaterialQty);
                        var SavingMatQty = parseFloat(MaterialQty);
                        if (SavingMatQty > MatAllowQty) {
                            alert('not allowed to set more than stock quantity fro :- ' + MaterialDescriptions)

                            return false;

                        }
                    
                }


                tablearray.push({
                    'StuffLocation': StuffLocation, 'Containerno': Containerno, 'WarehouseID': WarehouseID, 'VehicleNo': VehicleNo, 'PKGSDestuff': PKGSDestuff,
                    'PkgType': PkgType, 'Weight': Weight, 'Vendor': Vendor, 'EntryID': EntryID, 'EquipmentID': EquipmentID, 'Remarks': Remarks,
                    'Hours': Hours, 'CGM': CGM, 'CartingAllowId': CartingAllowId, 'SBentryid': SBentryid, 'SBNO': SBNO, 'OpeartionalPksg': OpeartionalPksg, 'OperationWt': OperationWt,
                    'Examine': Examine, 'Surveyor': Surveyor, 'MaterialQty': MaterialQty, 'MaterialDescriptions': MaterialDescriptions,'MaterialMappingAutoID':MaterialMappingAutoID
                })


                //    }
                //}
            }


            var data1 = {
                'Containerdetails': tablearray, 'Containerno1': Containerno1
            };
            var data = JSON.stringify(data1);

      
            $.ajax({
                url: "/WorkOrder/ExportWorkOrderTEmpSave",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    WODetailsArrayList = data.List2;


                    $('#tblWorkOrderDets').dataTable({
                        "destroy": true,
                        "bLengthChange": false,
                        "aaData": data,
                        "bInfo": false,
                        "bPaginate": false,
                        "bFilter": true,
                        "paging": false,
                        "order": [],
                        "aaData": data.List2,
                        "columns": [
                            {

                                "data": "EntryID",
                                "render": function (data, type, row, meta) {

                                    data = '<input type=\"checkbox\" name=\"checklist[]\" class=\"checklist\" id=\"checklist\"  checked value="' + row.EntryID + '">';
                                    return data;

                                }
                            },
                            { "data": "StuffLocation" },
                            { "data": "Containerno" },
                            { "data": "WarehouseID" },
                            {

                                "data": "VehicleNo",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textVehicleNo' + row.EntryID + '\" class=\"form-control\" id=\"textVehicleNo' + row.EntryID + '\" style=\"width:200px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "PKGSDestuff",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textPKGSDestuff' + row.EntryID + '\" class=\"form-control\" id=\"textPKGSDestuff' + row.EntryID + '\" style=\"width:200px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "PkgType",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="PkgType' + row.EntryID + '"  style="width:100px">'
                                    for (j = 0; j < PKGL.length; j++) {

                                        data += '<option value="' + PKGL[j].CodeID + '"> ' + PKGL[j].Package + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {

                                "data": "Weight",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textWeight' + row.EntryID + '\" class=\"form-control\" id=\"textWeight' + row.EntryID + '\" style=\"width:200px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "OpeartionalPksg",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpPkgs' + row.EntryID + '\" class=\"form-control\" id=\"textOpPkgs' + row.EntryID + '\"  onchange=\" ChkAmtValidate(this)\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "OperationWt",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textOpweight' + row.EntryID + '\" class=\"form-control\" id=\"textOpweight' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Examine",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textExamine' + row.EntryID + '\" class=\"form-control\" id=\"textExamine' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Vendor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Vendor' + row.EntryID + '"  style="width:100px">'
                                    for (j = 0; j < VendorL.length; j++) {

                                        data += '<option value="' + VendorL[j].VendorId + '"> ' + VendorL[j].Name + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {
                                "data": "Equipment",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="Equipment' + row.EntryID + '"  style="width:100px">'
                                    for (j = 0; j < EquipmentL.length; j++) {

                                        data += '<option value="' + EquipmentL[j].Id + '"> ' + EquipmentL[j].Equipment + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            {

                                "data": "Remarks",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textRemarks' + row.EntryID + '\" class=\"form-control\" id=\"textRemarks' + row.EntryID + '\" style=\"width:200px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {

                                "data": "Hours",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textHours' + row.EntryID + '\" class=\"form-control\" id=\"textHours' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },

                            {

                                "data": "CGM",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"textCGM' + row.EntryID + '\" class=\"form-control\" id=\"textCGM' + row.EntryID + '\" style=\"width:80px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },
                            {
                                "data": "Surveyor",
                                "render": function (data, type, row, meta) {

                                    data = '<select  class="form-control" id="TxtSurveyor' + row.EntryID + '"  style="width:100px">'
                                    for (j = 0; j < SurveyorL.length; j++) {

                                        data += '<option value="' + SurveyorL[j].SurveyorId + '"> ' + SurveyorL[j].SurveyorName + '</option>'

                                    }

                                    data += '</select>';
                                    return data;

                                }

                            },
                            { "data": "EntryID" },
                            { "data": "CartingAllowId" },
                            { "data": "SBNO" },
                            { "data": "SBentryid" },
                            {

                                "data": "MaterialQty",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialQty' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialQty' + row.SRNO + '\" style=\"width:100px;text-transform:uppercase\" onclick=\"OpenMaterialModal(' + row.SRNO + ')\"    value="' + data + '" >';
                                    return data;

                                }
                            },
                            {

                                "data": "MaterialDescriptions",
                                "render": function (data, type, row, meta) {
                                    data = '<input type=\"textbox\" name=\"txtMaterialDescriptions' + row.SRNO + '\" class=\"form-control\" id=\"txtMaterialDescriptions' + row.SRNO + '\" style=\"width:180px;text-transform:uppercase\"    value="' + data + '">';
                                    return data;

                                }
                            },

                            {
                                "data": "EntryID",
                                "render": function (data, type, row, meta) {


                                    data = '<a   href="#" class=\"btn btn-sm btn-primary\" title=\"View\" onclick="CopySameContainerNo(' + row.EntryID + ')">Copy</a>';


                                    return data;
                                }


                            },



                        ]
                    });




                    clearTemptable(Containerno1);


                },

                error: function (error) {
                    //let str = error.responseText;
                    //var a = str.indexOf("<title>") + 7;
                    //var b = str.indexOf("</title>");
                    //str = str.substring(a, b);
                    //alert("Something went wrong: " + str);

                }
            });
                  debugger;
        }

        function clearTemptable(Containerno1) {
            var data1 = { 'ContainerNo': Containerno1 };
            var data = JSON.stringify(data1);
            $.ajax({
                url: "/WorkOrder/ClearExportTempWorkorder",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                },

                error: function (error) {
                    let str = error.responseText;
                    var a = str.indexOf("<title>") + 7;
                    var b = str.indexOf("</title>");
                    str = str.substring(a, b);
                    alert("Something went wrong: " + str);

                }
            });
        }






        function BlurCOntainerNo() {
            var txtContainerNo = document.getElementById('txtContainerNo').value;
            var data1 = { 'ContainerNo': txtContainerNo };
            var data = JSON.stringify(data1);

            $.ajax({
                url: "/WorkOrder/ContainerValidation",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data[0].ContainerNo == "0") {
                        alert('Container No not in Inventory! Please Check')
                        document.getElementById('txtContainerNo').value = "";
                        document.getElementById('lblContPrevPkgs').innerHTML = "";
                        document.getElementById('hdnVendorId').value = "";
                    }
                    else {
                        document.getElementById('lblContPrevPkgs').innerHTML = data[0].ContPrevPkgs;
                        document.getElementById('hdnVendorId').value=data[0].VendorID;
                    }
                },
                failure: function (response) {
                    alert(response);
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            })
        }
        function ChangeWOType() {
            var ddlWOType = $("#ddlWOType").val();
            if (ddlWOType == "Stuffing") {

            }
            else if (ddlWOType == "Carting") {

            }
        }

        function OnCategoryChange() {
            if ($("#ddlCategory").val() == "General") {
                $("#divSBNo").show();
                $("#divSBAdd").show();
                $("#divInvoiceAdd").hide();
                $("#divInvoiceNo").hide();

            }
            else {
                $("#divSBNo").hide();
                $("#divSBAdd").hide();
                $("#divInvoiceAdd").show();
                $("#divInvoiceNo").show();
            }
        }
        function PrintWoExport(WONo) {


            data1 = { 'WONo': WONo};
            data = JSON.stringify(data1);
            $.ajax({
                //url: "/WorkOrder/PrintWorkOrder",
                url: "/WorkOrder/PrintWorkOrderLashingAndChocking",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                // dataType: "json",
                success: function (response) {

                    var myWindow = window.open("", "MsgWindow1");
                    myWindow.close();
                    var myWindow = window.open("", "MsgWindow1");
                    myWindow.document.write(response);
                },

                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }


        //function OnAddInvoiceNo() {
        //    Sub_CLear()
        //    var txtInvoiceNo = document.getElementById('txtInvoiceNo').value;
        //    var ddlWOType = document.getElementById('ddlWOType').value;
        //    var ddlCategory = document.getElementById('ddlCategory').value;


        //        if (txtInvoiceNo == "") {
        //            alert('Please enter Invoice No first!');
        //            document.getElementById('txtInvoiceNo').focus();
        //            return false;
        //        }
        //        if (ddlWOType == "") {
        //            alert('Please select work order type first!');
        //            document.getElementById('ddlWOType').focus();
        //            return false;
        //        }
        //        var data1 = { 'InvoiceNo': txtInvoiceNo, 'WorkType': ddlWOType };
        //        var data = JSON.stringify(data1);

        //        $.ajax({
        //            url: "/WorkOrder/ShowSBNODetsByInvoice",
        //            type: 'Post',
        //            data: data,
        //            async: false,
        //            contentType: 'application/json; charset=utf-8',
        //            success: function (response) {

        //                if (response == "") {
        //                    alert("Record(s) not found")
        //                    document.getElementById("lblCHAName").innerHTML = "";
        //                    document.getElementById("lblShipperName").innerHTML = "";
        //                    document.getElementById("lblOnAccountName").innerHTML = "";
        //                    document.getElementById("lblManiFestQty").innerHTML = "";
        //                    document.getElementById("lblCargoDescription").innerHTML = "";
        //                    document.getElementById("lblSBEntryID").innerHTML = "";
        //                    document.getElementById("lblCHAID").innerHTML = "";
        //                    document.getElementById("lblOnAccountID").innerHTML = "";
        //                    document.getElementById('txtSBNo').focus();
        //                    return false;
        //                }
        //                else {
        //                    document.getElementById("lblCHAName").innerHTML = response[0].CHAName;
        //                    document.getElementById("lblShipperName").innerHTML = response[0].ShipperName;
        //                    document.getElementById("lblOnAccountName").innerHTML = response[0].OnAccount;
        //                    document.getElementById("lblManiFestQty").innerHTML = response[0].ManifestQty;
        //                    document.getElementById("lblCargoDescription").innerHTML = response[0].CargoDescription;
        //                    document.getElementById("lblSBEntryID").innerHTML = response[0].SBEntryID;
        //                    document.getElementById("lblCHAID").innerHTML = response[0].CHAID;
        //                    document.getElementById("lblOnAccountID").innerHTML = response[0].OnAccountID;
        //                    $("#txtContainerNo").val(response[0].ContainerNo);
        //                    $("#divContainerNo").show();
        //                    $("#ddlStuffLocation").val('Container')
        //                    $("#ddlPkgType").val(response[0].Unit);
        //                    //GetCartTotalPkgsInvoice(response[0].SBEntryID);
        //                    GetCartTotalPkgsInvoice();
        //                }
        //            },
        //            failure: function (response) {
        //                alert(response);
        //                alert(response.responseText);
        //            },
        //            error: function (response) {
        //                alert(response.responseText);
        //            }
        //        })

        //}

        $(document).ready(function () {
            $("#txtStuffDStuffPkgs").change(function () {

                var txtStuffDStuffPkgs = $("#txtStuffDStuffPkgs").val();
                var lblUnitWt = document.getElementById("lblUnitWt").innerHTML;

                if (txtStuffDStuffPkgs > "0" && lblUnitWt > "0") {
                    $("#txtWeight").val(parseInt(txtStuffDStuffPkgs) * parseInt(lblUnitWt));
                }

            });
        });

        function EditWO(WorkOrder) {

            var WoNo = WorkOrder.split('~')[0];
            var SrNo = WorkOrder.split('~')[1];

            var data1 = { 'WorkOrder': WoNo, 'SrNo': SrNo };
            var data = JSON.stringify(data1);

            $.ajax({
                url: "/WorkOrder/ViewWorkOrderEdit",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                // dataType: "json",
                success: function (response) {
                    if (response.VendorID > 0) {
                        $("#txtEWorkOrder").val(response.WoNo);
                        $("#txtEWODate").val(response.WoDate);
                        $("#txtETotalPkgs").val(response.StuffPkgs);
                        $("#txtETotalWeight").val(response.Weight);
                        $("#ddlEVendor").val(response.VendorID);
                        $("#hdnSrNo").val(response.SrNo);
                    }
                    else {
                        ClearEditData();
                        alert("No Data Found.");
                    }

                },

                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

            $("#divEditWorkOrder").show();
            $("#divOpenWorkOrderSummary").hide();
        }

        function BackToWorkOrderEdit() {
            $("#divEditWorkOrder").hide();
            $("#divOpenWorkOrderSummary").show();
            ClearEditData();
        }

        function ClearEditData() {
            $("#txtEWorkOrder").val('');
            $("#txtEWODate").val('');
            $("#txtETotalPkgs").val('');
            $("#txtETotalWeight").val('');
            $("#ddlEVendor").val('');
        }

        function EditWorkOrder() {

            var WorkOrder = $("#txtEWorkOrder").val();
            var SrNo = $("#hdnSrNo").val();
            var TotalPkgs = $("#txtETotalPkgs").val();
            var TotalWeight = $("#txtETotalWeight").val();
            var Vendor = $("#ddlEVendor").val();
            var SelectedData = [];

            if (WorkOrder == "") {
                alert("Please Enter Work Order No");
                return;
            }

            if (TotalPkgs == "" || TotalPkgs=="0") {
                alert("Package cannot be less then or Zero.");
                return;
            }

            if (TotalWeight == "" || TotalWeight=="0") {
                alert("Weight cannot be less then or Zero.");
                return;
            }

            if (Vendor == "") {
                alert("Please select Vendor Name");
                return;
            }

            var confirm = window.confirm("Are you want to update existing Record ?");

            if (confirm) {

                var data1 = { 'WoNo': WorkOrder, 'SrNo': SrNo, 'StuffPkgs': TotalPkgs, 'Weight': TotalWeight, 'VendorID': Vendor };

                data = JSON.stringify(data1);

                $.ajax({
                    url: "/WorkOrder/WorkOrderEdit",
                    data: data ,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    // dataType: "json",
                    success: function (response) {
                        if (response > "0") {
                            alert("Record Updated Successfully.");
                            ClearEditData();
                            OpenWOSummary();
                            $("#divEditWorkOrder").hide();
                        }
                        else {
                            "Record Not Updated Successfully.";
                        }
                    },

                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });

            }

        }

        function ValidateVendor(ContainerNo,VendorId,StuffWt,StuffPkgs) {
            var result = true;
            var data1 = { 'ContainerNo': ContainerNo, 'VendorId': VendorId, 'Package': StuffPkgs, 'Weight': StuffWt};
            var data = JSON.stringify(data1);

            $.ajax({
                url: "/WorkOrder/ValidateVendor",
                data: data,
                async: false,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                // dataType: "json",
                success: function (response) {
                    if (response != "") {
                        result = false;
                        alert(response);
                        return result;
                    }
                },

                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

            return result;
        }





        function editclosed() {


            var wono = $("#txtWorkOrder").val();
            var WoDate = $("#txtWODate").val();
            var Surveyor = $("#ddlSurveyor option:selected").val();


             $("#tracker-loader").fadeIn("slow");



        var itemcount = checkItemcount();
        if (itemcount == false) {
            alert("Please enter atleast one destuff entry before saving.");
        }
        else {
            var checkboxarray = [];
            $('input[type=checkbox]').each(function () {
                if (this.checked) {

                    checkboxarray.push($(this).val());
                }
            });

            var tablearray = [];
            var table = document.getElementById("tblWorkOrderDets");
            var row;
            for (var i = 1; i < table.rows.length; i++) {

                row = table.rows[i];

                for (var k = 0; k < checkboxarray.length; k++) {


                    var InvoiceNo = row.cells[17].innerText;

                    if (InvoiceNo == checkboxarray[k]) {


                        row = table.rows[i];
                        StuffLocation = row.cells[1].innerText;
                        Containerno = row.cells[2].innerText;
                        WarehouseID = row.cells[3].innerText;


                        EntryID = row.cells[17].innerText;

                        VehicleNo = $("#textVehicleNo" + EntryID + "").val();
                        PKGSDestuff = $("#textPKGSDestuff" + EntryID + "").val();
                        PkgType = $("#PkgType" + EntryID + " option:selected").val();
                        Weight = $("#textWeight" + EntryID + "").val();
                        Vendor = $("#Vendor" + EntryID + " option:selected").val();




                        EquipmentID = $("#Equipment" + EntryID + " option:selected").val();
                        Remarks = $("#textRemarks" + EntryID + "").val();
                        Hours = $("#textHours" + EntryID + "").val();
                        CGM = $("#textCGM" + EntryID + "").val();
                        Surveyor = $("#TxtSurveyor" + EntryID + "").val();


                        OpeartionalPksg = $("#textOpPkgs" + EntryID + "").val();
                        OperationWt = row.cells[9].innerText;
                        Examine = row.cells[10].innerText;

                        CartingAllowId = row.cells[18].innerText;

                        SBentryid = row.cells[20].innerText;
                        SBNO = row.cells[19].innerText;


                        tablearray.push({
                            'StuffLocation': StuffLocation, 'Containerno': Containerno, 'WarehouseID': WarehouseID, 'VehicleNo': VehicleNo, 'PKGSDestuff': PKGSDestuff,
                            'PkgType': PkgType, 'Weight': Weight, 'Vendor': Vendor, 'EntryID': EntryID, 'EquipmentID': EquipmentID, 'Remarks': Remarks,
                            'Hours': Hours, 'CGM': CGM, 'CartingAllowId': CartingAllowId, 'SBentryid': SBentryid, 'SBNO': SBNO, 'OpeartionalPksg': OpeartionalPksg, 'OperationWt': OperationWt,
                            'Examine': Examine, 'Surveyor': Surveyor
                        })


                    }
                }
            }
        }


            var workordertype = $("#ddlWOType").val();
            var cartingID = $("#TxtCartingID").val();

        var data1 = {
            'Containerdetails': tablearray, 'wono': wono, 'WoDate': WoDate, 'Surveyor': Surveyor
        };
        var data = JSON.stringify(data1);


        $.ajax({
            url: "/WorkOrder/ExportWorkOrderUpdate",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                alert(data);



                if (workordertype == "Carting") {

                    if (confirm('Do you want generate carting tally?')) {

                         $("#tracker-loader").fadeOut("slow");
                          window.location = '@Url.Action("ExportCartingTally", "exportModel")?Cartingid=' + cartingID;
                    } else {

                        document.location = '@Url.Action("WorkOrder", "WorkOrder")';
                         $("#tracker-loader").fadeOut("slow");
                    }





                }
                else if (workordertype == "Stuffing") {

                    if (confirm('Do you want generate Stuffing tally?')) {

                         $("#tracker-loader").fadeOut("slow");
                          window.location = '@Url.Action("ExportStuffingTally", "exportModel")?Cartingid=' + cartingID;
                    } else {

                        document.location = '@Url.Action("WorkOrder", "WorkOrder")';
                         $("#tracker-loader").fadeOut("slow");
                    }





                }
                else {
                     document.location = '@Url.Action("WorkOrder", "WorkOrder")';
                    $("#tracker-loader").fadeOut("slow");
                }





            },

            error: function (error) {
                let str = error.responseText;
                var a = str.indexOf("<title>") + 7;
                var b = str.indexOf("</title>");
                str = str.substring(a, b);
                alert("Something went wrong: " + str);

                $("#tracker-loader").fadeOut("slow");
            }
        });

    }



        function checkItemcount() {

            var table = $('#tblWorkOrderDets').DataTable();

            if (table.rows().count() == 0) {

                return false;
            }
            return true;

    }



</script>
<script>
    function ChkAmtValidate(id) {



        var Currentindex = id.closest('tr').rowIndex;


        var table = document.getElementById("tblWorkOrderDets");

        for (var i = 1; i < table.rows.length; i++) {

            if (i == Currentindex) {

                row = table.rows[i];

                EntryID = row.cells[17].innerText;



                PKGSDestuff = $("#textPKGSDestuff" + EntryID + "").val();

                Weight = $("#textWeight" + EntryID + "").val();


                OpeartionalPksg = $("#textOpPkgs" + EntryID + "").val();
                OperationWt = $("#textOpweight" + EntryID + "").val();
                Examine = $("#textExamine" + EntryID + "").val();



                if (PKGSDestuff != 0 && Weight != "") {
                    if (parseInt(PKGSDestuff) >= parseInt(OpeartionalPksg)) {
                        var intvalue = Math.round((parseInt(OpeartionalPksg) / parseInt(PKGSDestuff)) * 100);
                        row.cells[10].innerHTML = intvalue;
                    }
                    else {
                        row.cells[10].innerHTML = 0;
                    }
                }
                if (PKGSDestuff != 0 && Weight != "") {
                    if (parseInt(PKGSDestuff) >= parseInt(OpeartionalPksg) && parseInt(Weight) > 0) {

                        var intvalue11 = Math.round((parseInt(Weight) / parseInt(PKGSDestuff)) * parseInt(OpeartionalPksg));
                        row.cells[9].innerHTML = intvalue11;
                    }
                    else {

                        row.cells[9].innerHTML = 0;
                    }
                }
            }

        }
    }




    function CancelWO(WO_NO) {
        var data1 = {
            'WO_NO': WO_NO
        };
        var data = JSON.stringify(data1);


        if (confirm('Are you sure you want to cancel this wo_no "' + WO_NO + '"')) {

            $.ajax({
                url: "/WorkOrder/CancelExportworkOrder",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    alert("Record cancelled sucessfully!");
                    showClear();
                    OpenWOSummary();

                },

                error: function (error) {
                    let str = error.responseText;
                    var a = str.indexOf("<title>") + 7;
                    var b = str.indexOf("</title>");
                    str = str.substring(a, b);
                    alert("Something went wrong: " + str);

                    $("#tracker-loader").fadeOut("slow");
                }
            });
        } else {
            alert("you pressed Cancel");
        }

    }



    function showClear() {
        $.ajax({
            url: "/WorkOrder/ListOpenWorkOrder",
            //data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            // dataType: "json",
            success: function (data) {
                $('#tblWorkOrderOpenList').dataTable({
                    "destroy": true,
                    "bLengthChange": false,
                    "aaData": data,
                    "paging": false,
                    "aaSorting": [[0, 'asc']],
                    "order": [],
                    "aoColumnDefs": [
                        {
                            'bSortable': false,
                            'aTargets': [0],
                        },

                    ],
                    "dom": 'Bfrtip',
                    "buttons": [{
                        "extend": 'excel',
                        "title": 'List of Open Work Orders',
                        "filename": 'OpenWorkOrders'
                    }
                    ],
                    "columns": [
                        {
                            "data": "data",
                            "render": function (data, type, row, meta) {
                                data = "<a href=\"#\" class=\"btn btn-sm btn-info\" title=\"Close\" onclick=\"CloseWO('" + row.WONo + "','" + row.WOType + "')\">Close</a>";
                                return data;
                            }
                        },
                        {
                            "data": "data",
                            "render": function (data, type, row, meta) {
                                data = "<a href=\"#\" class=\"btn btn-sm btn-success\" title=\"Print\" onclick=\"PrintWoExport('" + row.WONo + "')\">Print</a>";
                                return data;
                            }
                        },
                        //{
                        //    "data": "data",
                        //    "render": function (data, type, row, meta) {
                        //        data = "<a href=\"#\" class=\"btn btn-sm btn-primary\" title=\"Edit\" onclick=\"EditWO('" + row.WONo + '~' + row.SequenceNo + "')\">Edit</a>";
                        //        return data;
                        //    }
                        //},
                        {
                            "data": "data",
                            "render": function (data, type, row, meta) {
                                data = "<a href=\"#\" class=\"btn btn-sm btn-danger\" title=\"Cancel\" onclick=\"CancelWO('" + row.WONo + "')\">Cancel</a>";
                                return data;
                            }
                        },
                        { "data": "SrNo" },
                        { "data": "WONo" },
                        { "data": "SequenceNo" },
                        { "data": "WODate" },
                        { "data": "WOType" },
                        { "data": "SBNo" },
                        { "data": "OnAccount" },
                        { "data": "CHA" },
                        { "data": "VehicleNo" },
                        { "data": "ContainerNo" },
                        { "data": "Warehouse" },
                        { "data": "Pkgs" },
                        { "data": "Vendor" },
                    ]
                })
            },

            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }





    function PrintsurveyorExport(WONo) {
        data1 = { 'WONo': WONo };
        data = JSON.stringify(data1);
        $.ajax({
            url: "/WorkOrder/VendorPrintsurveyor",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            // dataType: "json",
            success: function (response) {

                var myWindow = window.open("", "MsgWindow1");
                myWindow.close();
                var myWindow = window.open("", "MsgWindow1");
                myWindow.document.write(response);
            },

            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }


    function OpenMaterialModal(SRNO) {
         MaterialListArrray = [];
        $("#MaterialListModal").modal();

                $('#tblMaterialList').dataTable({
                    "destroy": true,
                    "bLengthChange": false,
                    "bInfo": false,
                    "bPaginate": true,
                    "iDisplayLength": 10,
                    //"bFilter": false,
                    "aaSorting": [],
                    "order": [],

                    "aoColumnDefs": [
                        {
                            'bSortable': false,
                            'aTargets': [0, 1, 2, 3]
                        }

                    ],
                    "aaData": MaterialListArrray,

                "aaData": MaterialListArrray,
                })

        UniqueSRNO =SRNO;
    }

    function ShowMaterialsReceivingConfirmationsList(ItemName) {

        MaterialListArrray = [];
        var ItemName = $('#TxtSearchItem').val();
        if (ItemName == undefined) {
            ItemName = '';

        }
        for (j = 0; j < WODetailsArrayList.length; j++) {
            var SRNO = WODetailsArrayList[j].SRNO;
            debugger
                var MatQty = $('#txtMaterialQty' + SRNO).val();
                WODetailsArrayList[j].MaterialQty = parseFloat(MatQty);
            
        }

        var data1 = { 'ItemName': ItemName ,'AllAutoID' :AllAutoIDArrayString,'Material':WODetailsArrayList};
        var data = JSON.stringify(data1);

        debugger;
        $.ajax({
            url: "/LashingAndChocking/GetMappedMaterialsReceivingConfirmationsList",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (Data) {
                MaterialListArrray = Data;


                $('#tblMaterialList').dataTable({
                    "destroy": true,
                    "bLengthChange": false,
                    "bInfo": false,
                    "bPaginate": true,
                    "iDisplayLength": 10,
                    //"bFilter": false,
                    "aaSorting": [],
                    "order": [],

                    "aoColumnDefs": [
                        {
                            'bSortable': false,
                            'aTargets': [0, 1, 2, 3]
                        }

                    ],
                    "aaData": MaterialListArrray,
                    "columns": [

                        {
                            "data": "AutoID",
                            "orderable": false,
                            "render": function (data, type, row, meta) {
                                if (row.Category != "") {
                                    //data = '<input type=\"checkbox\" name=\"checklistName\" class=\"checklist\" id=\"CheckMaterial_' + row.SRNO + '\"  onclick=\"SetLashingAndChockingDetails(' + UniqueSRNO +',' +row.SRNO +','+ row.AutoID + ')\"  value="' + row.AutoID + '">'
                                    //data = '<input type=\"checkbox\" name=\"checklistName\" class=\"checklist\" id=\"CheckMaterial_' + row.AutoID + '\"  onclick="CheckedRistriction(' + row.AutoID + ')"  value="' + row.AutoID + '">'
                                    return '<input type="checkbox" id="CheckMaterial_' + row.AutoID + '" name= "check_id" class=\"ids \" value="' + data + '" onchange="CheckedRistriction(' + row.AutoID + ')"  />';
                                }
                                else {
                                    data = "";
                                }
                                return data;
                            }


                        },
                        { "data": "IssueNo" },
                        { "data": "GRNNo" },
                        { "data": "ItemCode" },
                        { "data": "ItemName" },
                        { "data": "Qty" },
                        { "data": "Rate" },
                        { "data": "SentByName" },
                        { "data": "SentOn" }

                    ]


                });




            },
            error: function (errormessage) {
                alert("error");
                alert(errormessage.responseText);
            }
        });



    }

    function SetLashingAndChockingDetails() {
        AllAutoIDArrayString = '';
        AllAutoIDArray = [];
        var WOTblSRNO = UniqueSRNO;
        var AutoID = $('#UniqueMaterialAutoID').val();
        AutoID = parseFloat(AutoID);
        debugger;
        for (i = 0; i < MaterialListArrray.length; i++) {
            if (MaterialListArrray[i].AutoID == AutoID) {

                $('#txtMaterialQty' + WOTblSRNO).val(MaterialListArrray[i].Qty);
                $('#txtMaterialDescriptions' + WOTblSRNO).val(MaterialListArrray[i].ItemName);

            }
        }

        for (j = 0; j < WODetailsArrayList.length; j++) {
            if (WODetailsArrayList[j].SRNO == WOTblSRNO) {
                var MatQty = $('#txtMaterialQty' + WOTblSRNO).val();
                var MatName = $('#txtMaterialDescriptions' + WOTblSRNO).val();
                WODetailsArrayList[j].MaterialAllowQty = parseFloat(MatQty);
                WODetailsArrayList[j].MaterialQty = parseFloat(MatQty);
                WODetailsArrayList[j].MaterialDescriptions = MatName;
                WODetailsArrayList[j].MaterialMappingID = AutoID;
            }
        }
        console.log(WODetailsArrayList);

        
        for (j = 0; j < WODetailsArrayList.length; j++) {
            if (WODetailsArrayList[j].MaterialMappingID != undefined && WODetailsArrayList[j].MaterialMappingID != null) {
                AllAutoIDArray.push(WODetailsArrayList[j].MaterialMappingID);
            }
        }


        AllAutoIDArrayString = AllAutoIDArray.toString();
        debugger;

    }

    function CheckedRistriction(AutoID) {
          debugger;
        for (i = 0; i < MaterialListArrray.length; i++) {
          
            var IsChecked = document.getElementById("CheckMaterial_" + AutoID);
             
            if ($(IsChecked).prop("checked") == true) {
              
                if (MaterialListArrray[i].AutoID != AutoID) {
                    var chkID = document.getElementById("CheckMaterial_" + MaterialListArrray[i].AutoID);
                    $(chkID).attr("disabled", true);
                }

            }
            else if ($(IsChecked).prop("checked") == false) {
                var chkID = document.getElementById("CheckMaterial_" + MaterialListArrray[i].AutoID);
                $(chkID).attr("disabled", false);
            }

        }

                var ID = 0;
             $('.ids:checked').each(function (i, e) {
                ID=$(this).val();
             });

         $('#UniqueMaterialAutoID').val(ID);
    }
</script>


<script>
    // CODE BY SAGAR
      function FinalClose() {
        debugger;

          var WOID = $('#txtWorkOrder').val();
          var r = confirm("Are you sure close WO No " + WOID + "?");
        if (r == true) {


            var data1 = { 'WOID': WOID };
            data = JSON.stringify(data1);

        $.ajax({
        type: "POST",
            url: "/WorkOrder/LNCFinalCose",
            data: data,
        contentType: "application/json; charset=utf-8",
            success: function (response) {
                alert(response);
    window.location.href = '@Url.Action("WorkOrderLashingAndChocking", "WorkOrder")';
    },
        error: function (errormessage) {
        // alert("error");
        alert(errormessage.responseText);
        }
        });
        }
        };
</script>