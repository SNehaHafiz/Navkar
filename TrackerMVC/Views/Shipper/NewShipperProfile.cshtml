@model TrackerMVCEntities.BusinessEntities.ShipperMaster

@{
    ViewBag.Title = "New Shipper Profile";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<link href="~/css/NewCHAProfile.css" rel="stylesheet" />
@using (Html.BeginForm("SaveShipperProfile", "Shipper", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="page-header">
        <h4 class="page-title">Shipper Profile</h4> 
        <div class="form-group">
            <label class="form-label"></label>
            <div class="row gutters-xs">
                <div class="col">
                    <button type="button" class="btn btn-icon btn-orange" name="gst" title="GST" id="gst"><i class="fa fa-google"></i></button>
                    <button type="button" class="btn btn-icon btn-teal" name="summarylist" title="Summary list" id="summarylist" onclick="window.location = '@Url.Action("MasterSummary", "Master")' "><i class="fa fa-file-text"></i></button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="row">
                            @*<div class="col-sm-3 col-md-2">
                                <div class="form-group">
                                    <label class="form-label">Shipper ID</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperID, new { htmlAttributes = new { @class = "form-control Number", @id = "shipperID", @readonly = "Readonly", @Value = "01" } })

                                        </div>

                                    </div>
                                </div>
                            </div>*@
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Shipper(IEC NO)</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperIECNO, new { htmlAttributes = new { @class = "form-control", @id = "shipperIECNO", autocomplete = "off" } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-9 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Shipper Name</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperName, new { htmlAttributes = new { @class = "form-control", @id = "shipperName", autocomplete = "on", maxlength = 30 } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-lg-12 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Full Address</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @* @Html.EditorFor(model => model.shipperid, new { htmlAttributes = new { @class = "form-control Number", @id = "shipperid" } })*@
                                            @Html.EditorFor(model => model.ShipperAddress, new { htmlAttributes = new { @class = "form-control", @id = "shipperAddress", maxlength = 500 } })

                                        </div>

                                    </div>
                                </div>
                            </div>
                            @*<div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">City</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                           
                                            @Html.EditorFor(model => model.ShipperCity, new { htmlAttributes = new { @class = "form-control", @id = "shipperCity", autocomplete = "off" } })


                                        </div>

                                    </div>
                                </div>
                            </div>*@
                        </div>
                        <div class="row">

                            <div class="col-lg-6 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Contact Person</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperContactPerson, new { htmlAttributes = new { @class = "form-control", @id = "contactPerson", autocomplete = "on", maxlength = 100 } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Person Designation</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperPersonDesig, new { htmlAttributes = new { @class = "form-control", @id = "designation", autocomplete = "on", maxlength = 100 } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">

                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Contact Number 1</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperContactNO1, new { htmlAttributes = new { @class = "form-control", @id = "contactNo1", autocomplete = "off", maxlength = 50, onkeydown = "numericOnly(this,event)" } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            @*</div>
                                <div class="row">*@
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Contact Number 2</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperContatcNO2, new { htmlAttributes = new { @class = "form-control", @id = "contactNo2", autocomplete = "off", maxlength = 50, onkeydown = "numericOnly(this,event)" } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            @*</div>
                                <div class="row">*@
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Fax Number</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperFax, new { htmlAttributes = new { @class = "form-control", @id = "fax", autocomplete = "off", maxlength = 50, onkeydown = "numericOnly(this,event)" } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            @*</div>
                                <div class="row">*@
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Mobile Number</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperCellNo, new { htmlAttributes = new { @class = "form-control", @id = "cellNO", autocomplete = "off", maxlength = 50, onkeydown = "numericOnly(this,event)" } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Email Address</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.ShipperEMail, new { htmlAttributes = new { @class = "form-control", @id = "emailID", maxlength = 100 } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            @*</div>
                                <div class="row">*@
                            <div class="col-lg-6 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Remarks</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @id = "remarks", maxlengt = 100 } })
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-5 col-sm-12">
                            <div class="form-group">
                                @*<label class="form-label">Is Active</label>*@
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @*@Html.EditorFor(model => model.eMailIDs, new { htmlAttributes = new { @class = "form-control", @id = "emailID" } })*@
                                        @Html.CheckBoxFor(m => m.IsActive, new { @checked = "checked", @id = "isActive" }) Is Active? @*<label class="form-label">Is Active</label>*@
                                        @* <label>@Html.CheckBoxFor(m => m.IsActive)&nbsp;@Html.DisplayNameFor(m => m.IsActive)</label>*@

                                    </div>

                                </div>
                            </div>
                        </div>


                        <div class="card-footer text-right">
                            <div class="form-group">
                                <label class="form-label"></label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        <input type="submit" id="Save" name="saveProfile" value="Save Profile" class="btn btn-success" />
                                      @*  <input type="button" name="clearProfile" value="Clear" class="btn cursor display_none" title="clear" id="clearValue" />*@ 
                                        <button type="button" class="btn btn-icon btn-gray" name="clearProfile" title="clear" id="clearValue"><i class="fa fa-undo"></i></button> 
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}
@if (ViewBag.Message != null)
{
    <script type="text/javascript">
        window.onload = function () {
            var message = @Html.Raw(Json.Encode(ViewBag.Message))
            alert(message);
            document.getElementById("shipperIECNO").value = "";
            document.getElementById("shipperName").value = "";
            document.getElementById("shipperAddress").value = "";
            //document.getElementById("shipperCity").value = "";
            document.getElementById("contactPerson").value = "";
            document.getElementById("designation").value = "";
            document.getElementById("contactNo1").value = "";
            document.getElementById("contactNo2").value = "";
            document.getElementById("fax").value = "";
            document.getElementById("cellNO").value = "";
            document.getElementById("emailID").value = "";
            document.getElementById("remarks").value = "";
            document.getElementById("isActive").checked = true;
        };

    </script>
}



<script>
    $(document).ready(function () {
        $("#shipperName").autocomplete({

            autoFocus: true,
            scroll: true,
            source: function (request, response) {
                //  alert("hi")
                $.ajax({
                    url: "/Shipper/GetNameForAutoComplete",
                    type: "POST",
                    dataType: "json",
                    data: { name: request.term },
                    success: function (data) {
                        if (!data.length) {

                        }
                        else {

                            response($.map(data, function (item) {

                                return { value: item };


                            }))
                        }
                    }
                })
            },
            select: function (e, ui) {
                $("#shipperName").val(ui.item.value);
                // CheckCompanyAvailability(ui.item.value);
                return false;
            },
            messages: {
                noResults: "", results: ""
            }
        });

        $("#contactPerson").autocomplete({

            autoFocus: true,
            scroll: true,
            source: function (request, response) {
                //  alert("hi")
                $.ajax({
                    url: "/Shipper/GetContactPersonForAutoComplete",
                    type: "POST",
                    dataType: "json",
                    data: { name: request.term },
                    success: function (data) {
                        if (!data.length) {

                        }
                        else {

                            response($.map(data, function (item) {

                                return { value: item };


                            }))
                        }
                    }
                })
            },
            select: function (e, ui) {
                $("#contactPerson").val(ui.item.value);
                // CheckCompanyAvailability(ui.item.value);
                return false;
            },
            messages: {
                noResults: "", results: ""
            }
        });

        $("#designation").autocomplete({

            autoFocus: true,
            scroll: true,
            source: function (request, response) {
                //  alert("hi")
                $.ajax({
                    url: "/Shipper/GetDesignationForAutoComplete",
                    type: "POST",
                    dataType: "json",
                    data: { name: request.term },
                    success: function (data) {
                        if (!data.length) {

                        }
                        else {

                            response($.map(data, function (item) {

                                return { value: item };


                            }))
                        }
                    }
                })
            },
            select: function (e, ui) {
                $("#designation").val(ui.item.value);
                // CheckCompanyAvailability(ui.item.value);
                return false;
            },
            messages: {
                noResults: "", results: ""
            }
        });

        $("#shipperIECNO").on("blur", function () {

            $.ajax(
                {
                    url: '/Shipper/GetExisitingShipperCode?shipperCode=' + $("#shipperIECNO").val(),
                    type: 'GET',
                    data: "",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#shipperIECNO").removeClass(); 
                        if (data == true) {
                            $("#shipperIECNO").addClass("form-control is-valid state-valid")
                        } else {
                            $("#shipperIECNO").addClass("form-control is-invalid state-invalid")
                        }
                    },
                    error: function () {
                        alert("error");
                    }
                });
        });

        $("#shipperName").on("blur", function () {

            $.ajax(
                {
                    url: '/Shipper/GetExisitingShipperName?shipperName=' + $("#shipperName").val(),
                    type: 'GET',
                    data: "",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#shipperName").removeClass(); 
                        if (data == true) {
                            $("#shipperName").addClass("form-control is-valid state-valid")
                        } else {
                            $("#shipperName").addClass("form-control is-invalid state-invalid")
                        }
                    },
                    error: function () {
                        alert("error");
                    }
                });
        });

        $("#shipperAddress").on("blur", function () {

            $.ajax(
                {
                    url: '/Shipper/ValidateAddress?shipperAddress=' + $("#shipperAddress").val(),
                    type: 'GET',
                    data: "",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#shipperAddress").removeClass(); 
                        if (data == true) {
                            $("#shipperAddress").addClass("form-control is-valid state-valid")
                        } else {
                            $("#shipperAddress").addClass("form-control is-invalid state-invalid")
                        }
                    },
                    error: function () {
                        alert("error");
                    }
                });
        });

        $("#clearValue").on("click", function () {
            document.getElementById("shipperIECNO").value = "";
            document.getElementById("shipperName").value = "";
            document.getElementById("shipperAddress").value = "";
            //document.getElementById("shipperCity").value = "";
            document.getElementById("contactPerson").value = "";
            document.getElementById("designation").value = "";
            document.getElementById("contactNo1").value = "";
            document.getElementById("contactNo2").value = "";
            document.getElementById("fax").value = "";
            document.getElementById("cellNO").value = "";
            document.getElementById("emailID").value = ""; 
            document.getElementById("remarks").value = "";
            document.getElementById("isActive").checked = true;
            $("#shipperIECNO").removeClass();
            $("#shipperName").removeClass();
            $("#shipperAddress").removeClass();

            $("#shipperIECNO").addClass("form-control");
            $("#shipperName").addClass("form-control");
            $("#shipperAddress").addClass("form-control"); 
        });

        $("#emailID").on("blur", function () {
            isEmail($("#emailID").val());

        });

        //var count1 = 0;
        //$("#contactNo1").on("blur", function () {
        //    if ($("#contactNo1").val() != "") {
        //        isNumber("#contactNo1", $("#contactNo1").val());
        //        count1 = 0
        //    } else {
        //        if (count1 == 0) {
        //            alert("Empty Contact No is not valid");
        //            count1++;
        //        }

        //    }

        //});


        //$("#contactNo2").on("blur", function () {
        //    if ($("#contactNo2").val() != "") {
        //        isNumber("#contactNo2", $("#contactNo2").val());
        //        count1 = 0
        //    } else {
        //        if (count1 == 0) {
        //            alert("Empty Contact No is not valid");
        //            count1++;
        //        }
        //    }
        //});


        //$("#cellNO").on("blur", function () {
        //    if ($("#cellNO").val() != "") {
        //        isNumber("#cellNO", $("#cellNO").val());
        //        count1 = 0
        //    } else {
        //        if (count1 == 0) {
        //            alert("Empty Contact No is not valid");
        //            count1++;
        //        }
        //    }

        //});


    });

    function numericOnly(element, e) {
        console.log(e.keyCode)
        // Allow: backspace, delete, tab, escape, enter and . - , ;
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190, 45, 44, 59, 189, 109, 188, 186]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            console.log(e.keyCode)
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }

    }

    function isEmail(email) {
        var regex = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;
        var res1 = regex.test(email);
        $("#emailID").removeClass();
        if (email == "") {
            alert('Please Enter Email Id!');
            $("#emailID").addClass("form-control is-invalid state-invalid")
            // document.getElementById('email').value = ""
            return false;
        }
        if (res1 == false) {
            alert('Please Enter valid Email Id!');
            $("#emailID").addClass("form-control is-invalid state-invalid")
            //  document.getElementById('Email').value = ""
            return res1;
        }
        else {
            
            $("#emailID").addClass("form-control is-valid state-valid")
        }
    }

    function isNumber(contactID, contactNO) { 
        var regex = /^(\+\d{1,3}[- ]?)?\d{10}$/;
        var res2 = regex.test(parseInt(contactNO));
        $(contactID).removeClass();
        if (contactNO == "") {
            $(contactID).addClass("form-control is-invalid state-invalid")
            alert('Please Enter valid Contact Number!');
        }
        if (res2 == false) {
            $(contactID).addClass("form-control is-invalid state-invalid")
            alert('Please Enter valid Contact Number!');
        }
        else {
            $(contactID).addClass("form-control is-valid state-valid")
        }
    }
</script>

