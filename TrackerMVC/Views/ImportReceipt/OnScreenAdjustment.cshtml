
@{
    ViewBag.Title = "OnScreenAdjustment";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="~/js/GetTableJson.js"></script>
@*<script src="~/UserScripts/ImportReceiptController.js"></script>*@
 
<style>

    .textbgstyle {
        background-color: #c6ade7;
        color: white;
        font-weight: 700;
    }
</style>
<style>

    .table thead th, .text-wrap table thead th {
        background-color: #9f78ff;
        color: white;
    }

    table.table-bordered.dataTable tbody th, table.table-bordered.dataTable tbody td {
        color: black;
        font-weight: 900 !important;
        font-size: 15px !important;
    }
</style>
<div id="tracker-loader"></div>
<div class=" content-area overflow-hidden" id="DivReceiptGenDet">

    <div class="page-header">
        <h4 class="page-title">On Screen Adjustment</h4>
        <div class="form-group">
            <label class="form-label"></label>
            <div class="row gutters-xs">
                <div class="col">
                    @* <button type="button" class="btn btn-icon btn-orange" name="gst" title="GST" id="gst"><i class="fa fa-google"></i></button>*@
                    @*<button type="button" class="btn btn-icon btn-info" title="Show Pending Invoice" id="aDivShowInvoice"><i class="fa fa-bars"></i></button>
                        <button class="btn btn-primarys __web-inspector-hide-shortcut__" type="button" id="aDivShow" data-toggle="modal" data-target="#exampleModal" title="Daily Collection"><i class="fa fa-rupee"></i></button>
                        <a href="@Url.Action("DirectAdjsutments", "ImportReceipt")" class="btn btn-icon btn-danger" target="_blank" title="Direct Adjustment"><i class="fa fa-arrow-right"></i></a>
                        <button type="button" class="btn btn-icon btn-teal" name="summarylist" title="Summary list" id="summarylist" onclick="ViewReceiptSummary();"><i class="fa fa-file-text"></i></button>*@
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "ReceiptForm" }))
    {
        <div class="row">
            <div class="col-md-12 col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">

                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Category</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlCategoryMode", new List<SelectListItem>
                                              {  new SelectListItem { Text = "All", Value = "ImportInvoice"},
                                                new SelectListItem { Text = "Import Invoice", Value = "ImportInvoice"},
                                                new SelectListItem { Text = "Bond Invoice", Value = "BondInvoice"},
                                                new SelectListItem { Text = "MNR Invoice", Value = "MNRInvoice"},
                                                new SelectListItem { Text = "Misc Invoice", Value = "MiscInvoice"},
                                                new SelectListItem { Text = "Export Invoice", Value = "ExportInvoice"},
                                                new SelectListItem { Text = "Domestic Invoice", Value = "DomesticInvoice"},
                                                new SelectListItem { Text = "All Location", Value = "All Location"},
                                                 new SelectListItem { Text = "Suspense", Value = "Suspense"},
                                                 new SelectListItem { Text = "Contra", Value = "Contra"},
                                                    new SelectListItem { Text = "Auction", Value = "AucInvoice"},
                                                }, new { @class = "form-control", autocomplete = "off", @id = "ddlCategoryMode" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Receipt Type</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlReceiptType", new List<SelectListItem>
                                              {
                                                new SelectListItem { Text = "On Account Receipt Adjustment", Value = "On Account Receipt Adjustment"}
                                                }, new { @class = "form-control", autocomplete = "off", @id = "ddlReceiptType" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divCustomerName">
                                <div class="form-group">
                                    <label class="form-label">TDS Year</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlTDSWorkyear", (IEnumerable<SelectListItem>)ViewBag.Workyear,  new { @class = "form-control", @id = "ddlTDSWorkyear", name = "ddlTDSWorkyear", autocomplete = "off" })
                                            @*@Html.DropDownListFor(model => model.WorkYear, (IEnumerable<SelectListItem>)ViewBag.Workyear, new { @class = "form-control", @id = "ddlTDSWorkyear", name = "ddlTDSWorkyear", autoComplete = "on" })*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="divsearchcerteria">

                            <div class="col-lg-6 col-sm-12" id="divCustomerName">
                                <div class="form-group">
                                    <label class="form-label">Customer Name</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input type="text" class="form-control" id="ddlCustomerName" />
                                            <input type="hidden" class="form-control" id="hdnCustomerName" />
                                            @*@Html.DropDownListFor(model => model.BillParty, (IEnumerable<SelectListItem>)ViewBag.Customer, "--Select--", new { @class = "form-control", @id = "ddlCustomerName", name = "ddlCustomerName", autoComplete = "on" })*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" style="display:none">
                                <div class="form-group">
                                    <label class="form-label">As On</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtFromDate", null, new { @class = "form-control form_datetime1", @Value = DateTime.Now.ToString("dd MMM yyyy 23:59") })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divShowButton">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" type="button" id="btnShowInvoice" name="Add" onclick="DisplayInvoiceList()">Show Invoice</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" style="visibility:hidden">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" type="button" id="btnAddAdjsutement" name="Add">adj Invoice</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="divpendingrececipt">
                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label">Pending Receipt</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <select id="ddlPendingReceipt" class="form-control">
                                                <option value="">--All--</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label">Receipt Amount</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtPendingReceiptAmount", null, new { @class = "form-control text-right", @id = "txtPendingReceiptAmount", @readonly = "true", autocomplete = "off", @Value = "0" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label">Receipt Balance Amount</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtBalanceAmount", null, new { @class = "form-control text-right", @id = "txtBalanceAmount", @readonly = "true", autocomplete = "off", @Value = "0" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label">Invoice No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <select id="ddlInvoiceNo" class="form-control">
                                                <option value="">--All--</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label">Invoice Amount</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtSelectedInvoiceAmount", null, new { @class = "form-control text-right", @id = "txtSelectedInvoiceAmount", @readonly = "true", autocomplete = "off", @Value = "0" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label"> Invoice Pending Amount</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtSelectedInvoicePendingAmount", null, new { @class = "form-control text-right", @id = "txtSelectedInvoicePendingAmount", @readonly = "true", autocomplete = "off", @Value = "0" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label"> TDS(-)</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtInvoiceTDSAmount", null, new { @class = "form-control text-right", @id = "txtInvoiceTDSAmount", @readonly = "true", autocomplete = "off", @Value = "0" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label"> Received Amount</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtReceivedAmount", null, new { @class = "form-control text-right", @id = "txtReceivedAmount", autocomplete = "off", @Value = "0", onchange = "NetRecivedCal();" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label"> Received TDS (-)</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtReceivedTDS", null, new { @class = "form-control text-right", @id = "txtReceivedTDS", autocomplete = "off", @Value = "0", onchange = "NetRecivedCal();" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divPendingReceipt">
                                <div class="form-group">
                                    <label class="form-label"> Net Received </label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtNetReceived", null, new { @class = "form-control text-right", @id = "txtNetReceived", @readonly = "true", autocomplete = "off", @Value = "0" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12" id="divShowButton">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" type="button" id="btnAdd" name="Add" onclick="AddDetails()">ADD</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="divInvoiceDetails">
                            <div class="row">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="table-responsive">
                                        <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblInvoiceList">
                                            <thead style="background-color: #8969eb;text-align: center;font-family: monospace;">
                                                <tr>

                                                    <th style="width:1px;color: white;">SrNo</th>
                                                    <th style="width:300px;color: white;">Customer Name</th>
                                                    <th style="width:1px;color: white;">Recipt Ref No</th>
                                                    <th style="width:80px;color: white;">Invoice No</th>
                                                    <th style="width:80px;color: white;text-align:right">Inv. Amount</th>
                                                    <th style="width:80px;color: white;text-align:right">Inv. TDS(-)</th>
                                                    <th style="width:80px;color: white;text-align:right">Inv. Pending Amount</th>

                                                    <th style="width:80px;color: white;text-align:right">Received Amt</th>
                                                    <th style="width:100px;color: white;text-align:right">TDS(-)</th>
                                                    <th style="width:100px;color: white;text-align:right">Net Received</th>
                                                    <th style="width:100px;color: white;text-align:right">CustID</th>
                                                    <th style="width:100px;color: white;text-align:right">Reference No</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Remarks</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtRemarks", null, new { @class = "form-control ", @id = "txtRemarks", autocomplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-lg-12">
                                &nbsp;
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-success" type="button" id="btnSave" name="Add" onclick="Save()">Save</button>&nbsp;
                                            @*<button class="btn btn-success" type="button" id="btnPrint" name="Add">Print</button>&nbsp;
                                                <button type="button" class="btn btn-icon btn-gray" name="clearProfile" title="clear" id="btnclearValue">Clear</button>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col" style="text-align:right;font-size:larger;visibility:hidden">
                                            <a href="#"><u>Click here to view today's receipts</u></a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }

</div>

<script>
    $(window).on("load", function (e) {
        $("#tracker-loader").fadeOut("slow");
    })
    function DisplayInvoiceList(type) {
        // alert("before")
        $("#tracker-loader").fadeIn("fast");

        var delayInMilliseconds = 1000; //1 second

        setTimeout(function () {
            for (i = 0; i < 100000; i++) {
                i = i + 0;
            }
            ShowSelectedValue(type);

        }, delayInMilliseconds);



    }
    $("#tracker-loader").fadeOut("slow");
    var DetailsData = [];
    var ReciptRefNo = "";
    $(function () {

        $('.datePicker1').datepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'dd M yyyy',
            language: "tr",
            changeMonth: true,
            changeYear: true

        })
            .on('changeDate', function (e) {

                $('.datepicker').hide();
            });
    });

        $("#ddlCustomerName").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: "/ImportReceipt/getPartyNameReceipt",
                data: "{ 'prefixText': '" + request.term + "','Mode': 'ImportInvoice'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //
                    response($.map(data, function (item) {
                        //
                        return {
                            label: item.AGName,
                            val: item.AGID
                        };
                    }))
                },
                error: function (response) {
                    alert(response.responseText);
                },
                failure: function (response) {
                    alert(response.responseText);
                }
            })
        },
        select: function (e, i) {
            //
            $("#txtAutoCust").val(i.item.label);
            $("#hdnCustomerName").val(i.item.val);
        },
        minLength: 1
        });


    function BindPendinReceipt() {
        var hdnPayFromId = $('#hdnCustomerName').val();
        var TotalReceiptAmount = 0;
        var TotalTDSAmount = 0;
        var Category = "All";
        var ason = $("#txtFromDate").val();
        var partyfullname = ""

        var data1 = { 'hdnPayFromId': hdnPayFromId, 'ason': ason, 'Category': Category, 'partyfullname': partyfullname };
        data = JSON.stringify(data1);
 

    $.ajax({
        url: '/ImportReceipt/getPendingRect',
        type: 'Post',
        data: data,
        async: false,
        contentType: 'application/json; charset=utf-8',
        success: function (response) {

            $("#ddlPendingReceipt").empty();
            $("#ddlPendingReceipt").append($("<option></option>").val('').html('--Select--'));
            $.each(response, function (index, value) {

                var ReceiptAmtNo = value.InvoiceNo +'~'+ value.ReceiptRefNo + '~' + value.TotalAmount;
                $("#ddlPendingReceipt").append($("<option></option>").val(ReceiptAmtNo).html(value.InvoiceNo));
            });
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
            $("#tracker-loader").fadeOut("slow");
        }
    });

    }

    $("#ddlPendingReceipt").change(function () {
        ShowPendingAmount();
    });

function ShowPendingAmount() {
    debugger;
    var splitItem = $("#ddlPendingReceipt").children("option:selected").val();
    var SplitAmount = "";
    var Amount = 0;
    SplitAmount = splitItem.split('~');
    ReciptRefNo = SplitAmount[0];
    Amount = SplitAmount[1];
    PenidAmount = SplitAmount[2];
    
    if (Amount == "" || Amount == null) {
        Amount = 0;
    }

   
        $("#txtPendingReceiptAmount").val(parseInt(Amount));
    $("#txtBalanceAmount").val(parseInt(PenidAmount));

       
     

}

    //ImportReceiptCtrl.ShowAdjstInvoiceButton.click(function () {
    //    //if (Validation(ImportReceiptCtrl) == false) {
    //    //    return;
    //    //};
    //    $("#tracker-loader").fadeIn("slow");
    //    DisplayInvoiceList(ImportReceiptCtrl);
    //    //DisplayAdjstInvoiceList(ImportReceiptCtrl);
    //});

    function ShowSelectedValue() {
    var hdnPayFromId = $('#hdnCustomerName').val();
    var TotalReceiptAmount = 0;
    var TotalTDSAmount = 0;
    var Category = "All";
    var ason = $("#txtFromDate").val();
    var partyfullname = ""
   
    var data1 = { 'hdnPayFromId': hdnPayFromId, 'ason': ason, 'Category': Category, 'partyfullname': partyfullname };
    data = JSON.stringify(data1);

    $.ajax({
        url: '/ImportReceipt/getPendingInvoice',
        type: 'Post',
        data: data,
        async: false,
        contentType: 'application/json; charset=utf-8',
        success: function (data) {

            if (data.length == 0 || data == '[]') {
                ControlCtrl.InvoiceList.empty();
                InitializeTable(ControlCtrl);
                alert('Data Not Found.');
                return;
            }
            else {
                //$("#ddlPendingReceipt").empty();
                //$("#ddlPendingReceipt").append($("<option></option>").val('').html('--Select--'));
                //$.each(response, function (index, value) {
                //
                //    var ReceiptAmtNo = value.ReceiptNo + '~' + value.TotalAmount;
                //    $("#ddlPendingReceipt").append($("<option></option>").val(ReceiptAmtNo).html(value.ReceiptRefNo));
                //});
                $("#ddlInvoiceNo").empty();
                $("#ddlInvoiceNo").append($("<option></option>").val('').html('--Select--'));
                $.each(data, function (index, value) {

                    var InvoiceDetails = value.InvoiceNo + '~' + value.NetAmount + '~' + value.TotalAmount;
                    $("#ddlInvoiceNo").append($("<option></option>").val(InvoiceDetails).html(value.InvoiceNo));
                });

            }
            $("#tracker-loader").fadeOut("slow");
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
            $("#tracker-loader").fadeOut("slow");
        }
    });
    $("#tracker-loader").fadeOut("slow");

    //ControlCtrl.ReceiptAmount.val(TotalReceiptAmount);
     $("#txtReceiptAmount").val(TotalReceiptAmount);
    $("#txtSelectedInvoiceAmount").val(TotalReceiptAmount);
    $("#txtInvoiceTDSAmount").val(TotalTDSAmount);
    //ControlCtrl.TDS.val(TotalTDSAmount);
    //CalculateAutoTDSAmount(ControlCtrl);
    BindPendinReceipt(hdnPayFromId);
    };

    $("#ddlInvoiceNo").change(function () {
        ShowPendingInvoiceAmount();
    });

    function ShowPendingInvoiceAmount() {
        debugger;
    var splitItem = $("#ddlInvoiceNo").children("option:selected").val();
    var SplitAmount = "";
    var InvoiceAmount = 0;
    var ReceivalAmount = 0;
    var TDS = 0;

    var Amount = 0;
    SplitAmount = splitItem.split('~');
        InvoiceNo = SplitAmount[0];
        InvoiceAmount = SplitAmount[1];
        TotalAmount = SplitAmount[2];

        if (InvoiceAmount == "" || InvoiceAmount == null) {
            InvoiceAmount = 0;
        }
        if (ReceivalAmount == "" || ReceivalAmount == null) {
            ReceivalAmount = 0;
        }
        if (TDS == "" || TDS == null) {
            TDS = 0;
        }

    if (parseInt(InvoiceAmount) > 0) {
        $("#txtSelectedInvoiceAmount").val(parseInt(InvoiceAmount));
        $("#txtSelectedInvoicePendingAmount").val(parseInt(TotalAmount));
    }
    else {
        $("#txtSelectedInvoiceAmount").val(0);
        $("#txtSelectedInvoicePendingAmount").val(0);
    }

    //    if (parseInt(ReceivalAmount) > 0) {
    //    $("#txtBalanceAmount").val(parseInt(ReceivalAmount));
    //}
    //else {
    //    $("#txtBalanceAmount").val(0);
    //    }

        if (parseInt(TDS) > 0) {
        $("#txtInvoiceTDSAmount").val(parseInt(TDS));
    }
    else {
        $("#txtInvoiceTDSAmount").val(0);
    }

    }
    function NetRecivedCal() {
        debugger;
            var ReceivedAmount = $("#txtReceivedAmount").val();
            var ReceivedTDSAmount = $("#txtReceivedTDS").val();
            var NetReceivedAmount = 0;
            if (ReceivedAmount == undefined || ReceivedAmount == "" || ReceivedAmount == null) {
                ReceivedAmount = 0;
            } else {
                ReceivedAmount = parseFloat(ReceivedAmount);
            }
            if (ReceivedTDSAmount == undefined || ReceivedTDSAmount == "" || ReceivedTDSAmount == null) {
                ReceivedTDSAmount = 0;
            } else {
                ReceivedTDSAmount = parseFloat(ReceivedTDSAmount);
            }
            //to set net received
            NetReceivedAmount = ReceivedAmount - ReceivedTDSAmount;
            $("#txtNetReceived").val(NetReceivedAmount);

            //to set pending Invoice Amount

             var ReciptAmount = $("#txtPendingReceiptAmount").val();
             var InvoiceAmount = $("#txtSelectedInvoiceAmount").val();
             var InvoiceNo = $("#ddlInvoiceNo").children("option:selected").text();
            var PendingInvoiceAmount = 0;
            var BalanceReceiptAmount = 0;
            ReciptAmount = parseFloat(ReciptAmount);
            InvoiceAmount = parseFloat(InvoiceAmount);

            var OverallReciptPendingAmount = 0;

            for (i = 0; i < DetailsData.length; i++) {
                if (ReciptRefNo == DetailsData[i].ReciptRefNo) {
                    OverallReciptPendingAmount = OverallReciptPendingAmount + parseFloat(DetailsData[i].ReceivedAmount);
                }

            }
            //for (i = 0; i < DetailsData.length; i++) {
            //    if (InvoiceNo == DetailsData[i].InvoiceNo) {
            //        alert("Invoice No already exist ..");
            //        return false;
            //    }
            //}



            BalanceReceiptAmount = ReciptAmount -  (NetReceivedAmount- OverallReciptPendingAmount);
            PendingInvoiceAmount = InvoiceAmount - (NetReceivedAmount- OverallReciptPendingAmount);

            $("#txtBalanceAmount").val(BalanceReceiptAmount);
            $("#txtSelectedInvoicePendingAmount").val(PendingInvoiceAmount);

            if (NetReceivedAmount > ReciptAmount) {
                alert("Net Received amount can not be grater than Receipt Balance Amount");
                $("#txtNetReceived").val(0);
                $("#txtReceivedAmount").val(0);
                $("#txtBalanceAmount").val($("#txtPendingReceiptAmount").val());
                $("#txtSelectedInvoicePendingAmount").val($("#txtSelectedInvoiceAmount").val())

            } else if (NetReceivedAmount>InvoiceAmount){
                alert("Net Received amount can not be grater than Invoice Amount");
                 $("#txtNetReceived").val(0);
                 $("#txtReceivedAmount").val(0);
                $("#txtBalanceAmount").val($("#txtPendingReceiptAmount").val());

            }


        }

    function AddDetails() {
        debugger;
        var ReceiptAmt = 0;
        var CustomerName = $("#ddlCustomerName").val();
        var CustomerID = $("#hdnCustomerName").val();
        //ReciptRefNo
        var ReceiptAmount = $("#txtPendingReceiptAmount").val();
        var InvoiceNo = $("#ddlInvoiceNo").children("option:selected").text();
        var InvoiceTDSAmount = $("#txtInvoiceTDSAmount").val();
        var InvoiceAmount = $("#txtSelectedInvoiceAmount").val();
        var InvoicePendingAmount = $("#txtSelectedInvoicePendingAmount").val();
        var ReceivedAmount = $("#txtReceivedAmount").val();
        var ReceivedTDS = $("#txtReceivedTDS").val();
        var NetReceived = $("#txtNetReceived").val();
        
        var PendingReceipt = $("#ddlPendingReceipt").children("option:selected").text();
        
        if (CustomerID == 0 || CustomerID == undefined || CustomerID == null || CustomerID == "") {
            alert("please select customer ..");
            return false;
        }
        if (InvoiceNo == 0 || InvoiceNo == undefined || InvoiceNo == null || InvoiceNo == "") {
            alert("please select invoice no ..");
             return false;
        }
        if ( InvoiceTDSAmount == undefined || InvoiceTDSAmount == null || InvoiceTDSAmount == "") {
            InvoiceTDSAmoun =0;
        }
        if (ReceivedAmount == 0 || ReceivedAmount == undefined || ReceivedAmount == null || ReceivedAmount == "") {
            alert("please set valid Received Amount ..");
             return false;
        }
        if (ReceivedTDS == NaN || ReceivedTDS == undefined || ReceivedTDS == null || ReceivedTDS == "") {
            alert("please set TDS valid Amount ..");
             return false;
        }
        if (NetReceived == 0 || NetReceived == undefined || NetReceived == null || NetReceived == "") {
            alert("please set valid");
             return false;
        }

        var element = {};
        element.CustomerName = CustomerName;
        element.CustomerID = CustomerID;
        element.ReciptRefNo = ReciptRefNo;
        element.ReceiptAmount = ReceiptAmount;
        element.InvoiceNo = InvoiceNo;
        element.InvoiceAmount = InvoiceAmount;
        element.InvoicePendingAmount = InvoicePendingAmount;
        element.InvoiceTDSAmount = InvoiceTDSAmount;
        element.ReceivedAmount = ReceivedAmount;
        element.ReceivedTDS = ReceivedTDS;
        element.NetReceived = NetReceived;
        element.PendingReceipt = PendingReceipt;
        DetailsData.push(element);
 
        var table = document.getElementById("tblInvoiceList");
        var Amount = $("#txtPendingReceiptAmount").val();
        var BalanceAmount = $("#txtReceivedAmount").val();
        if (table != null) {
            if (table.rows.length > 1) {
                for (var i = 1; i < table.rows.length; i++) {
                    row = table.rows[i];
                    var InvoiceNo = "";
                   
                    var  Amt = 0;
                    var InvoiceNo = row.cells[3].innerHTML;;
                    var ReceivalAmount = row.cells[7].innerHTML;
                   
                    if (InvoiceNo == $("#ddlInvoiceNo option:selected").text()  ) {
                        ReceiptAmt = parseFloat(ReceiptAmt) + parseFloat(ReceivalAmount);
                           
                       
                      
                    }
                    
                }
            }
        } 
        ReceiptAmt = parseFloat(ReceiptAmt) + parseFloat(BalanceAmount)
        if (parseFloat(ReceiptAmt) > parseFloat(Amount)) {
            alert("Invoice No already exist ..");
            return false;
        }
        BindDetailsData();
        //$('#btnSave').attr("disabled", true);

        //    var data = { 'VDData': VDData  , 'VDElements': SelectedItem , 'Attachment':MasterAttachment,'UDFData':ExpensesHeadUDFArray}

        //    data = JSON.stringify(data);


    }

    function BindDetailsData() {
        var SrNo = 0;
        for (i = 0; i < DetailsData.length; i++) {
            SrNo = SrNo + 1;
            DetailsData[i].SrNo = SrNo;
        }

        $("#tracker-loader").fadeIn("slow");

            $('#tblInvoiceList').dataTable({
                "destroy": true,
                "bLengthChange": false,
                "bInfo": false,
                "bPaginate": false,
                "bFilter": true,
                "aaSorting": [],
                "order": [],
                "aoColumnDefs": [
                    {
                        'bSortable': false,
                        'aTargets': [0]
                    }

                ],

                "aaData": DetailsData,
                "columns": [

                    { "data": "SrNo" },
                    { "data": "CustomerName" },
                    { "data": "ReciptRefNo" },
                    { "data": "InvoiceNo" },
                    { "data": "InvoiceAmount" },
                    { "data": "InvoiceTDSAmount" },
                    { "data": "InvoicePendingAmount" },

                    { "data": "ReceivedAmount" },
                    { "data": "ReceivedTDS" },
                    { "data": "NetReceived" },
                    { "data": "CustomerID" },
                     { "data": "PendingReceipt" }
                ],


            })

        $("#tracker-loader").fadeOut("slow");
    }
    function Save() {
        debugger;
        var checkboxarray = [];
        var tablearray = [];
        var TDSWorkyear = $("#ddlTDSWorkyear").val();
        //=========================Invoice Details List for Save Data Into DataBase================
        var table = document.getElementById("tblInvoiceList");
        $('input[type=checkbox]').each(function () {
            if (this.checked) {
                checkboxarray.push($(this).val());
            }
        });

        for (var i = 1; i < table.rows.length; i++) {

            row = table.rows[i];

      
            var InvoiceNo = row.cells[3].innerHTML;
                //debugger;
                 
                    var ReciptNo = row.cells[2].innerHTML;
                    var InvoiceNo = row.cells[3].innerHTML;;
               
                    var InvoiceAmount = row.cells[4].innerHTML;
                    var TDS = row.cells[5].innerHTML;
                 
                   
                  
                    var ReceivedAmountTDS = row.cells[8].innerHTML;
                    if (ReceivedAmountTDS) {
                        var PrevReceiptAmount = row.cells[6].innerHTML;
                        var ReceivalAmount = row.cells[7].innerHTML;
                    } else {
                        var PrevReceiptAmountT = row.cells[6].innerHTML;
                        var PrevReceiptAmount = parseFloat(PrevReceiptAmountT) + parseFloat(ReceivedAmountTDS)
                        var ReceivalAmountT = row.cells[7].innerHTML;
                        var PrevReceiptAmount = parseFloat(ReceivalAmountT) + parseFloat(ReceivedAmountTDS)
                    }
              
                 
                    var NetReceivedAmount = row.cells[9].innerHTML;
                    var CustID = row.cells[10].innerHTML;
                    var PendingReceipt = row.cells[11].innerHTML;
                    tablearray.push({
                        'ReciptNo': ReciptNo,   'InvoiceNo': InvoiceNo, 'InvoiceAmount': InvoiceAmount, 'TDS': TDS,
                        'PrevReceiptAmount': PrevReceiptAmount, 'ReceivalAmount': ReceivalAmount, 'ReceivedAmountTDS': ReceivedAmountTDS,
                        'NetReceivedAmount': NetReceivedAmount, 'CustID': CustID, 'PendingReceipt': PendingReceipt
                    })
            
          


        };
        var data1 = { 'Direct': tablearray, 'TDSWorkyear': TDSWorkyear }
        var data = JSON.stringify(data1);
 
         $.ajax({
             url: "/Importreceipt/SaveOnAdjsuments",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                swal({
                    title: JSON.stringify(data),

                    type: "warning",
                    showCancelButton: false,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Ok",
                    closeOnConfirm: false

                });

                return false;
                document.location = '@Url.Action("OnScreenAdjustment", "importreceipt")'
            },
             error: function (error) {
                 let str = error.responseText;
                 var a = str.indexOf("<title>") + 7;
                 var b = str.indexOf("</title>");
                 str = str.substring(a, b);
                 alert("Something went wrong: " + str);
             }
        });

    }
  
</script>


