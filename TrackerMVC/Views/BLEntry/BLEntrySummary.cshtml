@model TrackerMVCEntities.BusinessEntities.JobOrderMEntities

@{
    ViewBag.Title = "BLEntrySummary";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
<script src="~/js/GetTableJson.js"></script>
<link href="~/css/NewCHAProfile.css" rel="stylesheet" />
<script src="~/js/validation.js"></script>
<style>
    .dropdown-disable {
        cursor: not-allowed;
        pointer-events: none;
        /*Button disabled - CSS color class*/
        color: #6b6f80;
        background-color: #fff;
        opacity: 0.65;
    }
</style>
@* For waiting event *@
<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
                        top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
                        opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 50%; left: 45%; color: White;">
        <div class="global-loader1">

        </div>
    </p>
</div>
@* end waiting event *@
<div class=" content-area" id="divSummary">
    <div class="page-header">
        <h4 class="page-title">Bl Entry Summary</h4>
        <div class="ibox-content text-right">
            <a onclick="AddBL();" class="btn btn-primary btn-success text-right" style="align-content:center;color:white"><i class="fa fa-plus" data-placement="bottom" title="Generate Job Order"></i> </a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Search Criteria</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlSearchCriteria", new List<SelectListItem>
                                         { new SelectListItem { Text = "--Select--", Value = ""},
                                             new SelectListItem { Text = "Customer", Value = "Customer"},
                                             new SelectListItem { Text = "Shipping Line", Value = "ShippingLine"},
                                           new SelectListItem { Text = "Shipper", Value = "shipper"},
                                           new SelectListItem { Text = "Consignee", Value = "Consignee"},
                                           new SelectListItem { Text = "CHA", Value = "CHA"},
                                           new SelectListItem { Text = "Marketing Person", Value = "SalesPerson"},
                                           new SelectListItem { Text = "BL Number", Value = "BL"},


                                           }, new { @class = "form-control", autocomplete = "off", @id = "ddlSearchCriteria" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-sm-12" style="display:none" id="divBL">
                                <div class="form-group">
                                    <label class="form-label"> BL Number</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.Editor("txtSearchBL", new { htmlAttributes = new { @class = "form-control", @id = "txtSearchBL" } })


                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-sm-12" style="display:none" id="divCustomer">
                                <div class="form-group">
                                    <label class="form-label"> Customer</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @* @Html.DropDownListFor(model => model.Size, (IEnumerable<SelectListItem>)ViewBag.ContainerSize, "--Select--", new { @class = "form-control", @id = "ddlSize", name = "Size", onblur = "myRequiredValidation('ddlSize')" })*@
                                            @Html.DropDownList("ddlCustomerList",
                                                                      (IEnumerable<SelectListItem>)ViewBag.Customer,
                                                             "--Select--",
                                                    new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-sm-12" style="display:none" id="divShipLines">
                                <div class="form-group">
                                    <label class="form-label"> Shipping Line</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @* @Html.DropDownListFor(model => model.Size, (IEnumerable<SelectListItem>)ViewBag.ContainerSize, "--Select--", new { @class = "form-control", @id = "ddlSize", name = "Size", onblur = "myRequiredValidation('ddlSize')" })*@
                                            @Html.DropDownList("ddlShipLinesList",
                                                                               (IEnumerable<SelectListItem>)ViewBag.ShipLines,
                                                             "--Select--",
                                                    new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-sm-12" style="display:none" id="divShippers">
                                <div class="form-group">
                                    <label class="form-label"> Shipper</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @* @Html.DropDownListFor(model => model.Size, (IEnumerable<SelectListItem>)ViewBag.ContainerSize, "--Select--", new { @class = "form-control", @id = "ddlSize", name = "Size", onblur = "myRequiredValidation('ddlSize')" })*@
                                            @Html.DropDownList("ddlShipperList",
                                                                               (IEnumerable<SelectListItem>)ViewBag.Shippers,
                                                             "--Select--",
                                                    new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-sm-12" style="display:none" id="divConsignee">
                                <div class="form-group">
                                    <label class="form-label"> Consignee</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @* @Html.DropDownListFor(model => model.Size, (IEnumerable<SelectListItem>)ViewBag.ContainerSize, "--Select--", new { @class = "form-control", @id = "ddlSize", name = "Size", onblur = "myRequiredValidation('ddlSize')" })*@
                                            @Html.DropDownList("ddlConsigneeList",
                                                                                        (IEnumerable<SelectListItem>)ViewBag.Consignee,
                                                             "--Select--",
                                                    new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-sm-12" style="display:none" id="divCHA">
                                <div class="form-group">
                                    <label class="form-label"> CHA</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @* @Html.DropDownListFor(model => model.Size, (IEnumerable<SelectListItem>)ViewBag.ContainerSize, "--Select--", new { @class = "form-control", @id = "ddlSize", name = "Size", onblur = "myRequiredValidation('ddlSize')" })*@
                                            @Html.DropDownList("ddlCHAList",
                                                                                        (IEnumerable<SelectListItem>)ViewBag.CHA,
                                                             "--Select--",
                                                    new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-sm-12" style="display:none" id="divSalesPerson">
                                <div class="form-group">
                                    <label class="form-label"> Marketing Person</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @* @Html.DropDownListFor(model => model.Size, (IEnumerable<SelectListItem>)ViewBag.ContainerSize, "--Select--", new { @class = "form-control", @id = "ddlSize", name = "Size", onblur = "myRequiredValidation('ddlSize')" })*@
                                            @Html.DropDownList("ddlSalesPersonMList",
                                                                                        (IEnumerable<SelectListItem>)ViewBag.SalesPersonM,
                                                             "--Select--",
                                                    new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-1 col-sm-12 " id="divShowButton" style="display:none">
                                <div class="form-group">
                                    <label class="form-label " style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input type="button" id="btnShow1" name="login" value="Show" class="btn btn-primary btnShow" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden">Is Date</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <div class="custom-controls-stacked">
                                                <label class="custom-control custom-checkbox">

                                                    @Html.CheckBox("IsDate", new { @id = "chkIsWithDate", @class = "custom-control-input", onchange = "OnChangeDate(this)", @checked = "checked" })
                                                    <span class="custom-control-label">Include Date Criteria</span>
                                                </label>
                                            </div>
                                            @*  @Html.CheckBoxFor(m => m.IsContract, new { @id = "isContract", @class = "custom-control-input" }) Is Contractual?*@
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-5 col-sm-12" id="divDate" style="display:block">
                                <div class="row">
                                    <div class="col-lg-6 col-sm-12">
                                        <div class="form-group">
                                            <label class="form-label">JO From Date</label>
                                            <div class="row gutters-xs">
                                                <div class="col">
                                                    @Html.TextBox("FromDate", null, new { @class = "form-control form_datetime1", @Value = ViewBag.FromDate })

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-sm-12">
                                        <div class="form-group">
                                            <label class="form-label">JO To Date</label>
                                            <div class="row gutters-xs">
                                                <div class="col">
                                                    @Html.TextBox("ToDate", null, new { @class = "form-control form_datetime1", @Value = DateTime.Now.ToString("dd MMM yyyy 23:59") })


                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                            <div class="col-lg-1 col-sm-12" id="divShowButton1" style="display:block">
                                <div class="form-group">
                                    <label class="form-label " style="visibility:hidden">.</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input type="button" id="btnShow" name="login" value="Show" class="btn btn-primary btnShow" />
                                        </div>
                                    </div>
                                </div>
                            </div>


                        </div>

                        <div class="row">
                            <div class="col-md-12 col-lg-12">
                                <div class="table-responsive">
                                    <table id="example" class="table table-striped table-bordered" style="width:100%">
                                        <thead>
                                            <tr>
                                                <th class="wd-15p">JO No</th>
                                                <th class="wd-10p ">JO Date</th>
                                                <th class="wd-20p">Port Name</th>
                                                <th class="wd-20p">Line Name</th>
                                                <th class="wd-15p">VIA Number</th>
                                                <th class="wd-25p">Berthing Date</th>
                                                <th class="wd-25p">TEUS</th>
                                                <th class="wd-25p">Marketing Person</th>
                                                <th class="wd-25p">Added By</th>
                                                <th style="visibility:hidden"></th>
                                                <th style="visibility:hidden"></th>
                                                <th style="visibility:hidden"></th>
                                                <th style="visibility:hidden"></th>
                                                <th style="visibility:hidden"></th>

                                            </tr>
                                        </thead>

                                    </table>


                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=" content-area" id="divBLForm" style="display:none">
    <div class="page-header">
        <h4 class="page-title">BL Entry</h4>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a onclick="getBack();" class="btn btn-primary btn-success" style="color:white;align-content:center;"><i class="fa fa-arrow-left" data-placement="bottom" title="Back"></i>  </a></li>

        </ol>
    </div>
    @*@using (Html.BeginForm("BL", "GenerateBL", FormMethod.Post))*@
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "BLEntry" }))
    {
        @*@Html.AntiForgeryToken()*@
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="form-horizontal">
                            <div class="row">
                                @*<input size="16" type="text" value="2012-06-15 14:45" readonly class="form_datetime1">*@
                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">JO No</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.EditorFor(model => model.JONo, new { htmlAttributes = new { @class = "form-control Number", @id = "JONo", @readonly = "Readonly", Placeholder = "NEW" } })

                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">JO Date</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.EditorFor(model => model.JODate, new { htmlAttributes = new { @class = "form-control", @id = "JODate", @readonly = "readonly", @Value = DateTime.Now.ToString("dd MMM yyyy") } })
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label" style="visibility:hidden">.</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                <a href="#" onclick="AddAttachment()">
                                                    <i class="fa fa-paperclip fa-2x	" style="color:#6c4cbb" aria-hidden="true"></i>
                                                    <span class="custom-switch-description" style="font-size:17px;color:#6c4cbb"><b><label id="lblCount">0</label></b></span>
                                                </a>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Customer</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @* @Html.EditorFor(model => model.AgentID, new { htmlAttributes = new { @class = "form-control", @id = "AgentID" } })*@
                                                @Html.DropDownListFor(model => model.AgentID, (IEnumerable<SelectListItem>)ViewBag.Customer, "--Select--", new { @class = "form-control", @id = "ddlAgent", name = "AgentID", onblur = "myRequiredValidation('ddlAgent')", autoComplete = "on" })

                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Shipping Line</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @* @Html.EditorFor(model => model.shipperid, new { htmlAttributes = new { @class = "form-control Number", @id = "shipperid" } })*@
                                                @Html.DropDownListFor(model => model.SLID, (IEnumerable<SelectListItem>)ViewBag.ShipLines, "--Select--", new { @class = "form-control", @id = "ddlShippinLine", name = "SLID", onblur = "myRequiredValidation('ddlShippinLine')" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Via No</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @* @Html.EditorFor(model => model.AgentID, new { htmlAttributes = new { @class = "form-control", @id = "AgentID" } })*@
                                                @Html.EditorFor(model => model.ViaNo, new { htmlAttributes = new { @class = "form-control", @id = "txtViaNo" } })
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Remarks</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @* @Html.EditorFor(model => model.AgentID, new { htmlAttributes = new { @class = "form-control", @id = "AgentID" } })*@
                                                @Html.EditorFor(model => model.JoRemarks, new { htmlAttributes = new { @class = "form-control", @id = "txtJoRemarks" } })
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Importer Name</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.Importerid, (IEnumerable<SelectListItem>)ViewBag.Consignee, "--Select--", new { @class = "form-control", @id = "ddlImportName", name = "IMPId", onblur = "myRequiredValidation('ddlImportName')" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Vessel Name</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.VesselID, (IEnumerable<SelectListItem>)ViewBag.Vessel, "--Select--", new { @class = "form-control ", @id = "ddlVessel", name = "VesselID", onblur = "myRequiredValidation('ddlVessel')" })
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                @*</div>
                                    <div class="row">*@

                                @*</div>
                                    <div class="row">*@
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Port Name</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.PortID, (IEnumerable<SelectListItem>)ViewBag.Ports, "--Select--", new { @class = "form-control", @id = "ddlPort", name = "PortID" })

                                            </div>

                                        </div>
                                    </div>
                                </div>
                                @*</div>
                                    <div class="row">*@
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Berthing Date and Time</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.EditorFor(model => model.berthingdate, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "txtBerthingDate" } })
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Haulage Type</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.Haulage_Type_Id, (IEnumerable<SelectListItem>)ViewBag.Haulage, "--Select--", new { @class = "form-control", @id = "ddlHaulage", name = "Haulage_Type_Id", onblur = "myRequiredValidation('ddlHaulage')" })

                                            </div>

                                        </div>
                                    </div>
                                </div>
                                @*</div>
                                    <div class="row">*@
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">IGM File Status</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.File_Status_Id, (IEnumerable<SelectListItem>)ViewBag.IGMFileStatus, "--Select--", new { @class = "form-control", @id = "ddlIGM", name = "Haulage_Type_Id", onblur = "myRequiredValidation('ddlIGM')" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @*</div>
                                    <div class="row">*@
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Transport Type</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.Transport_Type_Id, (IEnumerable<SelectListItem>)ViewBag.Transport, "--Select--", new { @class = "form-control", @id = "ddlTransport", name = "Transport_Type_Id", onblur = "myRequiredValidation('ddlTransport')" })
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                @*</div>
                                    <div class="row">*@
                            </div>
                            <div class="row">
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Marketing Person</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.Sales_Person_Id, (IEnumerable<SelectListItem>)ViewBag.SalesPersonM, "--Select--", new { @class = "form-control", @id = "ddlSalesPerson", name = "ddlSalesPerson", onblur = "myRequiredValidation('ddlSalesPerson')" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Key Account Manager</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.KAMID, (IEnumerable<SelectListItem>)ViewBag.KAM, "--Select--", new { @class = "form-control", @id = "ddlKAM", name = "ddlKAM", onblur = "myRequiredValidation('ddlKAM')" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">IGM No</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.EditorFor(model => model.IGMNo, new { htmlAttributes = new { @class = "form-control", @id = "txtIGMNo", @readonly = "Readonly" } })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">BL Number</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.EditorFor(model => model.BLNumber, new { htmlAttributes = new { @class = "form-control ", @id = "txtBLnumber", autocomplete = "off", @maxlength = "25", @placeholder = "" } })
                                                @*@Html.TextBox("txtBLnumber", null, new { @class = "form-control ", @id = "txtBLnumber", autocomplete = "off", @maxlength = "25", @placeholder = "" })*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">BL Date</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.EditorFor(model => model.BLReceivedDate, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "txtBlDate", autocomplete = "off", @placeholder = "" } })
                                                @*@Html.TextBox("txtBlDate", null, new { @class = "form-control form_datetime1", @id = "txtBlDate", autocomplete = "off", @placeholder = "" })*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">HBL Number</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.EditorFor(model => model.HouseBLNumber, new { htmlAttributes = new { @class = "form-control", @id = "txtHBLNumber", autocomplete = "off", @maxlength = "25", @placeholder = "" } })
                                                @*@Html.TextBox("txtHBLNumber", null, new { @class = "form-control ", @id = "txtHBLNumber", autocomplete = "off", @maxlength = "25", @placeholder = "" })*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="background-color:#f4f5fa !important;font-size:24px">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="form-group">
                                        <label>Container Details</label>

                                    </div>
                                </div>
                            </div>
                            <div class="row" style="background-color:#f4f5fa !important" id="divContainerData">

                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Container No</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.EditorFor(model => model.ContainerNo, new { htmlAttributes = new { @class = "form-control", @id = "ContainerNo", maxlength = 11 } })
                                                @* onblur = "myRequiredTextValidation('ContainerNo')" *@
                                                <input id="hdnFileCount" type="hidden" />
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label"> Size</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.Size, (IEnumerable<SelectListItem>)ViewBag.ContainerSize, "--Select--", new { @class = "form-control", @id = "ddlSize", name = "Size", onblur = "myRequiredValidation('ddlSize')" })

                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-1 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">FCL/LCL</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @*@Html.EditorFor(model => model.FL, new { htmlAttributes = new { @class = "form-control", @id = "FL" } })*@
                                                @Html.DropDownListFor(model => model.FL, new List<SelectListItem>
                                           {  new SelectListItem { Text = "FCL", Value = "1"},
                                           new SelectListItem { Text = "LCL", Value = "2"},


                                           }, new { @class = "form-control", autocomplete = "off", @id = "ddlFL", onblur = "myRequiredValidation('ddlFL')" })

                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-1 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">ISO Code</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.ISOCode, (IEnumerable<SelectListItem>)ViewBag.ISOCodes, "--Select--", new { @class = "form-control", @id = "ddlISOCode", name = "ISOCode", onblur = "myRequiredValidation('ddlISOCode')" })

                                            </div>

                                        </div>
                                    </div>
                                </div>
                                @*</div>
                                    <div class="row">*@
                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Cargo Type</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.Cargotypeid, (IEnumerable<SelectListItem>)ViewBag.CargoType, "--Select--", new { @class = "form-control", @id = "ddlCargotype", name = "Cargotypeid", onblur = "myRequiredValidation('ddlCargotype')" })


                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">Commodity Group</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.Commodity_group_id, (IEnumerable<SelectListItem>)ViewBag.CommodityGroup, "--Select--", new { @class = "form-control", @id = "ddlCommodity_group", name = "Commodity_group_id", onblur = "myRequiredValidation('ddlCommodity_group')" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-1 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">JO Type</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.JoTypeId, (IEnumerable<SelectListItem>)ViewBag.JoTypes, "--Select--", new { @class = "form-control", @id = "ddlJoType", name = "Jo_Type_id", onblur = "myRequiredValidation('ddlJoType')" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-1 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">.</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                <input type="button" id="Add" name="Add" value="Add" onclick="ShowContainerList()" class="btn btn-primary" />

                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row" style="background-color:#f4f5fa !important;" id="divimportfile">
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">File Type</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                @Html.DropDownListFor(model => model.FileTypeId, (IEnumerable<SelectListItem>)ViewBag.IgmFileType, "--Select--", new { @class = "form-control", @id = "ddlFileType", name = "ddlFileType", onblur = "myRequiredValidation('ddlFileType')" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">.</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                <input type="file" class="file-path validate" id="fileImport" name="postedFile" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-1 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">.</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                <input type="Button" id="btnImport" value="Import" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">.</label>
                                        <div class="row gutters-xs">
                                            <div class="col" id="divIgmErrorShow" style="visibility:hidden">
                                                @Html.ActionLink("Error Generate", "ExportToExcelIgmError", null, new { @class = "btn btn-danger btn-md" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-sm-12">
                                    <div class="form-group">
                                        @Html.ActionLink("Download Excel Template", "ExportToFormat", null, new { style = "color: Blue" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">20</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                <b>
                                                    <label>
                                                        @Html.EditorFor(model => model.Tot20, new { htmlAttributes = new { @class = "form-control", @id = "Count20Size", @readonly = "Readonly", maxlength = 11 } })
                                                    </label>
                                                </b>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">40</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                <b>
                                                    <label>
                                                        @Html.EditorFor(model => model.Tot40, new { htmlAttributes = new { @class = "form-control", @id = "Count40Size", @readonly = "Readonly", maxlength = 11 } })
                                                    </label>
                                                </b>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">45</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                <b>
                                                    <label>
                                                        @Html.EditorFor(model => model.Tot45, new { htmlAttributes = new { @class = "form-control", @id = "Count45Size", @readonly = "Readonly", maxlength = 11 } })
                                                    </label>
                                                </b>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-2 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-label">TEUS</label>
                                        <div class="row gutters-xs">
                                            <div class="col">
                                                <b>
                                                    <label>
                                                        @Html.EditorFor(model => model.TEUS, new { htmlAttributes = new { @class = "form-control", @id = "TotalTeus", @readonly = "Readonly", maxlength = 11 } })
                                                    </label>
                                                </b>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label class="form-label"></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input type="button" id="btnSave" name="login" value="Save" class="btn btn-success" />
                                            @* <input type="button" id="btnClear" onclick="Clear()" name="login" value="Clear" class="btn btn-secondary" />*@
                                            <button type="button" class="btn btn-icon btn-gray" onclick="Clear()" name="clearProfile" title="clear" id="clearValue"><i class="fa fa-undo"></i></button>
                                            <input type="hidden" id="hdMode" />
                                        </div>
                                    </div>

                                </div>
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover tbl-cart text-nowrap" id="containerList" style="width:100%;background-color:#f4f5fa !important;">
                                        <thead>
                                            <tr>
                                                <th class="wd-15p sorting">Container No</th>
                                                <th class="wd-10p sorting">Size</th>
                                                <th class="wd-10p sorting">FCL/LCL</th>
                                                <th class="wd-10p sorting">ISO Code</th>
                                                <th class="wd-10p sorting">Cargo Type</th>
                                                <th class="wd-10p sorting">Scan Type</th>
                                                <th style="visibility:hidden"></th>
                                                <th style="visibility:hidden"></th>
                                            </tr>
                                        </thead>

                                    </table>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</div>
<div class="modal  fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog " role="document">
        <div class="modal-content" id='myModalContent'>

        </div>
    </div>
</div>

<Script>
    $("#ddlSize").change(function () {
        if ($("#ddlSize").val() == "1") {
            $("#ddlISOCode").val('212')
        }
        if ($("#ddlSize").val() == "2") {
            $("#ddlISOCode").val('77')
        }
       
    });
    function AddBL() {

        debugger;
        $("#divSummary").hide()
        $('#divBLForm').show()
       // $('#btnSave').val("Modify");
        $('#divContainerData').show()
        $('#divimportfile').show()

        $('#divBLForm :input').attr('disabled', false);
        $('#hdMode').val("")
        try {
            Clear();
        }
        catch (ex) {}

        try {
            $('#ddlIGM').val('3');
            $('#ddlTransport').val('2');
            $('#ddlHaulage').val('2');
            $('#ddlKAM').val('1');
            $("#containerList").empty();
            $("#ddlFL").val('1');
            $("#ddlCargotype").val('1');
            $("#ddlCommodity_group").val('0');
            $("#ddlJoType").val('3')
        }
        catch (ex) {}
    }

  
  

</Script>

<script>

    function getBack() {
        // alert("hi")
        $("#divSummary").show()
        $('#divBLForm').hide()
        JOSummary()
    }
</script>
<script>

    $("#ddlSearchCriteria").change(function () {
        if ($("#ddlSearchCriteria").val() == "Customer")
        {
           // alert("hi")
            $("#divCustomer").show()
            $("#divShipLines").hide()
            $("#divShippers").hide()
            $("#divConsignee").hide()
            $("#divCHA").hide()
            $("#divSalesPerson").hide()
            $("#divBL").hide()
        }
        else if ($("#ddlSearchCriteria").val() == "ShippingLine") {
            // alert("hi")
            $("#divCustomer").hide()
            $("#divShipLines").show()
            $("#divShippers").hide()
            $("#divConsignee").hide()
            $("#divCHA").hide()
            $("#divSalesPerson").hide()
            $("#divBL").hide()
        }
        else if ($("#ddlSearchCriteria").val() == "shipper") {
            // alert("hi")
            $("#divCustomer").hide()
            $("#divShipLines").hide()
            $("#divShippers").show()
            $("#divConsignee").hide()
            $("#divCHA").hide()
            $("#divSalesPerson").hide()
            $("#divBL").hide()
        }
        else if ($("#ddlSearchCriteria").val() == "Consignee") {
            // alert("hi")
            $("#divCustomer").hide()
            $("#divShipLines").hide()
            $("#divShippers").hide()
            $("#divConsignee").show()
            $("#divCHA").hide()
            $("#divSalesPerson").hide()
            $("#divBL").hide()
        }
        else if ($("#ddlSearchCriteria").val() == "SalesPerson") {
            // alert("hi")
            $("#divCustomer").hide()
            $("#divShipLines").hide()
            $("#divShippers").hide()
            $("#divConsignee").hide()
            $("#divCHA").hide()
            $("#divSalesPerson").show()
            $("#divBL").hide()
        }
        else if ($("#ddlSearchCriteria").val() == "CHA") {
            // alert("hi")
            $("#divCustomer").hide()
            $("#divShipLines").hide()
            $("#divShippers").hide()
            $("#divConsignee").hide()
            $("#divCHA").show()
            $("#divSalesPerson").hide()
            $("#divBL").hide()
        }
        else if ($("#ddlSearchCriteria").val() == "BL") {
            // alert("hi")
            $("#divCustomer").hide()
            $("#divShipLines").hide()
            $("#divShippers").hide()
            $("#divConsignee").hide()
            $("#divCHA").hide()
            $("#divSalesPerson").hide()
            $("#divBL").show()

        }
    });
</script>
<script>
    $(window).on('load', function () {

        JOSummary()

    })
</script>
<script>
    $(".btnShow").click(function () {

        JOSummary()


    });
</script>
<script>
    function OnChangeDate(element) {
   // $("#chkIsWithDate").onchange(function () {
      //  alert("hi");
        var IsDate = $("#chkIsWithDate").is(":checked");
        if (IsDate == true)
        {

            $('#divShowButton1').show();
            $('#divShowButton').hide();

            $('#divDate').show();
        }
        else
        {
            $('#divShowButton1').hide();
            $('#divShowButton').show();
            $('#divDate').hide();
        }
    }
</script>
<script>

     function JOSummary() {
      //   $("#divLoading").show();
            var FromDate = $("#FromDate").val()
            var ToDate = $("#ToDate").val()
            var SearchCriteria = $("#ddlSearchCriteria").val()
            var SearchText = "";
            var IsDate = $("#chkIsWithDate").is(":checked");
            if (Date.parse(FromDate) > Date.parse(ToDate)) {
                alert("Invalid Date Range");
            }
            else {
                // alert("Valid date Range");


                if ($("#ddlSearchCriteria").val() == "Customer") {

                    var SearchText = $("#ddlCustomerList").val()
                   // alert(SearchText)
                }
                else if ($("#ddlSearchCriteria").val() == "ShippingLine") {
                    // alert("hi")
                    var SearchText = $("#ddlShipLinesList").val()


                }
                else if ($("#ddlSearchCriteria").val() == "shipper") {
                    // alert("hi")
                    var SearchText = $("#ddlShipperList").val()


                }
                else if ($("#ddlSearchCriteria").val() == "Consignee") {
                    // alert("hi")
                    var SearchText = $("#ddlConsigneeList").val()


                }
                else if ($("#ddlSearchCriteria").val() == "SalesPerson") {
                    // alert("hi")
                    var SearchText = $("#ddlSalesPersonMList").val()


                }
                else if ($("#ddlSearchCriteria").val() == "CHA") {
                    // alert("hi")
                    var SearchText = $("#ddlCHAList").val()


                }
                else if ($("#ddlSearchCriteria").val() == "BL") {
                    // alert("hi")
                    var SearchText = $("#txtSearchBL").val()
                }

                $.ajax({
                    type: 'POST',
                    url: '/BLEntry/getJobOrderList',
                    data: '{FromDate: ' + JSON.stringify(FromDate) + ', ToDate: ' + JSON.stringify(ToDate) + ',SearchCriteria: ' + JSON.stringify(SearchCriteria) + ',SearchText: ' + JSON.stringify(SearchText) + ',IsDate:' + JSON.stringify(IsDate) +'}',
                    //data: JSON.stringify(formData),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    success: function (data) {
                        // alert(JSON.stringify(data))
                        debugger;
                        //alert(data);
                        $('#example').dataTable({
                            "destroy": true,
                            "bLengthChange": false,
                            "aaData": data,
                            "aaSorting": [[0, 'desc']],
                            "columns": [
                            { "data": "JONo" },
                            { "data": "JODateInString" },
                            { "data": "PortName" },
                            { "data": "CustomerName" },
                            { "data": "BLNumber" },
                            { "data": "BLReceivedDateInString" },
                            { "data": "TEUS" },
                            { "data": "SalesPersonName" },
                            { "data": "userName" },


                            {
                                "data": "JONo",
                                "render": function (data, type, row, meta) {
                                    if (type === 'display') {

                                        data = '<a  onclick="EditJO(' + data + ')"  href="#" class="btn btn-sm btn-info" title="Edit" ><i class="fa fa-edit"></i></a>';
                                    }

                                    return data;
                                }


                            },
                            {
                                "data": "JONo",
                                "render": function (data, type, row, meta) {
                                    if (type === 'display') {

                                        data = '<a  onclick="ViewJO(' + data + ')" href="#" class="btn btn-sm btn-primary" title="View"><i class="fa fa-eye"></i> </a>';
                                        //<td><a class="btn btn-sm btn-primary" href="#" data-toggle="tooltip" title="View" onclick="ViewVisitorData()"><i class="fa fa-eye"></i> </a></td>
                                    }

                                    return data;
                                }


                            },
                            {
                                "data": "JONo",
                                "render": function (data, type, row, meta) {
                                    if (type === 'display') {

                                        data = '<a  onclick="CancelJO(' + data + ')"  href="#" class="btn btn-sm btn-danger removebutton" title="Cancel"><i class="fa fa-trash-o"></i></a>';
                                    }

                                    return data;
                                }


                            },
                            {
                                "data": "JONo",
                                "render": function (data, type, row, meta) {
                                    if (type === 'display') {

                                        data = '<a  onclick="SubmitJO(' + data + ')"  href="#" class="' + row.SubmitCss + '"  title="Submit"><i class="fa fa-stop-circle"></i></a>';
                                      //  data = '<a  onclick="SubmitJO(' + data + ')"  href="#" class="submitbtn"  title="Submit"><i class="fa fa-save"></i></a>';
                                    }

                                    return data;
                                }


                            },
                            {
                                "data": "JONo",
                                "render": function (data, type, row, meta) {
                            if (type === 'display') {

                                data = '<a  onclick="GetEventLog(' + data + ')"  href="#" class="btn btn-sm btn-secondary"  title="Event Log"><i class="fa fa-list-ul"></i></a>';
                                //  data = '<a  onclick="SubmitJO(' + data + ')"  href="#" class="submitbtn"  title="Submit"><i class="fa fa-save"></i></a>';
                            }

                            return data;
                        }


                            }

                            ]
                        })
                        // Clear()
                        // document.location = '@Url.Action("GenerateBL", "BL")';
                    },
                    error: function (errormessage) {
                        debugger;
                        alert(errormessage.responseText);
                    }
                });

            }

        }

</script>


<script>
    function EditJO(jono) {
       // alert(jono)

            var data = JSON.stringify({
                'jono': jono
            });

            $.ajax({
                url: "/BLEntry/ViewJODetails",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                //  dataType: "json",
                success: function (data) {
                    //alert(data);
                    //  $('#divBLForm').addClass("disabledbutton");
                    ClearInvalidClass()
                    $("#divSummary").hide()
                    $('#divBLForm').show()
                  //  $('#btnSave').val("Modify");
                    $('#divContainerData').show()
                    $('#divimportfile').show()

                    $('#divBLForm :input').attr('disabled', false);

                    $("#JONo").val(data.JOList.JONo);
                    $("#JODate").val(data.JOList.JODateInString);
                    $("#ddlAgent").val(data.JOList.AgentID);
                    $("#ddlShippinLine").val(data.JOList.SLID);
                    //$("#ddlshipper").val(data.JOList.shipperid)
                    //$("#ddlConsignee").val(data.JOList.Importerid)
                    $("#txtViaNo").val(data.JOList.ViaNo)
                    $("#ddlVessel").val(data.JOList.VesselID)
                    //$("#txtBLNo").val(data.JOList.BLNumber)
                    $("#ddlHaulage").val(data.JOList.Haulage_Type_Id)
                    $("#ddlIGM").val(data.JOList.File_Status_Id)
                    $("#ddlTransport").val(data.JOList.Transport_Type_Id)
                    //$("#ddlPol").val(data.JOList.POL_ID)
                    $("#ddlSalesPerson").val(data.JOList.Sales_Person_Id)
                    $("#txtIGMNo").val(data.JOList.IGMNo)
                    $("#txtBlDate").val(data.JOList.BLReceivedDateInString)
                    $("#txtBLnumber").val(data.JOList.BLNumber)
                    $("#ddlPort").val(data.JOList.PortID)
                    //$("#BLdatePicker").val(data.JOList.BLReceivedDateInString);
                    $("#txtBerthingDate").val(data.JOList.berthingDateInstring);
                    $("#txtHBLNumber").val(data.JOList.HouseBLNumber);
                    $("#ddlKAM").val(data.JOList.KAMID);
                    document.getElementById('lblCount').innerHTML = data.JOList.AttachmentCount;
                    $('#hdMode').val("");
                    debugger;

                    //-=======Display Total Container Details with Teus
                    try {
                        DisplayContSize(data.Containerlist);
                    }
                    catch (ex) { }
                    //-=======End Total Container Details with Teus

                    $('#containerList').dataTable({
                        "destroy": true,
                        "bLengthChange": false,
                        "aaData": data.Containerlist,
                        "columns": [
                        { "data": "ContainerNo" },
                        { "data": "ContainerSize" },
                        { "data": "FLName" },
                        { "data": "ISOCodeName" },
                        { "data": "Cargotype" },
                        { "data": "ScanType" },
                        //{ "data": "Commodity_Group_Name" },

                        {
                            "data": "Temp",
                            "render": function (data, type, row, meta) {
                                if (type === 'display') {

                                    data = "<button type=\"button\" class=\"btn btn-icon btn-primary btn-danger removebutton \" name=\"removebutton\" style=\"height:35px;\" onclick=\"CancelItem('" + data + "')\"><i class=\"fe fe-trash\" style=\"font-size: 16px;\"></i></button>"
                                    // '<a  onclick="EditJO(' + data + ')"  href="#" class="btn btn-sm btn-info" title="Edit" ><i class="fa fa-edit"></i></a>';
                                }

                                return data;
                            }
                            },
                            {
                                "data": "Temp",
                                "render": function (data, type, row, meta) {
                                    if (type === 'display') {
                                        data = "<button type=\"button\" class=\"btn btn-icon btn-primary btn-primary removebutton \" name=\"removebutton\" style=\"height:35px;\" onclick=\"ModifyCont('" + data + "')\"><i class=\"fa fa-edit\" style=\"font-size: 16px;\"></i></button>"
                                        //data = "<a  onclick='\"ModifyCont('" + data + "')" 'href="#" class="btn btn-sm btn-info" title="Edit" ><i class="fa fa-edit"></i></a>";
                                    }
                                    return data;
                                }
                            }
                        ]
                    });

                                  },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

    }
</script>
<script>

    function ModifyCont(container) {
        debugger;
        var JONo = $('#JONo').val();
        var ContainerNo = $('#ContainerNo');
        var ddlSize = $('#ddlSize');
        var ddlFL = $('#ddlFL');
        var ddlISOCode = $('#ddlISOCode');
        var ddlCargotype = $('#ddlCargotype');
        var ddlCommodity_group = $('#ddlCommodity_group');
        var ddlJoType = $('#ddlJoType');

        if (parseInt(JONo) == 0 || JONo == '') {
            alert('Jo Order Not Generated. Edit not allowed');
            return;
        };



        $.ajax({
            url: "/BLEntry/AjaxGetJobDetailsModify",
            data: '{ContainerNo: ' + JSON.stringify(container) + ', JoNo: ' + JSON.stringify(JONo) +'}',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            //  dataType: "json",
            success: function (data) {
                debugger;
                var parseJSONResult = jQuery.parseJSON(data);
                if (parseJSONResult != null && parseJSONResult.length > 0) {
                    var rowDataSet = [];
                    var i = 0;
                    $.each(parseJSONResult, function (key, value) {
                        var rowData = [];
                        var j = 0;
                        $.each(parseJSONResult[i], function (key, value) {
                            rowData[j] = value;
                            j++;
                        });
                        rowDataSet[i] = rowData;
                        i++;
                    });
                    ContainerNo.val(rowDataSet[0][3]);
                    ddlSize.val(rowDataSet[0][8]);
                    if (rowDataSet[0][0] == 'FCL') {
                        ddlFL.val(1);
                    }
                    else ddlFL.val(2);

                    ddlISOCode.val(rowDataSet[0][4]);
                    ddlCargotype.val(rowDataSet[0][11]);
                    ddlCommodity_group.val(rowDataSet[0][10]);
                    ddlJoType.val(rowDataSet[0][14]);
                    ContainerNo.prop("disabled", true);
                    ddlSize.focus();
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });


    }

    function ViewJO(jono) {
        var data = JSON.stringify({
            'jono': jono
        });

        $.ajax({
            url: "/BLEntry/ViewJODetails",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            //  dataType: "json",
            success: function (data) {
                //  $('#divBLForm').addClass("disabledbutton");
                  ClearInvalidClass()
                $("#divSummary").hide()
                $('#divBLForm').show()
                $('#divContainerData').hide()
                $('#divimportfile').hide()
                $('#divBLForm :input').attr('disabled', true);

                $("#JONo").val(data.JOList.JONo);
                $("#JODate").val(data.JOList.JODateInString);
                $("#ddlAgent").val(data.JOList.AgentID);
                $("#ddlShippinLine").val(data.JOList.SLID);
                //$("#ddlshipper").val(data.JOList.shipperid)
                //$("#ddlConsignee").val(data.JOList.Importerid)
                $("#txtViaNo").val(data.JOList.ViaNo)
                $("#ddlVessel").val(data.JOList.VesselID)
                //$("#txtBLNo").val(data.JOList.BLNumber)
                $("#ddlHaulage").val(data.JOList.Haulage_Type_Id)
                $("#ddlIGM").val(data.JOList.File_Status_Id)
                $("#ddlTransport").val(data.JOList.Transport_Type_Id)
                //$("#ddlPol").val(data.JOList.POL_ID)
                $("#ddlSalesPerson").val(data.JOList.Sales_Person_Id)

                //$("#ddlCha").val(data.JOList.Chaid)
                $("#ddlPort").val(data.JOList.PortID)
                //$("#BLdatePicker").val(data.JOList.BLReceivedDateInString);
                $("#txtBerthingDate").val(data.JOList.berthingDateInstring);

                //$("#txtHouseBLNo").val(data.JOList.HouseBLNumber);
                $("#ddlKAM").val(data.JOList.KAMID);
                document.getElementById('lblCount').innerHTML = data.JOList.AttachmentCount;
                $('#hdMode').val("ViewMode")

              //  $('#myModalContent').attr("disabled", true);

                //  alert(JSON.stringify(data.Containerlist))

                //-=======Display Total Container Details with Teus
                try {
                    DisplayContSize(data.Containerlist);
                }
                catch (ex) { }
                    //-=======End Total Container Details with Teus

                $('#containerList').dataTable({
                    "destroy": true,
                    "bLengthChange": false,
                    "aaData": data.Containerlist,
                    "columns": [
                    { "data": "ContainerNo" },
                    { "data": "ContainerSize" },
                    { "data": "FLName" },
                    { "data": "ISOCodeName" },
                    { "data": "Cargotype" },
                    { "data": "ScanType" },
                   // { "data": "Commodity_Group_Name" },

                    {
                        "data": "TempID",
                        "render": function (data, type, row, meta) {
                            if (type === 'display') {

                                data = "<button type=\"button\" class=\"btn btn-icon btn-primary btn-danger disabled \" name=\"removebutton\" style=\"height:35px;\" ><i class=\"fe fe-trash\" style=\"font-size: 16px;\"></i></button>"

                                // data = '<a  onclick="EditJO(' + data + ')"  href="#" class="btn btn-sm btn-info" title="Edit" ><i class="fa fa-edit"></i></a>';
                            }

                            return data;
                        }
                        }
                    ]
                });

                // document.location = '@Url.Action("GenerateBL", "BL")';


            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
</script>
<script>

    function CancelJO(jono) {
        var r = confirm("Are you sure want to cancel this entry?");
        if (r == true) {


            var data = JSON.stringify({
                'jono': jono
            });

            $.ajax({

                type: "POST",
                url: "/BLEntry/CancelBLJO",
                data: data,
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    $('#myModalContent').html(response);
                    $('#myModal').modal('show');
                   // alert(response);
                  //  JOSummary()
                },
                error: function (errormessage) {
                  //  alert("error");
                    alert(errormessage.responseText);
                }
            });

        }
        else {
            // alert("You Pressed Cancel");
        }



    }
</script>



<script>

    function SubmitJO(jono) {
        var r = confirm("Are you sure want to submit this entry!");
        if (r == true) {

            var table = $('#example').DataTable();
            $("table").on("click", ".enabled", function () {
                //$(this).removeClass('removeEdit');
                $(this).addClass('btn btn-sm btn-warning disabled');
                $(this).prop('disabled', true);
               // $(this).parents('tr').find('input[type=checkbox]').prop('disabled', true);
            });



            var data = JSON.stringify({
                'jono': jono
            });

            $.ajax({
                url: "/BLEntry/SubmitJO",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {

                    alert(response);
                    //  JOSummary()
                },
                error: function (errormessage) {
                    //  alert("error");
                    alert(errormessage.responseText);
                }
            });

        }
        else {
            // alert("You Pressed Cancel");
        }

    }
</script>

<script type="text/javascript">


    function GetEventLog(jono) {

        var data = JSON.stringify({
            'jono': jono

        });

        $.ajax({
            type: "POST",
            url: "/BLEntry/GetJOEvent",
            data: data,
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                $('#myModalContent').html(response);
                $('#myModal').modal('show');

            },
            failure: function (response) {
                alert(response);
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }

        })
    }

</script>



@*-------------For BL add details----------------*@

<script>
    $(document).ready(function () {
        upperCaseOnKeyUp(txtViaNo);
        upperCaseOnKeyUp(ContainerNo);
        //$('#containerList').dataTable({
        //    "bLengthChange": false,
        //    "bInfo": false,
        //    "bPaginate": false,
        //    "bFilter": false


        //})
    });

</script>
<script>
    function AddAttachment()
    {


        $.ajax({
            type: "POST",
            url: "/BLEntry/AddAttachment",

            contentType: "application/json; charset=utf-8",
            success: function (response) {
                //$('#lblCount').val("2")
              //  document.getElementById('lblCount').innerHTML = '2';
                $('#myModalContent').html(response);
                $('#myModal').modal('show');

               // var table = $('#JOAttachment').DataTable();
                //var table_length = table.data().count();
              //  alert(table)
            },
            failure: function (response) {
                alert(response);
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }

        })
    }
</script>
<script>

    function ShowContainerList() {
        debugger;
        var result = true;
      //  alert($("#JoNo").val())
        //var res = validate();
        //if (res == false) {
        //    return false;
        //}

        var hdnFileCount = $('#hdnFileCount').val();
        if (hdnFileCount > 0) {
            alert('Manual Container not allowed while download IGM File.');
            return
        }

        var pass11 = document.getElementById('ContainerNo');
        if (pass11.value == '' || pass11.value.length !=11) {
            alert('Container not can not be blank or not less then 11 digit.');
            return;
        }

        var containerNoVal = ContainerNumberValidation();
        //alert(containerNoVal);
        if (containerNoVal == false) {
            alert("Invalid Container No.")
            result = confirm('Container No Seems to be wrong! Do you want to re-check ?');
        }

        if (result == false) {
            alert('you click on Cancel');
            return;
        }
        else {

            // alert("hi")
            var txtContainerNo = $("#ContainerNo").val();
            var Size = $("#ddlSize option:selected").text();
            var FLid = $("#ddlFL option:selected").text();
            var ISOCode = $("#ddlISOCode option:selected").val();
            var Cargotypeid = $("#ddlCargotype option:selected").val();
            var Commodity_group_id = $("#ddlCommodity_group option:selected").val();

            var ContainerNo = $("#ContainerNo").val() + "<input Name=ContainerNo type=hidden id=ContainerNo   value=" + txtContainerNo + ">";
            var FL = $("#ddlFL option:selected").text() + "<input Name=FLid type=hidden id=FL   value=" + FLid + ">";
            var ContainerSize = $("#ddlSize option:selected").text() + "<input Name=Size type=hidden id=Size   value=" + Size + ">";
            var ISOCodeName = $("#ddlISOCode option:selected").text() + "<input Name=ISOCodeID type=hidden id=ISOCode   value=" + ISOCode + ">";
            var Cargotype = $("#ddlCargotype option:selected").text() + "<input Name=Cargotypeid type=hidden id=Cargotypeid   value=" + Cargotypeid + ">";
            var Commodity_group = $("#ddlCommodity_group option:selected").text() + "<input Name=Commodity_group_id type=hidden id=Commodity_group_id   value=" + Commodity_group_id + ">";
            var JONo = $("#JONo").val();
            // alert(JONo)
            //  var data1 = { 'ContainerNo': ContainerNo, 'ContainerSize': ContainerSize, 'FL': FL, 'ISOCodeName': ISOCodeName, 'Cargotype': Cargotype, 'Commodity_group': Commodity_group };
            var data1 = { 'ContainerNo': txtContainerNo.toUpperCase(), 'Size': Size, 'FL': FLid, 'ISOCode': ISOCode, 'Cargotypeid': Cargotypeid, 'Commodity_group_id': Commodity_group_id, 'JONo': JONo };

            var data = JSON.stringify(data1);
            var exists = $('#containerList tr > td:contains(' + txtContainerNo.toUpperCase() + ')').length;
            if (exists == 1 && JONo == 0) {
                alert("Container No. alredy exist!");
            }
            else {

                $.ajax({
                    type: 'POST',
                    url: '/BLEntry/AddTempContainerData',
                    data: data,
                    //data: JSON.stringify(formData),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    success: function (data) {

                        debugger;
                        if (data.JOValidation.validationMessage == 0) {
                            //Following Container is already marked IN, cannot proceed with updating
                            //alert("container no " + txtContainerNo + " is already in CFS or still on another ICD!")
                            alert("Container " + txtContainerNo + " is already marked IN, cannot proceed with updating")

                        }
                        $('#containerList').empty();
                        // if (data.Containerlist != "Some Invalid data in File.") {
                        $('#containerList').dataTable({
                            "destroy": true,
                            "bLengthChange": false,
                            /// "aaData": data,
                            "aaData": data.Containerlist,
                            "columns": [
                                { "data": "ContainerNo" },
                                { "data": "ContainerSize" },
                                { "data": "FLName" },
                                { "data": "ISOCodeName" },
                                { "data": "Cargotype" },
                                { "data": "ScanType" },
                                //{ "data": "Commodity_Group_Name" },
                                {
                                    "data": "Temp",
                                    "render": function (data, type, row, meta) {
                                        if (type === 'display') {
                                            data = "<button type=\"button\" class=\"btn btn-icon btn-primary btn-danger removebutton \" name=\"removebutton\" style=\"height:35px;\" onclick=\"CancelItem('" + data + "')\"><i class=\"fe fe-trash\" style=\"font-size: 16px;\"></i></button>"
                                        }

                                        return data;
                                    }
                                },
                                {
                                    "data": "Temp",
                                    "render": function (data, type, row, meta) {
                                        if (type === 'display') {
                                            data = "<button type=\"button\" class=\"btn btn-icon btn-primary btn-primary removebutton \" name=\"removebutton\" style=\"height:35px;\" onclick=\"ModifyCont('" + data + "')\"><i class=\"fa fa-edit\" style=\"font-size: 16px;\"></i></button>"
                                            //data = "<a  onclick='\"ModifyCont('" + data + "')" 'href="#" class="btn btn-sm btn-info" title="Edit" ><i class="fa fa-edit"></i></a>";
                                        }
                                        return data;
                                    }
                                }
                            ]
                        });
                        // }
                    }

                });
            }
        }

        document.getElementById('ContainerNo').value = "";
        document.getElementById('ddlSize').value = "";
        document.getElementById('ddlFL').value = "";
        document.getElementById('ddlISOCode').value = "";
        document.getElementById('ddlCargotype').value = "";
        document.getElementById('ddlCommodity_group').value = "";
        $("#ContainerNo").removeClass("form-control is-valid state-valid")
        $("#ContainerNo").addClass("form-control")
        $("#ddlSize").removeClass("form-control is-valid state-valid")
        $("#ddlSize").addClass("form-control")
        $("#ddlISOCode").removeClass("form-control is-valid state-valid")
        $("#ddlISOCode").addClass("form-control")
        $("#ddlCargotype").removeClass("form-control is-valid state-valid")
        $("#ddlCargotype").addClass("form-control")
        $("#ddlCommodity_group").removeClass("form-control is-valid state-valid")
        $("#ddlCommodity_group").addClass("form-control")
        $("#ddlFL").removeClass("form-control is-valid state-valid")
        $("#ddlFL").addClass("form-control")


    }








</script>
 
<script>
    // $("#ContainerNo").on("blur", function () {
    function myRequiredTextValidation(TextField) {
        // alert("#" + TextField)
        if ($("#" + TextField).val() == "") {
            $("#" + TextField).removeClass("form-control is-valid state-valid")
            $("#" + TextField).addClass("form-control is-invalid state-invalid")

        } else {
            // alert("hi")
            $("#" + TextField).removeClass("form-control is-invalid state-invalid")
            $("#" + TextField).addClass("form-control is-valid state-valid")

        }
    };
</script>
<script>
    function myRequiredValidation(TextField) {

        // alert("#" + TextField);

        if ($("#" + TextField).val() == "") {
            $("#" + TextField).removeClass("form-control is-valid state-valid")
            $("#" + TextField).addClass("form-control is-invalid state-invalid")
            //  document.getElementById(TextField).style.borderColor = "red"
        } else {
            // alert("hi")
            $("#" + TextField).removeClass("form-control is-invalid state-invalid")
            $("#" + TextField).addClass("form-control is-valid state-valid")
            // document.getElementById(TextField).style.borderColor = "Gainsboro"
        }
    };
</script>

<script>
    function CancelItem(Temp) {
        debugger;

        var r = confirm("Do you want to Delete Entry?");
        if (r == true) {
            debugger;
            var table = $('#containerList').DataTable();
            $('#containerList tbody').on('click', '.removebutton', function () {

                table
                    .row($(this).parents('tr'))
                    .remove()
                    .draw();

            });
            var data1 = { 'ContainerId': Temp }
            var data = JSON.stringify(data1);
            $.ajax({
                type: 'POST',
                url: '/BLEntry/DeleteContainerData',

                data: data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                success: function (data) {
                    debugger;
                    // alert(JSON.stringify(data))
                    if (data.JOValidation.validationMessage == 0) {
                        alert('Container already Gate in. Deletion not allowed.');
                    }

                        $('#containerList').empty();

                        $('#containerList').dataTable({
                            "destroy": true,
                            "bLengthChange": false,
                            "aaData": data.Containerlist,
                            "columns": [
                            { "data": "ContainerNo" },
                            { "data": "ContainerSize" },
                            { "data": "FLName" },
                            { "data": "ISOCodeName" },
                            { "data": "Cargotype" },
                            //{ "data": "Commodity_Group_Name" },
                            //{ "data": "ScanType" },

                            {
                                "data": "Temp",
                                "render": function (data, type, row, meta) {
                                    if (type === 'display') {

                                        data = "<button type=\"button\" class=\"btn btn-icon btn-primary btn-danger removebutton \" name=\"removebutton\" style=\"height:35px;\" onclick=\"CancelItem('" + data + "')\"><i class=\"fe fe-trash\" style=\"font-size: 16px;\"></i></button>"

                                        // data = '<a  onclick="EditJO(' + data + ')"  href="#" class="btn btn-sm btn-info" title="Edit" ><i class="fa fa-edit"></i></a>';
                                    }

                                    return data;
                                }
                                },
                                {
                                    "data": "Temp",
                                    "render": function (data, type, row, meta) {
                                        if (type === 'display') {
                                            data = "<button type=\"button\" class=\"btn btn-icon btn-primary btn-primary removebutton \" name=\"removebutton\" style=\"height:35px;\" onclick=\"ModifyCont('" + data + "')\"><i class=\"fa fa-edit\" style=\"font-size: 16px;\"></i></button>"
                                            //data = "<a  onclick='\"ModifyCont('" + data + "')" 'href="#" class="btn btn-sm btn-info" title="Edit" ><i class="fa fa-edit"></i></a>";
                                        }
                                        return data;
                                    }
                                }
                            ]
                        });
                }
            });
        }
        else {
            alert("You Pressed Cancel");
        }
    }
</script>


@*<script type="text/javascript">
        function validate() {
            // alert("hifg");

            var ContainerNo = document.getElementById('ContainerNo').value;
            var ddlSize = document.getElementById('ddlSize').value;
            var ddlISOCode = document.getElementById('ddlISOCode').value;
            var ddlCargotype = document.getElementById('ddlCargotype').value;
            var ddlCommodity_group = document.getElementById('ddlCommodity_group').value;
            var ddlFL = document.getElementById('ddlFL').value;

            var blResult = Boolean;
            blResult = true;
            $("#ContainerNo").removeClass("form-control is-invalid state-invalid")
            $("#ContainerNo").addClass("form-control is-valid state-valid")

            // document.getElementById('ContainerNo').style.borderColor = "Gainsboro";


            if (ContainerNo == "") {
                //  document.getElementById('ContainerNo').style.borderColor = "red"
                $("#ContainerNo").removeClass("form-control is-valid state-valid")
                $("#ContainerNo").addClass("form-control is-invalid state-invalid")
                blResult = blResult && false;
            }


            if (ddlSize == "") {
                $("#ddlSize").removeClass("form-control is-valid state-valid")
                $("#ddlSize").addClass("form-control is-invalid state-invalid")
                blResult = blResult && false;
            }

            if (ddlISOCode == "") {
                $("#ddlISOCode").removeClass("form-control is-valid state-valid")
                $("#ddlISOCode").addClass("form-control is-invalid state-invalid")
                blResult = blResult && false;
            }
            if (ddlCargotype == "") {
                $("#ddlCargotype").removeClass("form-control is-valid state-valid")
                $("#ddlCargotype").addClass("form-control is-invalid state-invalid")
                blResult = blResult && false;
            }
            if (ddlCommodity_group == "") {
                $("#ddlCommodity_group").removeClass("form-control is-valid state-valid")
                $("#ddlCommodity_group").addClass("form-control is-invalid state-invalid")
                blResult = blResult && false;
            }
            if (ddlFL == "") {
                $("#ddlFL").removeClass("form-control is-valid state-valid")
                $("#ddlFL").addClass("form-control is-invalid state-invalid")
                blResult = blResult && false;
            }

            if (blResult == false) { alert('Please fill the required fields!'); }
            return blResult;

        };
        //$('#btnRemoveCSS').click(function () {

    </script>*@


<script>
    $("#txtViaNo").change(function () {
        //alert("hi");
        if ($("#txtViaNo").val() != "")
        {
            var ViaNo = $("#txtViaNo").val()
            $.ajax({
                type: 'POST',
                url: '/BLEntry/getVesselDetails',
                data: '{viaNo: ' + JSON.stringify(ViaNo) +'}',
                //data: JSON.stringify(formData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                success: function (data) {
                    debugger;
                   // alert(JSON.stringify(data))
                    if (data.VesselID == 0) {
                        $("#ddlPort").val("");
                        $("#txtBerthingDate").val("");
                        $("#txtIGMNo").val("");
                        $("#txtViaNo").removeClass("form-control is-valid state-valid")
                        $("#txtViaNo").addClass("form-control is-invalid state-invalid")
                        $("#txtViaNo").val('');
                        alert('Specified via no not found in vessel master. Cannot proceed.');
                    }
                    else {

                        $("#ddlVessel").val(data.VesselID);
                        $("#ddlPort").val(data.PortID);
                        $("#txtBerthingDate").val(data.berthingDateInstring);
                        $("#txtIGMNo").val(data.IGMNo);
                        $("#txtViaNo").removeClass("form-control is-invalid state-invalid")
                        $("#txtViaNo").addClass("form-control is-valid state-valid")
                    }
                   // Clear()
                    // document.location = '@Url.Action("GenerateBL", "BL")';
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
    });
</script>
<script>

    $("#ContainerNo").change(function () {
        ContainerNumberValidation()

    });
    function ContainerNumberValidation() {
        debugger;
        var pass1 = document.getElementById('ContainerNo');
        //alert(pass1)
        var containerNoVal;
        if (pass1.value.length != 11) {
            alert("Required 11 digits Container No.")
            $("#ContainerNo").removeClass("form-control is-valid state-valid")
            $("#ContainerNo").addClass("form-control is-invalid state-invalid")
            return false;
        }
        else {
            var ContainerNo = $("#ContainerNo").val()
            $.ajax({
                type: 'POST',
                url: '/BL/ContainerNoValidation',
                data: '{ContainerNo: ' + JSON.stringify(ContainerNo) + '}',
                //data: JSON.stringify(formData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (data) {
                    //   alert(JSON.stringify(data))
                    if (JSON.stringify(data) == "false") {
                        // alert("hi")
                        // $("#ContainerNo").val("")
                        $("#ContainerNo").removeClass("form-control is-valid state-valid")
                        $("#ContainerNo").addClass("form-control is-invalid state-invalid")
                        containerNoVal = false;
                      //  alert(containerNoVal)
                    }
                    else {
                        $("#ContainerNo").removeClass("form-control is-invalid state-invalid")
                        $("#ContainerNo").addClass("form-control is-valid state-valid")
                        containerNoVal = true;
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }


            });
            return containerNoVal;
        }
    }
</script>
<script>
    $("#btnSave").click(function () {
        debugger;
       // var res = validateSaveFunction();
        //if (res == false) {
        //    return false;
        //}
        var itemcount = checkItemcount();
        if (itemcount) {

            var SelectedData = new Array();
            $('#containerList tbody tr').each(function (i, row) {
                var data = {};
                $(this).find('input').each(function () {
                    data[this.id] = $(this).val();
                })
                SelectedData.push(data);

            });
         //   alert(SelectedData)

            $('#btnSave').attr('disabled', 'disabled');

            //////////For check container number is duplicate in table
            $.ajax({
                type: 'POST',
                url: '/BLEntry/CheckDuplicateContainer',
                //  data: '{viewModel: ' + JSON.stringify(viewModel) + ', containerData: ' + JSON.stringify(SelectedData) + '}',
                //data: JSON.stringify(formData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                success: function (data) {
                    if (data == false) {
                        alert("Please remove same container data in table!")
                    }
                    else {
                        var viewModel = objectifyForm($('#BLEntry').serializeArray());
                        //  alert(JSON.stringify(viewModel))
                        $.ajax({
                            type: 'POST',
                            url: '/BLEntry/SaveBLForm',
                            data: '{viewModel: ' + JSON.stringify(viewModel) + ', containerData: ' + JSON.stringify(SelectedData) + '}',
                            //data: JSON.stringify(formData),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            async: true,
                            success: function (data) {
                                debugger;
                                if ($("#JONo").val() != "New" && $("#JONo").val() > "0") {
                                    if (data == "Record Saved Successfully") {
                                        alert("Record Updated Successfully.");
                                        Clear();
                                        $("#Count20Size").val("");
                                        $("#Count40Size").val("");
                                        $("#Count45Size").val("");
                                        $("#TotalTeus").val("");
                                        document.location = '@Url.Action("BLEntrySummary", "BLEntry")';
                                    }
                                    else {
                                        alert(data);
                                    }
                                }
                                else {
                                    if (data == "Record Saved Successfully") {

                                        alert("Record Saved Successfully");

                                        if (window.confirm("Are you want to save Another Entry ?")) {
                                            Clear();
                                            $("#ddlShippinLine").focus();
                                            $("#Count20Size").val("");
                                            $("#Count40Size").val("");
                                            $("#Count45Size").val("");
                                            $("#TotalTeus").val("");
                                        }
                                        else {
                                            document.location = '@Url.Action("BLEntrySummary", "BLEntry")';
                                            $("#Count20Size").val("");
                                            $("#Count40Size").val("");
                                            $("#Count45Size").val("");
                                            $("#TotalTeus").val("");
                                        }
                                    }
                                    else {
                                        alert(data);
                                    }
                                }
                                

                                // document.location = '@Url.Action("GenerateBL", "BLEntry")';
                            },
                            error: function (errormessage) {
                                alert(errormessage.responseText);
                            }
                        });
                    }
                    //Clear()
                    // document.location = '@Url.Action("GenerateBL", "BLEntry")';
                },
                error: function (errormessage) {
                    alert("Something wrong please try again")
                   // alert(errormessage.responseText);
                }
            });


        }
        return false;
    });
    @*function IsDuplicateContainer()
    {
        $.ajax({
            type: 'POST',
            url: '/BL/CheckDuplicateContainer',
          //  data: '{viewModel: ' + JSON.stringify(viewModel) + ', containerData: ' + JSON.stringify(SelectedData) + '}',
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: true,
            success: function (data) {
                alert(data)
                return(data)
                //Clear()
                // document.location = '@Url.Action("GenerateBL", "BL")';
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }*@

    function objectifyForm(formArray) {//serialize data function
        var returnArray = {};
        for (var i = 0; i < formArray.length; i++) {
            returnArray[formArray[i]['name']] = formArray[i]['value'];
        }
        return returnArray;
    }

    function checkItemcount() {

        var table = $('#containerList').DataTable();

        if (table.rows().count() == 0) {
            alert("Please add Container details!")
            return false;
        }
        return true;

    }
</script>
<script>
    function Clear() {

        const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        let current_datetime = new Date()
        let formatted_date = current_datetime.getDate() + " " + months[current_datetime.getMonth()] + " " + current_datetime.getFullYear() + " " + current_datetime.getHours() + ":" + current_datetime.getMinutes()
        let JODate = current_datetime.getDate() + " " + months[current_datetime.getMonth()] + " " + current_datetime.getFullYear()
        //   alert(formatted_date)
        //  alert("hi")
        $("#ddlAgent").val("");
        $("#ddlShippinLine").val("");
        //$("#ddlshipper").val("")
        //$("#ddlConsignee").val("")
        $("#txtViaNo").val("")
        $("#ddlVessel").val("")
        //$("#txtBLNo").val("")
        $("#ddlHaulage").val("")
        $("#ddlIGM").val("")
        $("#txtIGMNo").val("");
        $("#ddlTransport").val("")
        //$("#ddlPol").val("")
        $("#ddlSalesPerson").val("")
        //$("#txtBLNo").val("")
        //$("#ddlCha").val("")
        $("#ddlPort").val("")
        $("#JONo").val("")
        $("#JODate").val(JODate)
        $("#txtBerthingDate").val("")
        //$("#BLdatePicker").val(formatted_date)
        //$("#txtHouseBLNo").val("")
        $("#ddlKAM").val("")
        $("#ddlFileType").val("")
        $("#ddlJoType").val("")
        $("#fileImport").val("")
        $("#Count20Size").val('');
        $("#Count40Size").val('');
        $("#Count45Size").val('');
        $("#TotalTeus").val('');
        $('#ContainerNo').val('');
        $('#ContainerNo').prop("disabled", false);
        $('#ddlSize').val('');
        $('#ddlFL').val('');
        $('#ddlISOCode').val('');
        $('#ddlCargotype').val('');
        $('#ddlCommodity_group').val('');
        $('#Jo_Type_id').val('');
        $('#ddlImportName').val('');
        $('#txtBLnumber').val('');
        $('#txtBlDate').val('');
        $('#txtHBLNumber').val('');
        $('#hdnFileCount').val(0);

        $("#ddlAgent").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlShippinLine").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#ddlshipper").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#ddlConsignee").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#txtViaNo").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlVessel").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#txtBLNo").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlHaulage").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlIGM").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlTransport").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#ddlPol").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlSalesPerson").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#txtBLNo").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#ddlCha").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlPort").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlKAM").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlFileType").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlJoType").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#fileImport").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#divIgmErrorShow").css('visibility', 'hidden');
        $('#btnImport').removeAttr('disabled');
        $('#btnSave').removeAttr('disabled');
        document.getElementById('lblCount').innerHTML = 0;


        $.ajax({
            type: 'POST',
            url: '/BL/DeleteTempAllRecords',
            //  data: '{viewModel: ' + JSON.stringify(viewModel) + ', containerData: ' + JSON.stringify(SelectedData) + '}',
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: true,
            success: function (data) {
            }
        });
        var table = $('#containerList').DataTable();
        table
            .clear()
            .draw();

       // alert("Cleared Data successfully")
    }

    //$("#clearValue").click(function () {
    //    $("#Count20Size").val("");
    //    $("#Count40Size").val("");
    //    $("#Count45Size").val("");
    //    $("#TotalTeus").val("");
    //});
</script>
<script>
    function ClearInvalidClass()
    {
        $("#ddlAgent").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlShippinLine").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#ddlshipper").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#ddlConsignee").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#txtViaNo").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlVessel").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#txtBLNo").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlHaulage").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlIGM").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlTransport").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#ddlPol").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlSalesPerson").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#txtBLNo").removeClass("is-valid state-valid is-invalid state-invalid")
        //$("#ddlCha").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlPort").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlKAM").removeClass("is-valid state-valid is-invalid state-invalid")

        $("#ContainerNo").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlSize").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlISOCode").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlCargotype").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlCommodity_group").removeClass("is-valid state-valid is-invalid state-invalid")
        $("#ddlFL").removeClass("is-valid state-valid is-invalid state-invalid")

    }
</script>
<script>
    function validateSaveFunction() {
        debugger;
        // alert("hifg");
        var ddlAgent = document.getElementById('ddlAgent').value;
        var ddlShippinLine = document.getElementById('ddlShippinLine').value;
        //var ddlshipper = document.getElementById('ddlshipper').value;
        //var ddlConsignee = document.getElementById('ddlConsignee').value;
      //  var txtViaNo = document.getElementById('txtViaNo').value;
        var ddlVessel = document.getElementById('ddlVessel').value;
       // var ddlPort = document.getElementById('ddlPort').value;
        //var txtBLNo = document.getElementById('txtBLNo').value;
        //var BLdatePicker = document.getElementById('BLdatePicker').value;
        var ddlHaulage = document.getElementById('ddlHaulage').value;
        var ddlIGM = document.getElementById('ddlIGM').value;
        var ddlTransport = document.getElementById('ddlTransport').value;
        //var ddlPol = document.getElementById('ddlPol').value;
        var ddlSalesPerson = document.getElementById('ddlSalesPerson').value;
        var ddlKAM = document.getElementById('ddlKAM').value;
        var ddlJoType = document.getElementById('ddlJoType').value;


        var blResult = Boolean;
        blResult = true;


        //if (ddlAgent == "") {
        //    //  document.getElementById('ContainerNo').style.borderColor = "red"
        //    $("#ddlAgent").removeClass("form-control is-valid state-valid")
        //    $("#ddlAgent").addClass("form-control is-invalid state-invalid")
        //    blResult = blResult && false;
        //}


        if (ddlShippinLine == "") {
            $("#ddlShippinLine").removeClass("form-control is-valid state-valid")
            $("#ddlShippinLine").addClass("form-control is-invalid state-invalid")
            blResult = blResult && false;
        }

        //if (ddlshipper == "") {
        //    $("#ddlshipper").removeClass("form-control is-valid state-valid")
        //    $("#ddlshipper").addClass("form-control is-invalid state-invalid")
        //    blResult = blResult && false;
        //}
        //if (ddlConsignee == "") {
        //    $("#ddlConsignee").removeClass("form-control is-valid state-valid")
        //    $("#ddlConsignee").addClass("form-control is-invalid state-invalid")
        //    blResult = blResult && false;
        //}
        //if (txtViaNo == "") {
        //    $("#txtViaNo").removeClass("form-control is-valid state-valid")
        //    $("#txtViaNo").addClass("form-control is-invalid state-invalid")
        //    blResult = blResult && false;
        //}
        if (ddlVessel == "") {
            $("#ddlVessel").removeClass("form-control is-valid state-valid")
            $("#ddlVessel").addClass("form-control is-invalid state-invalid")
            blResult = blResult && false;
        }
        //if (ddlPort == "") {
        //    $("#ddlPort").removeClass("form-control is-valid state-valid")
        //    $("#ddlPort").addClass("form-control is-invalid state-invalid")
        //    blResult = blResult && false;
        //}
        //if (txtBLNo == "") {
        //    $("#txtBLNo").removeClass("form-control is-valid state-valid")
        //    $("#txtBLNo").addClass("form-control is-invalid state-invalid")
        //    blResult = blResult && false;
        //}
        //if (BLdatePicker == "") {
        //    $("#BLdatePicker").removeClass("form-control is-valid state-valid")
        //    $("#BLdatePicker").addClass("form-control is-invalid state-invalid")
        //    blResult = blResult && false;
        //}
        if (ddlHaulage == "") {
            $("#ddlHaulage").removeClass("form-control is-valid state-valid")
            $("#ddlHaulage").addClass("form-control is-invalid state-invalid")
            blResult = blResult && false;
        }
        if (ddlIGM == "") {
            $("#ddlIGM").removeClass("form-control is-valid state-valid")
            $("#ddlIGM").addClass("form-control is-invalid state-invalid")
            blResult = blResult && false;
        }
        if (ddlTransport == "") {
            $("#ddlTransport").removeClass("form-control is-valid state-valid")
            $("#ddlTransport").addClass("form-control is-invalid state-invalid")
            blResult = blResult && false;
        }
        //if (ddlPol == "") {
        //    $("#ddlPol").removeClass("form-control is-valid state-valid")
        //    $("#ddlPol").addClass("form-control is-invalid state-invalid")
        //    blResult = blResult && false;
        //}
        if (ddlSalesPerson == "") {
            $("#ddlSalesPerson").removeClass("form-control is-valid state-valid")
            $("#ddlSalesPerson").addClass("form-control is-invalid state-invalid")
            blResult = blResult && false;
        }

        if (ddlJoType == "") {
            $("#ddlJoType").removeClass("form-control is-valid state-valid")
            $("#ddlJoType").addClass("form-control is-invalid state-invalid")
            blResult = blResult && false;
        }

        if (ddlKAM == "") {
            $("#ddlKAM").removeClass("form-control is-valid state-valid")
            $("#ddlKAM").addClass("form-control is-invalid state-invalid")
            blResult = blResult && false;
        }

        if (blResult == false) { alert('Please fill the required fields!'); }
        return blResult;

    };

</script>
<script>
    $('#btnImport').click(function () {
        debugger;
        //$('#btnImport').attr('disabled', 'disabled');
        //alert("Hello");
        if (window.FormData !== undefined) {

            var fileUpload = $("#fileImport").get(0);
            var files = fileUpload.files;

            // Create FormData object
            var fileData = new FormData();
            if (files.length == 0) {
                alert("Please select File!")
                return false;
            }
            else {
                //   alert(document.getElementById('fileJOAttachment').files[0].size / 1024)
                var iSize = document.getElementById('fileImport').files[0].size / 1024
                $('#hdnFileCount').val(files.length);

                iSize = (Math.round((iSize / 1024) * 100) / 100)
                //alert(iSize)
                var ddlFileType = document.getElementById('ddlFileType').value;
                var txtViaNo = document.getElementById('txtViaNo').value;
                var txtJONo = document.getElementById('JONo').value;
                if (iSize > 5) {
                    alert("Selected file size more than 5 MB")
                    return false;
                }
                // Looping over all files and add it to FormData object
                for (var i = 0; i < files.length; i++) {

                    fileData.append(files[i].name, files[i]);
                }

                if (ddlFileType == '') {
                    alert("Please select File Type");
                    return false;
                }

                //if (txtViaNo == '') {
                //    alert("Please Enter Via No");
                //    return false;
                //}


                $('#btnImport').attr('disabled', 'disabled');

                // Adding one more key to FormData object
                fileData.append('username', 'Manas');
                fileData.append('FileTypeId', ddlFileType);
                fileData.append('ViaNo', txtViaNo);
                fileData.append('JoNo', txtJONo);
                debugger;
                // alert("hi")
                $.ajax({
                    url: '/BLEntry/UploadIGMFile',
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (Data) {
                        //$('#btnImport').removeAttr('disabled');
                        try {
                            if (Data > 0) {
                                ShowSelectedValue(Data);
                                $('#btnImport').removeAttr('disabled', 'disabled');
                            }
                            else {
                                $("#divIgmErrorShow").css('visibility', 'visible');
                                alert('Getting Error while upload . Please click on Error Genarate Button for details !');
                            }
                        }
                        catch (ex) {
                            //$('#btnImport').removeAttr('disabled');
                            alert(ex.validationMessage);
                        }
                    }
                });
                //$('#btnImport').removeAttr('disabled');

            }
        }
    });
</script>
 
<script>

    function RemoveAllContainerData()
    {
        var itemcount = checkItemcount();
        if (itemcount) {
            var r = confirm("Are you sure want to remove Container data?");
            if (r == true) {

                $.ajax({
                    type: 'POST',
                    url: '/BLEntry/DeleteTempAllRecords',
                    //  data: '{viewModel: ' + JSON.stringify(viewModel) + ', containerData: ' + JSON.stringify(SelectedData) + '}',
                    //data: JSON.stringify(formData),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    success: function (data) {
                    }
                });
                var table = $('#containerList').DataTable();
                table
                    .clear()
                    .draw();
            }
            else {
            }
        }
    }
</script>

<script>
function ContainetCount() {
    alert("hi");
        var table = $('#containerList').DataTable();

        table.rows().every(function () {
            console.log(this.data());

          //  alert(this.data['Size'])
        });
}
</script>

 

<script>
    function ShowSelectedValue(data) {
        debugger;
        var IGMFileId = data;

        //var Igm = JSON.stringify(IGMFileId);
        $.ajax({
            url: '/BLEntry/GridViewBindDetailsNew',
            type: 'Post',
            data: '{ igm:' + JSON.stringify(IGMFileId) +'}',
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                debugger;
                if (data.length == 0) {
                    alert("No Record found")
                }
                else {
                    alert("File Download successfully.")
                }

                //-=======Display Total Container Details with Teus
                try {
                    DisplayContSize(data);
                }
                catch (ex) { }
                //-=======End Total Container Details with Teus
                debugger;
                $("#containerList").empty();

                $('#containerList').dataTable({
                    "destroy": true,
                    "bLengthChange": false,
                    "aaData": data,
                    "bInfo": false,
                    "bPaginate": false,
                    "bFilter": true,
                    "paging": false,

                    "columns": [
                        { "data": "ContainerNo" },
                        { "data": "Size" },
                        { "data": "FclLcl" },
                        { "data": "isocode" },
                        { "data": "CargoType" },
                        { "data": "ScanType" }
                    ]

                });


            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }

        });

    }

    function DisplayContSize(table) {
        debugger;
        //var Count20Size = document.getElementById('Count20Size');
        //var Count40Size = document.getElementById('Count40Size');
        //var Count45Size = document.getElementById('Count45Size');
        //var TotalTeus = document.getElementById('TotalTeus');
        var totCount20 = 0;
        var totCount40 = 0;
        var totCount45 = 0;
        var totTeus = 0;

        try {
            $.each(table, function (k, v) {
                //debugger;
                if (v.Size != '') {
                    if (v.Size == '20') {
                        totCount20 = totCount20 + 1;
                    }
                    else if (v.Size == '40') {
                        totCount40 = totCount40 + 1;
                    }
                    else if (v.Size == '45') {
                        totCount45 = totCount45 + 1;
                    }

                    if (v.Size == '40' || v.Size == '45') {
                        totTeus = totTeus + 2;
                    }
                    else {
                        totTeus = totTeus + 1;
                    }
                }
            });

            $('#Count20Size').val(totCount20);
            $('#Count40Size').val(totCount40);
            $('#Count45Size').val(totCount45);
            $('#TotalTeus').val(totTeus);
        }
        catch (ex) { }
    };


</script>