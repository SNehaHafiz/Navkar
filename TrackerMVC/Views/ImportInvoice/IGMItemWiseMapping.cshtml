@model TrackerMVCEntities.BusinessEntities.JobOrderMEntities
@{ ViewBag.Title = "IGM Item Wise Periodic Mapping";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml"; }
<style>

    .table thead th, .text-wrap table thead th {
        background-color: #9f78ff;
        color: white;
    }

    .required {
        content: "*";
        color: red;
        font: bold;
        font-size: x-large;
        padding-bottom: -50px;
        vertical-align: middle;
    }
</style>
<script src="~/js/GetTableJsonPagging.js"></script>

<div id="divPendency">
    <div class="page-header">
        <h4 class="page-title">Awaiting To Generate Periodic Invoice</h4>
        <div class="ibox-content  text-right">
            <button onclick="gotoForm();" class="btn btn-primary btn-success" style="color:white;align-content:center;"><i class="fa fa-plus" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Add Export In"></i>  </button>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-sm-12">
            <div class="card">
                <div class="card-body">
                    <div class="row" style="display:none">
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">As On</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("txtAsOn", null, new { @class = "form-control form_datetime1 ", @id = "txtAsOn", autocomplete = "off", @Value = DateTime.Now.ToString("dd MMM yyyy 00:00"), onkeydown = "return false;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label" style="visibility:hidden">.</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        <button type="button" class="btn btn-icon btn-primary" name="clearProfile" title="Show" id="btnShow" onclick="getPendencyList()"><i class="fa fa-search"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <button class="btn btn-orange" id="btnSearch" title="Export To Excel" type="button"><i class="fa fa-file-excel-o" onclick="GetExcelFile1()"></i></button>

                        <div class="col-md-12 col-lg-12">
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblEmptyInPendency"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="divReport" style="display:none">
    <div class="page-header">
        <h4 class="page-title">IGM Item Wise Periodic Mapping</h4>
        <div class="form-group">
            <label class="form-label"></label>
            <div class="row gutters-xs">
                <div class="col">
                    <button type="button" class="btn btn-icon btn-teal" name="summarylist" title="Summary list" id="summarylist" onclick="Showdetails();"><i class="fa fa-file-text"></i></button>

                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Search On <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlSearchOn", new List<SelectListItem>
                                                                            { new SelectListItem { Text = "--Select--", Value = ""},
                                            new SelectListItem { Text = "Container No", Value = "Container No"},
                                            new SelectListItem { Text = "IGM-Item No", Value = "IGM-Item No"},
                                            new SelectListItem { Text = "BL No", Value = "BL No"},
                                            }, new { @class = "form-control ", autocomplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-3 col-sm-12" id="divContainer" style="display: none">
                                <div class="form-group">
                                    <label class="form-label">Container No <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtContainerNo", null, new { @class = "form-control", @id = "txtContainerNo", name = "txtContainerNo", autocomplete = "off", placeholder = "Container No", @style = "text-transform: uppercase;", maxlength = 11 })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" id="divBL" style="display: none">
                                <div class="form-group">
                                    <label class="form-label">BL No <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtBlnumber", null, new { @class = "form-control", @id = "txtBlnumber", name = "txtBlnumber", autocomplete = "off", placeholder = "BL No" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" id="divIGMNo" style="display: none">
                                <div class="form-group">
                                    <label class="form-label">IGM No <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtIGMNo", null, new { @class = "form-control", @id = "txtIGMNo", name = "txtIGMNo", autocomplete = "off", placeholder = "IGM No" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12" id="divItemNo" style="display: none">
                                <div class="form-group">
                                    <label class="form-label">Item No <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtItemNo", null, new { @class = "form-control", @id = "txtItemNo", name = "txtItemNo", autocomplete = "off", placeholder = "Item No" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-1 col-sm-12" id="divall">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden">. <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <button class="btn btn-primary" title="Show" data-toggle="tooltip" data-placement="bottom" id="btnSearch" onclick="getUpdateCustomers()">
                                                <i class="fe fe-search"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label"></label>
                                    <div class="row">
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblReport"></table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-8 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Customer  <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input type="text" class="form-control" id="ddlCustomerName" />
                                            <input type="hidden" class="form-control" id="hdnCustomerName" />
                                            <input type="hidden" class="form-control" id="CustID" />
                                            @*@Html.DropDownListFor(model => model.BillParty, (IEnumerable<SelectListItem>)ViewBag.Customer, "--Select--", new { @class = "form-control", @id = "ddlCustomerName", name = "ddlCustomerName", autoComplete = "on" })*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-12" style="display:none">
                                <div class="form-group">
                                    <label class="form-label">Customer <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @*@Html.DropDownList("ddlCustomer", (IEnumerable<SelectListItem>)ViewBag.CustomerList, "--Select--", new { @class = "form-control", @id = "ddlCustomer", name = "ddlCustomer", autocomplete = "off" })*@
                                            @Html.TextBox("ddlAgent", null, new { @class = "form-control", @id = "ddlAgent", autocomplete = "off" })
                                            @Html.EditorFor(model => model.AgentID, new { htmlAttributes = new { @class = "form-control", @id = "AgentID", @type = "hidden" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-12" style="display:none">
                                <div class="form-group">
                                    <label class="form-label">Marketing Person <span class="required">*</span></label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlMarketingPerson", (IEnumerable<SelectListItem>)ViewBag.SalesPerson, "--Select--", new { @class = "form-control", @id = "ddlMarketingPerson", name = "ddlMarketingPerson", autocomplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="form-label"></label>
                            <div class="row gutters-xs">
                                <div class="col">
                                    <button class="btn btn-success btn-xs" title="Save" data-toggle="tooltip" data-placement="bottom" id="btnSave" onclick="return Update();"><i class="fa fa-save"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=" content-area" id="Divsummary" style="display:none">
    <div class="page-header">
        <h4 class="page-title">IGM Item Wise Map Summary</h4>
        <div class="ibox-content  text-right">
            <a onclick="getBack();" class="btn btn-primary btn-success" style="color:white;align-content:center;"><i class="fa fa-arrow-left" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Back"></i>  </a></li>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-sm-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">From Date</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("TxtFromdate", null, new { @class = "form-control form_datetime1 ", @id = "TxtFromdate", autocomplete = "off", @Value = DateTime.Now.ToString("dd MMM yyyy 00:00"), onkeydown = "return false;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">To Date</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("TxtTodate", null, new { @class = "form-control form_datetime1 ", @id = "TxtTodate", autocomplete = "off", @Value = DateTime.Now.ToString("dd MMM yyyy 23:59"), onkeydown = "return false;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group">
                                <label class="form-label" style="visibility:hidden">.</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        <button type="button" class="btn btn-icon btn-primary" name="clearProfile" title="Show" id="btnShow" onclick="GetSummarydetails()"><i class="fa fa-search"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 col-lg-12">
                            <button class="btn btn-orange" id="btnSearch" title="Export To Excel" type="button"><i class="fa fa-file-excel-o" onclick="GetExcelFile()"></i></button>
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblViewtodayGPdetails"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>function CancelPeriodic(ContainerNo, Jono) {

        var data1 = {
            'ContainerNo': ContainerNo, 'Jono': Jono
        };
        var data = JSON.stringify(data1);
        $.ajax({
            url: "/Report/Cancel_periodic",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                alert(data);

                $("#tracker-loader").fadeOut("slow");
            },

            error: function (errormessage) {

                alert("Something went wrong, Kindly contact IT team. ");
                $("#tracker-loader").fadeOut("slow");
            }
        });


    }
    $(document).ready(function () {
        $('#tblViewtodayGPdetails').dataTable({
            "bLengthChange": false,
            "bInfo": false,
            "bPaginate": false,
            // "bFilter": false,
            "paging": false,
            "order": [],
            "aoColumnDefs": [
                {
                    'bSortable': false,
                    'aTargets': [0]
                }

            ]
        })

        getPendencyList();
        AutomCom();
    })
    function AutomCom() {
        $("#ddlCustomerName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/ImportInvoice/GetGSTAdressPeriodic",
                    data: "{ 'prefixText': '" + request.term + "','Mode': '" + $("#CustID").val() + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data[0].AGName == "No Data Found") {

                            alert("Specified Customer name not found in master.");
                            $("#ddlCustomerName").val('');
                            $("#hdnCustomerName").val('');

                            return false;
                        }
                        response($.map(data, function (item) {
                            //
                            return {
                                label: item.AGName,
                                val: item.AGID
                            };
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                })
            },
            select: function (e, i) {
                //


                $("#ddlCustomerName").val(i.item.label);
                $("#hdnCustomerName").val(i.item.val);
            },
            minLength: 1
        });
    }



    function Showdetails() {
        $("#Divsummary").show();
        $("#divReport").hide();
        $("#divPendency").hide();

    }


    function gotoForm() {
        $("#divPendency").hide();
        $("#divReport").show();
        $("#Divsummary").hide();
    }
    function getBack() {

        window.location.reload();
    }
    $("#ddlAgent").autocomplete({
        source: function (request, response) {
            var process = "Customer";
            // var CFScode = document.getElementById('hdconcode').value;

            $.ajax({
                url: "/BL/getPartyNameReceipt",
                data: "{ 'prefixText': '" + request.term + "','Mode': '" + process + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //
                    if (data == "") {

                        alert("Specified line name not found in master.");
                        $("#AgentID").val('');
                        return false;
                    }


                    response($.map(data, function (item) {
                        //
                        return {
                            label: item.AGName,
                            val: item.AGID
                        };
                    }));




                },
                error: function (error) {
                    let str = error.responseText;
                    var a = str.indexOf("<title>") + 7;
                    var b = str.indexOf("</title>");
                    str = str.substring(a, b);
                    alert("Something went wrong: " + str);

                },
                failure: function (response) {
                    alert(response.responseText);
                }
            })
        },
        select: function (e, i) {
            //
            $("#ddlAgent").val(i.item.label);
            $("#AgentID").val(i.item.val);
        },
        minLength: 1
    });




    $("#ddlSearchOn").change(function () {
        var Category = $("#ddlSearchOn").val();
        if (Category == "Container No") {
            $("#divContainer").show();
            $("#divIGMNo").hide();
            $("#divItemNo").hide();
            $("#divBL").hide();
        } else if (Category == "BL No") {
            $("#divContainer").hide();
            $("#divBL").show();
            $("#divIGMNo").hide();
            $("#divItemNo").hide();
        } else if (Category == "IGM-Item No") {
            $("#divContainer").hide();
            $("#divIGMNo").show();
            $("#divItemNo").show();
            $("#divBL").hide();
        }


        else {
            $("#divContainer").hide();
            $("#divIGMNo").hide();
            $("#divItemNo").hide();
            $("#divBL").hide();
        }
    })
    function getUpdateCustomers() {
        var Category = $("#ddlSearchOn").val();
        var searchText1 = "";
        var searchText2 = "";

        if (Category == "") {
            alert("Please select search on");
            return false;
        }
        if (Category == "Container No") {
            searchText1 = $("#txtContainerNo").val();
            if (searchText1 == '') {
                alert("Please enter container no.")
                return false;
            }
            if (searchText1.length < 11) {
                alert("Container no should be 11 digit!");
                return false;
            }
        }
        if (Category == "BL No") {
            searchText1 = $("#txtBlnumber").val();
            if (searchText1 == '') {
                alert("Please enter Bl no.")
                return false;
            }
        }

        else if (Category == "IGM-Item No") {
            searchText1 = $("#txtIGMNo").val();
            searchText2 = $("#txtItemNo").val();
            if (searchText1 == '' || searchText2 == '') {
                alert("Please enter igm - item no.")
                return false;
            }
        }

        var data1 = { 'Category': Category, 'searchText1': searchText1, 'searchText2': searchText2 };
        data = JSON.stringify(data1);





        $.ajax({
            url: '/ImportInvoice/getUpdateCustomerList',
            type: 'Post',
            data: data,
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                if (data == "0" || data == "[]" || data == "") {
                    alert('No record found.');
                    return false;
                }

                fillTableData($("#tblReport"), data, "List", "List");
                data =  JSON.parse(data);

                $("#CustID").val(data[0].AGID);

                $("#tracker-loader").fadeOut("slow");

            },
            error: function (errormessage) {
                let str = errormessage.responseText;
                var a = str.indexOf("<title>") + 7;
                var b = str.indexOf("</title>");
                str = str.substring(a, b);
                alert("Something went wrong: " + str);
                $("#tracker-loader").fadeOut("slow");
            }

        });
    }


    function Update() {
        var blResult = true;
        var tablearray = [];
        var checkboxarray = [];
        $('input[type=checkbox]').each(function () {
            if (this.checked) {

                checkboxarray.push($(this).val());
            }
        });

        if (checkboxarray.length == 0) {
            alert("Please select atleast one row!");
            return false;
        }

        var table = document.getElementById("tblReport");
        var row;
        for (var i = 1; i < table.rows.length; i++) {

            row = table.rows[i];

            for (var k = 0; k < checkboxarray.length; k++) {
                var Container_No = row.cells[2].innerText;
                if (Container_No == checkboxarray[k]) {

                    row = table.rows[i];
                    var JONo = row.cells[1].innerText;
                    var ContainerNo = row.cells[2].innerText;

                    tablearray.push({
                        'JONo': JONo, 'ContainerNo': ContainerNo,
                    })
                }
            }
        }
        var Category = $("#ddlSearchOn").val();
        var ddlAgent = $("#ddlAgent").val();


        var formData = {};
        formData.SalesID = $("#ddlMarketingPerson").val();
        formData.AgID = $("#hdnCustomerName").val();

        if (Category == "") {
            $("#ddlSearchOn").removeClass("is-valid state-valid");
            $("#ddlSearchOn").addClass("is-invalid state-invalid");
            blResult = blResult && false;
        } else {
            $("#ddlSearchOn").removeClass("is-invalid state-invalid");
        }

        if (Category == "Container No") {
            var searchText1 = $("#txtContainerNo").val();
            if (searchText1 == '') {
                $("#txtContainerNo").removeClass("is-valid state-valid");
                $("#txtContainerNo").addClass("is-invalid state-invalid");
                blResult = blResult && false;
            } else {
                $("#txtContainerNo").removeClass("is-invalid state-invalid");
            }
        }

        if (Category == "BL No") {
            var searchText1 = $("#txtBlnumber").val();
            if (searchText1 == '') {
                $("#txtBlnumber").removeClass("is-valid state-valid");
                $("#txtBlnumber").addClass("is-invalid state-invalid");
                blResult = blResult && false;
            } else {
                $("#txtBlnumber").removeClass("is-invalid state-invalid");
            }
        }

        else if (Category == "IGM-Item No") {
            var searchText1 = $("#txtIGMNo").val();
            var searchText2 = $("#txtItemNo").val();
            if (searchText1 == '' || searchText2 == '') {
                $("#txtIGMNo").removeClass("is-valid state-valid");
                $("#txtIGMNo").addClass("is-invalid state-invalid");
                $("#txtItemNo").removeClass("is-valid state-valid");
                $("#txtItemNo").addClass("is-invalid state-invalid");
                blResult = blResult && false;
            } else {
                $("#txtIGMNo").removeClass("is-invalid state-invalid");
                $("#txtItemNo").removeClass("is-invalid state-invalid");
            }
        }

        //if (formData.SalesID == "") {
        //    $("#ddlMarketingPerson").removeClass("is-valid state-valid");
        //    $("#ddlMarketingPerson").addClass("is-invalid state-invalid");
        //    blResult = blResult && false;
        //} else {
        //    $("#ddlMarketingPerson").removeClass("is-invalid state-invalid");
        //}

        if (formData.AgID == "") {
            $("#ddlCustomerName").removeClass("is-valid state-valid");
            $("#ddlCustomerName").addClass("is-invalid state-invalid");
            blResult = blResult && false;
        } else {
            $("#ddlCustomerName").removeClass("is-invalid state-invalid");
        }

        if (blResult == false) {
            alert("Please fill the required fields!");
            return false;
        }

        var data1 = {
            'Tabledtl': tablearray, 'formData': formData
        };
        var data = JSON.stringify(data1);
        console.log(data)

        $.ajax({
            url: "/ImportInvoice/UpdateCustomerDtls",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                if (data.Status == 1) {
                    alert(data.Message)
                    window.location = "/ImportInvoice/IGMItemWiseMapping"
                } else if (data.Status == 0) {
                    alert(data.Message)
                }
                $("#tracker-loader").fadeOut("slow");


            },

            error: function (errormessage) {
                let str = error.responseText;
                var a = str.indexOf("<title>") + 7;
                var b = str.indexOf("</title>");
                str = str.substring(a, b);
                alert("Something went wrong: " + str);
                $("#tracker-loader").fadeOut("slow");
            }
        });



    }</script>
<script>function fillTableData(tableName, data, title, fileName) {

        //Check if table dose not exist then return error message.
        try {
            if (tableName == null) {
                alert("table not exist.");
            }

            //Check Data Table has if already initialize then need to destroy first!
            if ($.fn.DataTable.isDataTable(tableName)) {
                tableName.DataTable().destroy();
                tableName.empty();
            }

            var parseJSONResult = jQuery.parseJSON(data);

            if (parseJSONResult != null && parseJSONResult.length > 0) {
                //Get dynmmic column.
                var dynamicColumns = [];
                var i = 0;
                $.each(parseJSONResult[0], function (key, value) {
                    var obj = { sTitle: key };
                    dynamicColumns[i] = obj;
                    i++;
                });
                //fetch all records from JSON result and make row data set.
                var rowDataSet = [];
                var i = 0;
                $.each(parseJSONResult, function (key, value) {
                    var rowData = [];
                    var j = 0;
                    $.each(parseJSONResult[i], function (key, value) {
                        rowData[j] = value;
                        j++;
                    });
                    rowDataSet[i] = rowData;

                    i++;
                });
                tableName.dataTable({
                    "destroy": true,
                    "bLengthChange": false,
                    "aaData": rowDataSet,
                    "bInfo": false,
                    "deferRender": true,
                    "bPaginate": false,
                    "bFilter": true,
                    "paging": false,
                    "order": [],
                    "columns": dynamicColumns,
                    //"dom": "Bfrtip",
                    "buttons": [{
                        "extend": 'excel',
                        "title": title,
                        "filename": fileName
                    }]
                });
            }
        }
        catch (ex) {
            alert(ex.message);
        }
    }

    function checkItemcount() {

        var table = $('#example').DataTable();

        if (table.rows().count() == 0) {

            return false;
        }
        return true;

    }



    $("input").on('input', function () {
        $(this).val($(this).val().replace(/[^A-Za-z0-9._/ ]/g, ''));
    });

    function GetSummarydetails() {
        $("#tracker-loader").fadeIn("slow");
        var FromDate = $("#TxtFromdate").val();
        var ToDate = $("#TxtTodate").val();

        if (Date.parse(FromDate) > Date.parse(ToDate)) {
            alert("Invalid date range");
            return;
        }

        data1 = { 'FromDate': FromDate, 'ToDate': ToDate };
        data = JSON.stringify(data1);


        $.ajax({
            type: 'POST',
            url: '/ImportInvoice/GetPeriodicMapsummary',
            data: data,
            // data: "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: true,
            success: function (jsonResult) {
                $("#tblViewtodayGPdetails").empty();
                RepTableDataJsonwopaging($("#tblViewtodayGPdetails"), jsonResult, "Voucher Details", "VoucherDetails_List");

            },
            error: function (error) {
                let str = error.responseText;
                var a = str.indexOf("<title>") + 7;
                var b = str.indexOf("</title>");
                str = str.substring(a, b);
                alert("Something went wrong: " + str);
                $("#tracker-loader").fadeOut("slow");
            }
        });
    }


    function getPendencyList() {
        $("#tracker-loader").fadeIn("slow");
        var AsOn = $("#txtAsOn").val();


        data1 = { 'AsOn': AsOn };
        data = JSON.stringify(data1);


        $.ajax({
            type: 'POST',
            url: '/ImportInvoice/getPeriodicMapPendency',
            data: data,
            // data: "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            //  async: true,
            success: function (jsonResult) {

                $("#tracker-loader").fadeOut("slow");
                $("#tblEmptyInPendency").empty();
                RepTableDataJsonwopaging($("#tblEmptyInPendency"), jsonResult, "Voucher Details", "VoucherDetails_List");

            },
            error: function (error) {
                let str = error.responseText;
                var a = str.indexOf("<title>") + 7;
                var b = str.indexOf("</title>");
                str = str.substring(a, b);
                alert("Something went wrong: " + str);
                $("#tracker-loader").fadeOut("slow");
            }
        });
    }

    function GetExcelFile() {
        window.location = "/ImportInvoice/ExportToExcelGetPeriodicMapsummary"
    }
    function GetExcelFile1() {
        window.location = "/ImportInvoice/ExportToExcelgetPeriodicMapPendency"
    }

    </script>
