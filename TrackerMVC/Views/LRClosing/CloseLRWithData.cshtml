﻿<div>
    @model TrackerMVCEntities.BusinessEntities.LRListOpen

    <div id="divCloseLR">
        <div class=" content-area">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-3 col-sm-12" style="display:none">
                            <div class="form-group">
                                <label class="form-label mandatory">Lorry No</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("txtLorryNo", null, new { @class = "form-control", @readonly = true, @id = "txtLorryNo", name = "txtLorryNo", autocomplete = "off", placeholder = "Lorry No", @Value = ViewBag.LorryNo })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-12">
                            <div class="form-group">
                                <label class="form-label mandatory">Container No</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("txtContainerno", null, new { @class = "form-control", @readonly = true, @id = "txtContainerno", name = "txtContainerno", autocomplete = "off", placeholder = "Container No", @maxlength = 11, @Value = ViewBag.ContainerNo })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-12">
                            <div class="form-group">
                                <label class="form-label mandatory">Vehicle No</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("txtVehicleno", null, new { @class = "form-control", @readonly = true, @id = "txtVehicleno", name = "txtVehicleno", autocomplete = "off", placeholder = "Vehicle No", @maxlength = 11, @Value = ViewBag.VehicleNo })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-3 col-sm-12">
                            <div class="form-group">
                                <label class="form-label mandatory">From Location(Out)</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("txtFromLocation", null, new { @class = "form-control", @readonly = true, @id = "txtFromLocation", name = "txtFromLocation", autocomplete = "off", placeholder = "To Location", @Value = ViewBag.FromLocation })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-12">
                            <div class="form-group">
                                <label class="form-label mandatory">To Location(Out)</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.TextBox("txtToLocation", null, new { @class = "form-control", @readonly = true, @id = "txtToLocation", name = "txtToLocation", autocomplete = "off", placeholder = "From Location", @Value = ViewBag.ToLocation })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-3 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">Factory Reporting Date</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @*@Html.EditorFor(model => model.FactoryReportingTime, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "FactoryRepDate", @Value = DateTime.Now.ToString("dd MMM yyyy HH:mm") } })*@

                                        @Html.TextBox("FactoryRepDate", null, new { @class = "form-control form_datetime1", @Value = DateTime.Now.ToString("dd MMM yyyy HH:mm") })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">Factory In Date</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.EditorFor(model => model.FactoryInTime, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "FactoryInDate", @Value = DateTime.Now.ToString("dd MMM yyyy HH:mm") } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">Factory Out Date</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.EditorFor(model => model.FactoryOutTime, new { htmlAttributes = new { @class = "form-control form_datetime1", @id = "FactoryOutDate", @Value = DateTime.Now.ToString("dd MMM yyyy HH:mm") } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-12">
                            <div class="form-group">
                                <label class="form-label">IN-From Location</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @Html.DropDownList("DDLInfromLocation", (IEnumerable<SelectListItem>)ViewBag.Location, "--Select--", new { @class = "form-control", @id = "DDLInfromLocation", name = "DDLInfromLocation", autocomplete = "off" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-9 col-sm-12">
                            <div class="form-group label-floating">
                                <label class="form-label">Closed Remarks</label>
                                @Html.TextArea("txtCloseRemarks", null, new { @class = "form-control", @id = "txtCloseRemarks", name = "txtCloseRemarks", autocomplete = "off", rows = "2", @maxlength = 150 })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-5 col-sm-12">
                            <div class="form-group">
                                <label class="form-label mandatory"> Document Type</label>
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @*@html.dropdownlistfor(model => model.docid, (ienumerable<selectlistitem>)viewbag.doclist, new { @class = "form-control ", @id = "ddldoclist", name = "ddldoclist" })*@
                                        @Html.DropDownList("ddlDocList", (IEnumerable<SelectListItem>)ViewBag.DocList, "--Select--", new { @class = "form-control", @id = "ddlDocList", name = "ddlDocList", autocomplete = "off" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4 col-sm-12">
                            <div class="form-group" style="padding-top:30px">
                                <div class="row gutters-xs">
                                    <div class="col">
                                        <input type="file" id="fileImport" name="postedFile" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-2 col-sm-12">
                            <div class="form-group" style="padding-top:25px">
                                <div class="row gutters-xs">
                                    <div class="col">
                                        @*<input type="Button" id="btnImport" value="Import" class="btn btn-primary" />*@

                                        <button class="btn btn-primary" id="btnUpload" type="button" onclick="UploadClick();">Upload</button>
                                        <button class="btn btn-primary" id="btnView" style="display:none" type="button">View all</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-8 col-sm-12">
                            <div class="table-responsive">
                                <table id="example3" class="table table-bordered table-hover tbl-cart text-nowrap" style="width:100%">
                                    <thead style="display:none">
                                        <tr>

                                            <th class="wd-10p sorting">Document Type</th>

                                        </tr>
                                    </thead>

                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-2 col-sm-12">
                <div class="form-group" style="padding-top:25px">
                    <div class="row gutters-xs">
                        <div class="col">
                            @*<input type="Button" id="btnImport" value="Import" class="btn btn-primary" />*@
                            <button class="btn btn-success" id="btnSave" type="button" onclick="SaveClosing();">Save</button>
                            <button class="btn btn-default" id="btnClear" type="button" onclick="OnCLear();">Clear</button>
                            <div class="row" style=" display:none">
                                @Html.TextBox("LRDate", null, new { @class = "form-control form_datetime1", @Value = @ViewBag.LRDate })
                            </div>
                           


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    $(document).ready(function () {
        //alert('hi')
        GetDocList();
        GetLocationID('@ViewBag.ToLocation');
        //$(window).on("load", function (e) {
        //    alert('hi')
        //    $("#tracker-loader").fadeOut("slow");

        //})
    })

</script>
<script>

        function UploadClick() {

            $("#tracker-loader").fadeIn("slow");
            if (window.FormData !== undefined) {
                var fileUpload = $("#fileImport").get(0);
                var files = fileUpload.files;
                var fileData = new FormData();
                var LRNoFile = $("#txtLorryNo").val();
                var DocID = $("#ddlDocList option:selected").val()

                if (files.length == 0) {
                    alert("Please select File!")
                    return false;
                }
                else {
                    for (var i = 0; i < files.length; i++) {

                        fileData.append(files[i].name, files[i]);
                    }
                    fileData.append('LRNoFile', LRNoFile);
                    fileData.append('DocID', DocID);
                    $.ajax({
                        url: '/LRClosing/ImportFile',
                        type: "POST",
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        data: fileData,
                        success: function (data) {
                            alert(data);
                            GetDocList();
                            $("#ddlDocList").val('');
                            $("#tracker-loader").fadeOut("slow");
                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                            $("#tracker-loader").fadeOut("slow");
                        }
                    });
                }
            }
            else {
                alert("FormData is not supported.");
                $("#tracker-loader").fadeOut("slow");
            }
            $("#fileImport").val('');
        }

    function GetDocList() {

        $("#tracker-loader").fadeIn("slow");
        var LRNo = $("#txtLorryNo").val();
        var datac = { 'LRNo': LRNo}
        var datac = JSON.stringify(datac);
        $.ajax({
            url: "/LRClosing/GetScannedList",
            data: datac,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#example3").empty();
                RepTableDataJson($("#example3"), data, "Scanned List", "ScannedList");
                $("#tracker-loader").fadeOut("slow");
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
                $("#tracker-loader").fadeOut("slow");
            }
        })
    }
    function SaveClosing() {
        $("#tracker-loader").fadeIn("slow");
        var LRNo = $("#txtLorryNo").val();
        var FactoryRepDate = $("#FactoryRepDate").val();
        var FactoryInDate = $("#FactoryInDate").val();
        var FactoryOutDate = $("#FactoryOutDate").val();
        var txtCloseRemarks = $("#txtCloseRemarks").val();
        var InFromLocation = $("#DDLInfromLocation option:selected").val();
        var InFromLocation1 = $("#DDLInfromLocation option:selected").text();
        var TOlocation = $("#txtToLocation").val();
        var LRDATE = $("#LRDate").val();

        if ((new Date(LRDATE) > new Date(FactoryRepDate))) {
            document.getElementById("FactoryRepDate").style.borderColor = "red";
            alert("LR Date Should be Greater than Factory Reporting date!");

            $("#tracker-loader").fadeOut("slow");
            return false;

        }
        if ((new Date(FactoryRepDate) > new Date(FactoryInDate))) {
            document.getElementById("FactoryInDate").style.borderColor = "red";
            alert("Factory In Date Should be Greater than Factory Reporting date!");

            $("#tracker-loader").fadeOut("slow");
            return false;

        }

        if ((new Date(FactoryInDate) >= new Date(FactoryOutDate))) {
            document.getElementById("FactoryOutDate").style.borderColor = "red";
            alert("Factory Out Date Should be Greater than Factory In date!");

            $("#tracker-loader").fadeOut("slow");
            return false;

        }
            var itemcount = checkItemcount();
       
      
        if (itemcount) {
            if (FactoryRepDate == "") {
                alert("Please select Factory Reporting Time")
                $("#FactoryRepDate").focus();
                $("#tracker-loader").fadeOut("slow");
                return false;
            }
            if (FactoryInDate == "") {
                alert("Please select Factory In Time")
                $("#FactoryInDate").focus();
                $("#tracker-loader").fadeOut("slow");
                return false;
            }
            if (FactoryOutDate == "") {
                alert("Please select Factory Out Time")
                $("#FactoryOutDate").focus();
                $("#tracker-loader").fadeOut("slow");
                return false;
            }
            if (txtCloseRemarks == "") {
                alert("Please enter closing remarks")
                $("#txtCloseRemarks").focus();
                $("#tracker-loader").fadeOut("slow");
                return false;
            }
            var data1 = { 'LRNo': LRNo, 'FactoryRepDate': FactoryRepDate, 'FactoryInDate': FactoryInDate, 'FactoryOutDate': FactoryOutDate, 'CloseRemarks': txtCloseRemarks, 'InFromLocation': InFromLocation }
            var data = JSON.stringify(data1);
            

            if (InFromLocation1 != TOlocation) {
                var r = confirm("you have selected different from-In Location!");
                if (r == true) {
                    $.ajax({
                url: "/LRClosing/SaveClosing",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (Data) {
                    
                    if (Data == 1) {
                        alert("Lorry Receipt " + LRNo + " Closed Successfully");
                        //document.location = '@Url.Action("LRClosing", "LRClosing")';
                        document.location = '@Url.Action("LRClosing", "LRClosing")';
                    }
                    else {
                        alert("Lorry Receipt not Closed. Try again!")
                    }
                    $("#tracker-loader").fadeOut("slow");
                },
                error: function (errormessage) {
                    alert("error");
                    alert(errormessage.responseText);
                    $("#tracker-loader").fadeOut("slow");
                }
            });
                } else {
                    $("#tracker-loader").fadeOut("slow");
                }
            } else {
               $.ajax({
                url: "/LRClosing/SaveClosing",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (Data) {
                    
                    if (Data == 1) {
                        alert("Lorry Receipt " + LRNo + " Closed Successfully");
                        //document.location = '@Url.Action("LRClosing", "LRClosing")';
                        document.location = '@Url.Action("LRClosing", "LRClosing")';
                    }
                    else {
                        alert("Lorry Receipt not Closed. Try again!")
                    }
                    $("#tracker-loader").fadeOut("slow");
                },
                error: function (errormessage) {
                    alert("error");
                    alert(errormessage.responseText);
                    $("#tracker-loader").fadeOut("slow");
                }
            });
            }

             
          
        }
        else {
            alert("Please upload at least one scanned document first!");
            $("#tracker-loader").fadeOut("slow");
        }
    }
    function checkItemcount() {

        var table = $('#example3').DataTable();
        alert(table.rows().count());
        if (table.rows().count() == 0) {

            return false;
        }
        return true;

    }
    function OnCLear() {
        document.location = '@Url.Action("LRClosing", "LRClosing")';
    }
</script>
<script>

    $(function () {
        var currDate = new Date();
        $(".form_datetime1").datetimepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'dd M yyyy hh:ii',
            language: "tr",
            changeMonth: true,
            changeYear: true,
            forceParse: true,
            // endDate: currDate
        })
            .on('changeDate', function (e) {
                // Revalidate the date field
                // $('#eventForm').formValidation('revalidateField', 'date');
                $('.datetimepicker').hide();
            });
        $(".DepartureDateTime").datetimepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'dd M yyyy hh:ii',
            language: "tr",
            changeMonth: true,
            changeYear: true,
            forceParse: true,
            // endDate: currDate
        })
            .on('changeDate', function (e) {
                // Revalidate the date field
                // $('#eventForm').formValidation('revalidateField', 'date');
                $('.datetimepicker').hide();
            });
        $(".RemovalDateTime").datetimepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'dd M yyyy hh:ii',
            language: "tr",
            changeMonth: true,
            changeYear: true,
            forceParse: true,
            // endDate: currDate
        })
            .on('changeDate', function (e) {
                // Revalidate the date field
                // $('#eventForm').formValidation('revalidateField', 'date');
                $('.datetimepicker').hide();
            });
    });
</script>

<script>
    function GetLocationID(ToLocation) {
        var data1 = { 'ToLocation': ToLocation };
        var data = JSON.stringify(data1);
       $.ajax({
           type: 'POST',
           url: '/LRClosing/GetLocationID',
           data: data,
           contentType: "application/json; charset=utf-8",
           dataType: "json",
           success: function (data) {
            
               $("#DDLInfromLocation").val(data);
           },
           error: function () {
               alert("error");
               $("#tracker-loader").fadeOut("slow");

           }
       });
    }
</script>
