
@{
    ViewBag.Title = "Receipt Adjustment";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
<script src="~/js/GetTableJson.js"></script>
<div class=" content-area overflow-hidden" id="divCreate">
    <div class="page-header">
        <h5 class="page-title">Receipt Adjustment</h5>
        
    </div>
    <div class="row" >
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="panel panel-primary">


                        <div class="row">
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Criteria</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlCriteria", (IEnumerable<SelectListItem>)ViewBag.CategoryList, "--All-- ", new { @class = "form-control", @id = "ddlCriteria", name = "ddlCriteria", autocomplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Receipt No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @*@Html.EditorFor(model => model.CHACode, new { htmlAttributes = new { @class = "form-control", @id = "chaCode", autocomplete = "off", maxlength = 20 } })*@
                                            @Html.TextBox("txtReceiptNo", null, new { @class = "form-control ", @id = "txtReceiptNo", name = "txtReceiptNo", autocomplete = "on" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Receipt Year</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input ID="txtReceiptyear"    value="@ViewBag.WorkYear" class="form-control" />
                                            @*@Html.EditorFor(model => model.CHACode, new { htmlAttributes = new { @class = "form-control", @id = "chaCode", autocomplete = "off", maxlength = 20 } })*@
                                            @*@Html.TextBox("txtReceiptyear", null, new { @class = "form-control ", @id = "txtReceiptyear", name = "txtReceiptyear", autocomplete = "on" })*@
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden"> '</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input type="button" id="btnShow" value="Show" class="btn btn-primary" onclick="ShowReceipt();" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Amount</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtAmount", null, new { @class = "form-control ", @id = "txtAmount", @Readonly = "true", name = "txtAmount", autocomplete = "on" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Reciept Date</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                          @*  <input ID="txtRecieptDate" type="datetime-local" value="@ViewBag.Date" class="form-control" />*@
                                            @Html.TextBox("txtRecieptDate", null, new { @class = "form-control form_datetime1", @Value = DateTime.Now.ToString("dd MMM yyyy 08:00") })


                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label">Customer</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.DropDownList("ddlCustomer", (IEnumerable<SelectListItem>)ViewBag.Customer, "--All-- ", new { @class = "form-control", @id = "ddlCustomer", name = "ddlCustomer", autocomplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-10 col-lg-10" >
                                <label class="form-label mandatory" style="color:red">Existing Details</label>
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover tbl-cart text-nowrap" id="GatFillGrid" style="width:100%;background-color:#f4f5fa !important;">
                                        <thead>
                                            <tr></tr>
                                        </thead>
                                        <tbody style="box-sizing :border-box;"></tbody>
                                    </table>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Mode</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @*@Html.EditorFor(model => model.CHACode, new { htmlAttributes = new { @class = "form-control", @id = "chaCode", autocomplete = "off", maxlength = 20 } })*@
                                            @Html.DropDownList("ddlMode", (IEnumerable<SelectListItem>)ViewBag.Mode, "--Select--", new { @class = "form-control", @id = "ddlMode", name = "ddlMode", autocomplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Amount</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtAmountReciept", null, new { @class = "form-control ", @id = "txtAmountReciept", name = "txtAmountReciept", autocomplete = "on" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Mode No</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtMode", null, new { @class = "form-control ", @id = "txtMode", name = "txtMode", autocomplete = "on" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Bank Name</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @*@Html.EditorFor(model => model.CHACode, new { htmlAttributes = new { @class = "form-control", @id = "chaCode", autocomplete = "off", maxlength = 20 } })*@
                                            @Html.DropDownList("ddlBankName", (IEnumerable<SelectListItem>)ViewBag.BankName, "--Select--", new { @class = "form-control", @id = "ddlBankName", name = "ddlBankName", autocomplete = "off" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-2 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label mandatory">Mode Date</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            @Html.TextBox("txtModeDate", null, "{0:d}", new { @class = "form-control datePicker1 ", @id = "txtModeDate", autocomplete = "off" })
                                            @*<input ID="txtModeDate" type="datetime-local" value="@ViewBag.Date" class="form-control" />*@
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-1 col-sm-12">
                                <div class="form-group">
                                    <label class="form-label" style="visibility:hidden"> '</label>
                                    <div class="row gutters-xs">
                                        <div class="col">
                                            <input type="button" id="btnAdd" value="Add" class="btn btn-primary" onclick="ShowList();" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="row">
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover tbl-cart text-nowrap" id="tblWorkOrderDets" style="width:100%;background-color:#f4f5fa !important;">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th class="wd-15p sorting">Mode no</th>
                                            <th class="wd-10p sorting">Amount</th>
                                            <th class="wd-10p sorting">Mode No</th>
                                            <th class="wd-10p sorting">Bank Name</th>
                                            <th class="wd-10p sorting">Mode Date</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>

                    </div>
                    <div class="form-group" style="margin-right">
                        <label class="form-label"></label>
                        <div class="row gutters-xs">
                            <div class="col">
                                @*<input type="submit" id="Save" name="save" value="Save" class="btn btn-success" />*@

                                <button id="btnSave" class="btn btn-success btn-xs" ; onclick="return Save();">Save</button>
                                <button id="btnSalesReceipt" class="btn btn-primarys btn-xs" ; onclick="return SalesReceipt();">Change Receipt Category</button>
                                <button id="btnSalesCategory" class="btn btn-primary btn-xs" ; onclick="return SalesCategory();">Change Invoice Category</button>
                                <button id="btnSalesCategory" class="btn btn-instagram btn-ex" ; onclick="return CustmerChange();">Change Customer Name Receipt/Invoice</button>
                                <button id="btnSalesCategory" class="btn btn-cyan btn-ex" ; onclick="return CancelCredit();">Cancel Credit</button>
                                <button id="btnSalesCategory" class="btn btn-blue btn-ex" ; onclick="return CancelDebit();">Cancel Debit</button>
                                <input type="button" name="clear" value="Clear" class="btn btn-default" title="clear" id="clearValue" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function ShowReceipt() {
        debugger;
      
        debugger;
        var Criteria  = $("#ddlCriteria").val();
        var ReceiptNo = $("#txtReceiptNo").val();
        var WorkYear = $("#txtReceiptyear").val();

       

        if (ReceiptNo == "") {
            document.getElementById("txtReceiptNo").style.borderColor = "red";
            alert('Please Choose Your Receipt No!')
            event.preventDefault();
            return;
        }
      
        var data1 = { 'Criteria': Criteria, 'ReceiptNo': ReceiptNo, 'WorkYear': WorkYear };
        var data = JSON.stringify(data1);
        
        
            $.ajax({
                url: "/ReceiptAdjustment/GetLocationDetails",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                // dataType: "json",
                
                success: function (data) {
                    
                    $("#ddlCustomer").val(data[0].Payfromid);
                    $("#txtRecieptDate").val(data[0].RecieptDate)
                    $("#txtAmount").val(data[0].NetAmount)
                    $("#ddlCriteria").val(data[0].Criteria)
                    getfata(Criteria, ReceiptNo, WorkYear);
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }


            })
         
    }
    function getfata(Criteria, ReceiptNo,WorkYear) {

        var data1 = { 'Criteria': Criteria, 'ReceiptNo': ReceiptNo, 'WorkYear': WorkYear };
        var data = JSON.stringify(data1);
        $.ajax({
            url: "/ReceiptAdjustment/GetSearch",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            // dataType: "json",
            success: function (data) {
                RepTableDataJson($("#tblWorkOrderDets"), data, "GetInvoiceBind", "GetInvoiceBind");
                $("#tracker-loader").fadeOut("slow");


            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        })
    }
     function Save() {
         var res = Calculate();

         if (res == false) {
             alert("Please Check the Amount!");
             return false;
         }
         var ReceiptNo = $("#txtReceiptNo").val();
         var WorkYear = $("#txtReceiptyear").val();
         var ReceiptDate = $("#txtRecieptDate").val();
         var Payfromid = $("#ddlCustomer").val();
         var Category = $("#ddlCriteria").val();

         var itemcount = checkItemcount();
         if (itemcount) {
             $("#btnsave").attr('disabled', 'disabled');
             var SelectedData = new Array();
             var table = document.getElementById("tblWorkOrderDets");

             var row;
             for (var i = 1; i < table.rows.length; i++) {

                 row = table.rows[i];
                 ModeNo = row.cells[1].innerText;
                 Mode = row.cells[2].innerText;
                 ModeDate = row.cells[3].innerText;
                 BankName = row.cells[4].innerText;
                 Amount = row.cells[5].innerText;
                 SelectedData.push({ 'ModeNo': ModeNo, 'Mode': Mode, 'ModeDate': ModeDate, 'BankName': BankName, 'Amount': Amount })
             }
             var data1 = { 'ReceiptNo': ReceiptNo, 'ReceiptDate': ReceiptDate, 'Payfromid': Payfromid, 'Category': Category, 'WorkYear': WorkYear, 'SelectedData': SelectedData };
             var data = JSON.stringify(data1);


             $.ajax({
                 url: "/ReceiptAdjustment/ReceiptMovementmovementSave",
                 data: data,
                 type: "POST",
                 contentType: "application/json; charset=utf-8",
                 dataType: "json",
                 success: function (response) {

                     if (response >= "1") {
                         alert("Record saved successfully");
                         window.location = "/ReceiptAdjustment/ReceiptAdjustment";
                         //Clear();
                     }
                     else {
                         alert("Record not saved successfully. Try Again!");
                         $("#btnsave").removeAttr('disabled');
                     }
                 },
                 error: function (errormessage) {
                     alert("error");
                     alert(errormessage.responseText);
                 }
             })
         }
         else {
             alert("Please Add Receipt details");
         }


    }

    function SalesReceipt() {
        var ReceiptNo = $("#txtReceiptNo").val();
        var WorkYear = $("#txtReceiptyear").val();
        var Category = $("#ddlCriteria").val();

        var data1 = { 'ReceiptNo': ReceiptNo, 'WorkYear': WorkYear ,   'Category': Category };
        var data = JSON.stringify(data1);
        $.ajax({
            url: "/ReceiptAdjustment/ReceiptSalesReceipt",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                if (response >= "1") {
                    alert("Record saved successfully");
                    window.location = "/ReceiptAdjustment/ReceiptAdjustment";
                
                }
                else {
                    alert("Record not saved successfully. Try Again!");
                    $("#btnSalesReceipt").removeAttr('disabled');
                }
            },
            error: function (errormessage) {
                alert("error");
                alert(errormessage.responseText);
            }
        })
    }

    function CustmerChange() {
        var ReceiptNo = $("#txtReceiptNo").val();
        var WorkYear = $("#txtReceiptyear").val();
        var Category = $("#ddlCriteria").val();
        var Customer = $("#ddlCustomer").val();
        var data1 = { 'ReceiptNo': ReceiptNo, 'WorkYear': WorkYear, 'Customer': Customer };
        var data = JSON.stringify(data1);
        $.ajax({
            url: "/ReceiptAdjustment/ReceiptCustmerChange",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                if (response >= "1") {
                    alert("Record saved successfully");
                    window.location = "/ReceiptAdjustment/ReceiptAdjustment";

                }
                else {
                    alert("Record not saved successfully. Try Again!");
                    $("#btnSalesReceipt").removeAttr('disabled');
                }
            },
            error: function (errormessage) {
                alert("error");
                alert(errormessage.responseText);
            }
        })
    }

    function SalesCategory() {
        debugger;
        var ReceiptNo = $("#txtReceiptNo").val();
        var WorkYear = $("#txtReceiptyear").val();
        var Category = $("#ddlCriteria option:selected").text();

        var data1 = { 'ReceiptNo': ReceiptNo, 'WorkYear': WorkYear, 'Category': Category };
        var data = JSON.stringify(data1);
        $.ajax({
            url: "/ReceiptAdjustment/ReceiptSalesCategory",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                if (response >= "1") {
                    alert("Record saved successfully");
                    window.location = "/ReceiptAdjustment/ReceiptAdjustment";

                }
                else {
                    alert("Record not saved successfully. Try Again!");
                    $("#btnSalesReceipt").removeAttr('disabled');
                }
            },
            error: function (errormessage) {
                alert("error");
                alert(errormessage.responseText);
            }
        })
    }

    function checkItemcount() {

        var table = $('#tblWorkOrderDets').DataTable();

        if (table.rows().count() == 0) {

            return false;
        }
        return true;
    }

    $(function () {

        $('.datePicker1').datepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'dd M yyyy',
            language: "tr",
            changeMonth: true,
            changeYear: true

        })
            .on('changeDate', function (e) {

                $('.datepicker').hide();
            });
    });



     function ShowList() {
     
        var data = [];
        var table = document.getElementById("tblWorkOrderDets");

        //var res = validate();
        //if (res == false) {
        //    return false;
        //}
        var ddlModeID = $("#ddlMode option:selected").val();
        if (ddlModeID == "") {
            var ddlMode = "";
        }
        var ddlBankNameID = $("#ddlBankName option:selected").val();
        if (ddlBankNameID == "") {
            var ddlBankName = "";
        }


        else {
            var mode = $("#ddlMode option:selected").text();
            var modeamount = $("#txtAmountReciept").val();
            var modename = $("#txtMode").val();
            var bankname = $("#ddlBankName option:selected").text();
            var modedate = $("#txtModeDate").val();
        
          
            var t = $('#tblWorkOrderDets').DataTable();
            t.row.add([
                "<button type=\"button\" class=\"btn btn-icon btn-primary btn-danger removebutton \" name=\"removebutton\" style=\"height:35px;\" onclick=\"CancelI(this)\"><i class=\"fe fe-trash\" style=\"font-size: 16px;\"></i></button>",
                modename,
                mode,
                modedate,
                bankname,
                modeamount
            ]).draw(false);
        }

        document.getElementById('ddlMode').value = "";
        document.getElementById('txtAmountReciept').value = "";
        document.getElementById('txtMode').value = "";
        document.getElementById('ddlBankName').value = "";
        document.getElementById('txtModeDate').value = "";
    }

    function CancelI(modeno) {
        debugger;
         
        var r = confirm("Do you want to Delete this Mode No '" + modeno + "'!");
        if (r == true) {
            var table = $('#tblWorkOrderDets').DataTable();
            $('#tblWorkOrderDets tbody').on('click', '.removebutton', function () {

                table
                    .row($(this).parents('tr'))
                    .remove()
                    .draw();


            });
        }
        else {
            alert("you pressed cancelled!")
        }

    }
    
    function CancelItem(modeno, modename, modeamount, EntryId) {
        debugger;
        var ReceiptNo = $("#txtReceiptNo").val();
        var Receiptyear = $("#txtReceiptyear").val();
        
        txtReceiptyear
        var r = confirm("Do you want to Delete this Mode No '"+ modeno +"'!");
        if (r == true) {
            var data1 = { 'ReceiptNo': ReceiptNo, 'modeno': modeno, 'modename': modename, 'modeamount': modeamount, 'Receiptyear': Receiptyear, 'EntryId': EntryId};
            var data = JSON.stringify(data1);
            $.ajax({
                url: "/ReceiptAdjustment/ReceiptCancel",
                data: data,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {

                    alert(response)
                    window.location = "/ReceiptAdjustment/ReceiptAdjustment";
                },
                error: function (errormessage) {
                    alert("error");
                    alert(errormessage.responseText);
                }
            })
        }
        else{
            alert("you pressed cancelled!")
        }
       
    }


    function Calculate() {
        var table = document.getElementById("tblWorkOrderDets");
        var Count = 0;
        var row;
        for (var i = 1; i < table.rows.length; i++) {
            row = table.rows[i];
            Amount = row.cells[5].innerText;
            Count = Count + Number(Amount);
        }

        var AmountOld = document.getElementById('txtAmount').value;
        if (Count == AmountOld) {
            return true;
        } else {
            return false;
        }
    }

    function CancelCredit() {
        debugger;
        var ReceiptNo = $("#txtReceiptNo").val();
        var WorkYear = $("#txtReceiptyear").val();
        var Remarks = prompt("Please enter  Remarks");

        var data1 = { 'ReceiptNo': ReceiptNo, 'WorkYear': WorkYear, 'Remarks': Remarks };
        var data = JSON.stringify(data1);
        $.ajax({
            url: "/ReceiptAdjustment/ReceiptCancel_Credit",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                alert(response)
            },
            error: function (errormessage) {
                alert("error");
                alert(errormessage.responseText);
            }
        })
    }
    function CancelDebit() {
        debugger;
        var ReceiptNo = $("#txtReceiptNo").val();
        var WorkYear = $("#txtReceiptyear").val();
        var Remarks = prompt("Please enter  Remarks");

        var data1 = { 'ReceiptNo': ReceiptNo, 'WorkYear': WorkYear, 'Remarks': Remarks };
        var data = JSON.stringify(data1);
        $.ajax({
            url: "/ReceiptAdjustment/ReceiptCancelDebit",
            data: data,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                alert(response)
            },
            error: function (errormessage) {
                alert("error");
                alert(errormessage.responseText);
            }
        })
    }
</script>